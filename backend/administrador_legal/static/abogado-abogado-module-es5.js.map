{"version":3,"sources":["webpack:///src/app/modulos/abogado/abogado-routing.module.ts","webpack:///src/app/modulos/abogado/abogado.module.ts","webpack:///src/app/modulos/abogado/empresa/agregar-empresa/agregar-empresa.component.ts","webpack:///src/app/modulos/abogado/empresa/agregar-empresa/agregar-empresa.component.html","webpack:///src/app/modulos/abogado/empresa/listar-empresas/listar-empresas.component.ts","webpack:///src/app/modulos/abogado/empresa/listar-empresas/listar-empresas.component.html","webpack:///src/app/modulos/abogado/empresa/mostrar-empresa/mostrar-empresa.component.ts","webpack:///src/app/modulos/abogado/empresa/mostrar-empresa/mostrar-empresa.component.html","webpack:///src/app/modulos/abogado/persona/agregar-personas/agregar-personas.component.ts","webpack:///src/app/modulos/abogado/persona/agregar-personas/agregar-personas.component.html","webpack:///src/app/modulos/abogado/persona/listar-personas/listar-personas.component.ts","webpack:///src/app/modulos/abogado/persona/listar-personas/listar-personas.component.html","webpack:///src/app/modulos/abogado/persona/mostrar-persona/mostrar-persona.component.ts","webpack:///src/app/modulos/abogado/persona/mostrar-persona/mostrar-persona.component.html","webpack:///src/app/modulos/abogado/servicios/empresa.service.ts","webpack:///src/app/modulos/abogado/servicios/listar-personas.service.ts","webpack:///src/app/modulos/abogado/servicios/persona.service.ts"],"names":["routes","path","component","AbogadoRoutingModule","forChild","imports","exports","AbogadoModule","declarations","MyErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","AgregarEmpresaComponent","route","empresaService","location","documento","required","pattern","nombre","actividad","email","celular","fijo","direccion","accion","snapshot","paramMap","get","inicializar","console","log","actualizarEmpresa","id","value","subscribe","empresa","agregarEmpresas","back","mostrarEmpresa","data","controls","setValue","registrar","selector","templateUrl","styleUrls","ListarEmpresasComponent","dialog","_snackBar","displayedColumns","listadoInicial","paginator","page","event","obtenerListadoEmpresas","pageIndex","obtenerEmpresas","next","count","previous","mensaje","open","duration","registro","dialogRef","titulo","afterClosed","dialogResult","eliminarEmpresa","result","openSnackBar","iniciarListadoEmpresas","buscarNombre","buscarDocumento","MostrarEmpresaComponent","contactoColumnas","obtenerEmpresa","obtenerProcesos","tabla","crearFilasTabla","arrayValores","Object","entries","arraySalida","map","elemento","filter","undefined","listarProcesos","procesos","volver","AgregarPersonasComponent","personaService","apellido","nacimiento","ocupacion","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","dataParse","formatDate","actualizarPersona","persona","agregarPersonas","mostrarPersona","ListarPersonasComponent","listar","obtenerListadoPersonas","obtenerPersonas","res","eliminarPersona","MostrarPersonaComponent","obtenerPersona","listar_procesos_personas","EmpresaService","http","url","post","ruta","urlPaginacion","put","info","patch","providedIn","ListarPersonasService","PersonaService"],"mappings":"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","file":"abogado-abogado-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListarPersonasComponent } from \"./persona/listar-personas/listar-personas.component\";\nimport { AgregarPersonasComponent } from \"./persona/agregar-personas/agregar-personas.component\";\nimport { MostrarPersonaComponent } from \"./persona/mostrar-persona/mostrar-persona.component\";\n\nimport { ListarEmpresasComponent } from \"./empresa/listar-empresas/listar-empresas.component\";\nimport { AgregarEmpresaComponent } from \"./empresa/agregar-empresa/agregar-empresa.component\";\nimport { MostrarEmpresaComponent } from \"./empresa/mostrar-empresa/mostrar-empresa.component\";\n\n\nconst routes: Routes = [\n  {\n    path: 'listar-personas',\n    component: ListarPersonasComponent,\n  },\n  {\n    path: 'agregar-personas/:accion',\n    component: AgregarPersonasComponent \n  },\n  {\n    path: 'actualizar-persona/:accion/:id',\n    component: AgregarPersonasComponent \n  },\n  {\n    path: 'mostrar-persona/:id',\n    component: MostrarPersonaComponent\n  },\n  {\n    path: 'listar-empresas',\n    component: ListarEmpresasComponent,\n  },\n  {\n    path: 'agregar-empresa/:accion',\n    component: AgregarEmpresaComponent \n  },\n  {\n    path: 'actualizar-empresa/:accion/:id',\n    component: AgregarEmpresaComponent \n  },\n  {\n    path: 'mostrar-empresa/:id',\n    component: MostrarEmpresaComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AbogadoRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatButtonModule} from '@angular/material/button';  \nimport {MatIconModule} from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field'; \nimport {MatInputModule} from '@angular/material/input'; \nimport {MatDatepickerModule} from '@angular/material/datepicker'; \nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatDialogModule} from '@angular/material/dialog'; \nimport {MatCardModule} from '@angular/material/card'; \nimport {MatToolbarModule} from '@angular/material/toolbar'; \nimport {MatListModule} from '@angular/material/list'; \nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport {MatGridListModule} from '@angular/material/grid-list'; \nimport { AbogadoRoutingModule } from './abogado-routing.module';\nimport { ListarPersonasComponent } from './persona/listar-personas/listar-personas.component';\nimport { AgregarPersonasComponent } from './persona/agregar-personas/agregar-personas.component';\nimport { CompartidosModule } from \"../compartidos/compartidos.module\";\nimport { MostrarPersonaComponent } from './persona/mostrar-persona/mostrar-persona.component';\nimport { AgregarEmpresaComponent } from './empresa/agregar-empresa/agregar-empresa.component';\nimport { ListarEmpresasComponent } from './empresa/listar-empresas/listar-empresas.component';\nimport { MostrarEmpresaComponent } from './empresa/mostrar-empresa/mostrar-empresa.component';\n\n@NgModule({\n  declarations: [ListarPersonasComponent, AgregarPersonasComponent, MostrarPersonaComponent, AgregarEmpresaComponent, ListarEmpresasComponent, MostrarEmpresaComponent],\n  imports: [\n    CommonModule,\n    AbogadoRoutingModule,\n    CompartidosModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatCardModule,\n    MatListModule,\n    MatGridListModule,\n    MatSnackBarModule,\n    MatToolbarModule\n  ],\n})\nexport class AbogadoModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { ActivatedRoute } from '@angular/router';\nimport { EmpresaService } from \"../../servicios/empresa.service\";\nimport { Location } from '@angular/common';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-agregar-empresa',\n  templateUrl: './agregar-empresa.component.html',\n  styleUrls: ['./agregar-empresa.component.css']\n})\nexport class AgregarEmpresaComponent implements OnInit {\n  private accion:string;\n  private id:number;\n  form = new FormGroup({\n    documento : new FormControl('', [\n      Validators.required, \n      Validators.pattern('^[0-9]+$')\n    ]),\n    nombre: new FormControl('',[\n      Validators.required, \n      Validators.pattern('^[a-zA-Z]+$')\n    ]\n    ),\n    actividad: new FormControl('', [\n      Validators.required, \n      Validators.pattern('^[a-zA-Z]+$')\n    ]),\n    email: new FormControl('', [\n      Validators.required, \n      Validators.pattern('^[a-z0-9][a-z0-9-_\\.]+@([a-z]|[a-z0-9]?[a-z0-9-]+[a-z0-9])\\.[a-z0-9]{2,10}(?:\\.[a-z]{2,10})?$')\n    ]),\n    celular : new FormControl('', [\n      Validators.required, \n      Validators.pattern('^[0-9]+$')\n    ]),\n    fijo : new FormControl('', [\n      Validators.pattern('^[0-9]*$')\n    ]),\n    direccion : new FormControl('', [\n      Validators.required, \n      Validators.pattern('[^`~!@$%^&*()_|+\\=?;:,.]+$')\n    ]),\n  });\n  constructor(private route: ActivatedRoute, private empresaService: EmpresaService, private location: Location) { }\n\n  ngOnInit(): void {\n    this.accion = this.route.snapshot.paramMap.get('accion')\n    if(this.accion === 'actualizar'){\n      this.inicializar()\n      console.log('actualizando')\n    }\n  }\n\n  public registrar():void{\n    if (this.accion === 'actualizar') {\n      this.empresaService.actualizarEmpresa(this.id, this.form.value).subscribe(empresa => console.log(empresa));\n    } else {\n      console.log(this.form)\n      this.empresaService.agregarEmpresas(this.form.value).subscribe(empresa=> console.log(empresa));\n    }\n    this.location.back()\n  }\n\n  private inicializar():void{\n    this.id = +this.route.snapshot.paramMap.get('id')\n    this.empresaService.mostrarEmpresa(this.id).subscribe(data => {\n      this.form.controls['documento'].setValue(data['documento'])\n      this.form.controls['nombre'].setValue(data['nombre'])\n      this.form.controls['actividad'].setValue(data['actividad'])\n      this.form.controls['email'].setValue(data['email'])\n      this.form.controls['celular'].setValue(data['celular'])\n      this.form.controls['fijo'].setValue(data['fijo'])\n      this.form.controls['direccion'].setValue(data['direccion'])\n    })\n  }\n\n}\n","<mat-card>\n  <form [formGroup]=\"form\" (ngSubmit)=\"registrar()\" novalidate>\n    <div>\n      <span class=\"titulo\">Datos generales</span>\n    </div>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Documento</mat-label>\n      <input formControlName='documento' matInput>\n      <mat-error *ngIf=\"form.get('documento').hasError('required')\">\n        <strong>Este campo es obligatorio</strong>\n      </mat-error>\n      <mat-error *ngIf=\"form.get('documento').hasError('pattern')\">\n        <strong>Solo numeros</strong>\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Nombre</mat-label>\n        <input formControlName='nombre' matInput>\n        <mat-error *ngIf=\"form.get('nombre').hasError('required')\">\n          <strong>Este campo es obligatorio</strong>\n        </mat-error>\n        <mat-error *ngIf=\"form.get('nombre').hasError('pattern')\">\n          <strong>Solo letras</strong>\n        </mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Actividad</mat-label>\n        <input formControlName='actividad' matInput>\n        <mat-error *ngIf=\"form.get('actividad').hasError('required')\">\n          <strong>Este campo es obligatorio</strong>\n        </mat-error>\n        <mat-error *ngIf=\"form.get('actividad').hasError('pattern')\">\n          <strong>Solo letras</strong>\n        </mat-error>\n      </mat-form-field>\n      <br>\n      <mat-divider></mat-divider>\n      <br>\n      <div>\n        <span class=\"titulo\">Datos de contacto</span>\n      </div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Email</mat-label>\n        <input formControlName='email' matInput>\n        <mat-error *ngIf=\"form.get('email').hasError('required')\">\n          <strong>Este campo es obligatorio</strong>\n        </mat-error>\n        <mat-error *ngIf=\"form.get('email').hasError('pattern')\">\n          <strong>Eso no es un correo!</strong>\n        </mat-error>\n      </mat-form-field>\n    \n      <mat-form-field appearance=\"outline\">\n        <mat-label>Celular</mat-label>\n        <input formControlName='celular' matInput>\n        <mat-error *ngIf=\"form.get('celular').hasError('required')\">\n          <strong>Este campo es obligatorio</strong>\n        </mat-error>\n        <mat-error *ngIf=\"form.get('celular').hasError('pattern')\">\n          <strong>Solo letras</strong>\n        </mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Fijo</mat-label>\n        <input formControlName='fijo' matInput>\n        <mat-error *ngIf=\"form.get('fijo').hasError('pattern')\">\n          <strong>Solo numeros</strong>\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Direccion</mat-label>\n        <input formControlName='direccion' matInput>\n        <mat-error *ngIf=\"form.get('direccion').hasError('required')\">\n          <strong>Este campo es obligatorio</strong>\n        </mat-error>\n        <mat-error *ngIf=\"form.get('direccion').hasError('pattern')\">\n          <strong>Nada de caracteres especiales</strong>\n        </mat-error>\n      </mat-form-field>\n      <br>\n      <div>\n        <button type=\"submit\" color=\"primary\" [disabled]=\"form.invalid\"  mat-raised-button>\n          <mat-icon>send</mat-icon>enviar\n        </button>\n        <a color=\"warn\" routerLink=\"/dashboard/abogado/listar-personas\"  mat-raised-button>\n          <mat-icon>cancelar</mat-icon>cancelar\n        </a>\n      </div>\n  </form>\n</mat-card>","import { Component, OnInit, ViewChild  } from '@angular/core';\nimport { ConfirmDialogComponent } from \"../../../compartidos/confirm-dialog/confirm-dialog.component\";\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport { MatDialog} from '@angular/material/dialog';\nimport { EmpresaService } from '../../servicios/empresa.service';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\nexport interface Empresa{\n  documento: number;\n  nombre: string;\n  actividad: string;\n  email: string;\n  celular: number;\n  fijo: number;\n  direccion: string;\n\n}\n\n@Component({\n  selector: 'app-listar-empresas',\n  templateUrl: './listar-empresas.component.html',\n  styleUrls: ['./listar-empresas.component.css']\n})\nexport class ListarEmpresasComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns: string[] = ['documento', 'nombre', 'acciones'];\n  dataSource : any;\n  empresa : Empresa;\n  count : number;\n  next : number;\n  previous : number;\n  pageIndex : number;\n  nombre = new FormGroup({\n    nombre : new FormControl('', [\n      Validators.pattern('^[0-9]+$')\n    ]),\n  })\n  documento = new FormGroup({\n    documento : new FormControl('', [\n      Validators.pattern('^[0-9]+$')\n    ]),\n  })\n  constructor(private empresaService : EmpresaService, public dialog: MatDialog,private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n     this.listadoInicial()\n  }\n\n  ngAfterViewInit() {\n    this.paginator.page.subscribe(\n       (event) => this.obtenerListadoEmpresas(event)\n    );\n  }\n\n\n  /**\n   * obtenerListadoEmpresas\n   */\n  public obtenerListadoEmpresas(event:any):void {\n    if (event.pageIndex === this.pageIndex+1) {\n      this.empresaService.obtenerEmpresas(this.next).subscribe(data =>{\n        this.empresa = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n      })\n      this.pageIndex++\n    } else {\n      this.empresaService.obtenerEmpresas(this.previous).subscribe(data =>{\n        this.empresa = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n    })\n    this.pageIndex--\n   }\n  }\n   /**\n   * notificacion de las acciones a traves de un snack-bar\n   */\n  private openSnackBar(mensaje, accion):void {\n    this._snackBar.open(mensaje, accion, {\n      duration: 5000,\n    });\n  }\n\n  confirmDialog(registro:any): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data:{titulo:'alerta', mensaje:`estas seguro de querer eliminar el registro de ${registro.nombre}`}\n    })\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if(dialogResult){\n        this.empresaService.eliminarEmpresa(registro.id).subscribe(result => {\n          this.listadoInicial()\n          this.openSnackBar(\"registro eliminado\", \"☠️\")\n        })\n      }\n    });\n  }\n\n  listadoInicial(): void {\n    this.empresaService.iniciarListadoEmpresas().subscribe(data =>{\n      this.empresa = data['results'];\n      this.count = data['count'];\n      this.next = data['next'];\n      this.previous = data['previous'];\n      this.pageIndex = 0;\n      console.log(data)\n    })\n  }\n\n  buscarNombre(){\n    this.documento.controls['documento'].setValue('')\n    this.paginator.pageIndex=0\n    if (this.nombre.get('nombre').value != \"\") {\n      this.empresaService.buscarNombre(this.nombre.get('nombre').value).subscribe(data =>{\n        this.empresa = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n      })\n    } else {\n      this.listadoInicial()\n      console.log('por aqui pase')\n    }\n  }\n\n  buscarDocumento(){\n    this.nombre.controls['nombre'].setValue('')\n    this.paginator.pageIndex=0\n    if (this.documento.get('documento').value != \"\") {\n      this.empresaService.buscarDocumento(this.documento.get('documento').value).subscribe(data =>{\n        this.empresa = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n      })\n    } else {\n      this.listadoInicial()\n      console.log('documento')\n    }\n  }\n  \n}\n","<mat-card>\n  <mat-card-title >\n    <mat-toolbar>\n      <span class=\"titulo\">Empresas</span>\n    </mat-toolbar>\n  </mat-card-title>\n  <mat-card-content>\n    <mat-toolbar>\n      <form [formGroup]=\"nombre\" (ngSubmit)=\"buscarNombre()\" novalidate>\n        <mat-form-field >\n        <mat-label>Nombre</mat-label>\n          <input formControlName='nombre' matInput>\n        </mat-form-field>\n      </form>\n      <span class=\"titulo\"></span>\n      <form [formGroup]=\"documento\" (ngSubmit)=\"buscarDocumento()\" novalidate>\n        <mat-form-field>\n        <mat-label>ID</mat-label>\n          <input formControlName='documento'  matInput>\n        </mat-form-field>\n      </form>\n    </mat-toolbar>\n  <table mat-table [dataSource]=\"empresa\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"documento\">\n    <th mat-header-cell *matHeaderCellDef>ID</th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.documento}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"nombre\">\n    <th mat-header-cell *matHeaderCellDef> Nombre </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.nombre}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"acciones\">\n    <th mat-header-cell *matHeaderCellDef>\n      <a routerLink=\"/dashboard/abogado/agregar-empresa/crear\"  mat-icon-button color=\"accent\">\n        <mat-icon hr>add</mat-icon>\n      </a>\n    </th>\n    <td mat-cell *matCellDef=\"let element\">  \n      <button  mat-icon-button color=\"warn\" (click)=\"confirmDialog(element)\">\n        <mat-icon>delete_forever</mat-icon>\n      </button>\n      <a routerLink=\"/dashboard/abogado/mostrar-empresa/{{element.id}}\" mat-icon-button color=\"accent\">\n        <mat-icon>business</mat-icon>\n      </a>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n  <mat-paginator  [length]=\"count\"\n                  [pageSize]=\"5\"\n  >\n  </mat-paginator>\n</mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EmpresaService } from \"../../servicios/empresa.service\";\nimport { Location } from '@angular/common';\n\n\n\nexport interface Empresa{\n  documento: number;\n  nombre: string;\n  actividad: string;\n  email: string;\n  celular: number;\n  fijo: number;\n  direccion: string;\n\n}\n\n@Component({\n  selector: 'app-mostrar-empresa',\n  templateUrl: './mostrar-empresa.component.html',\n  styleUrls: ['./mostrar-empresa.component.css']\n})\nexport class MostrarEmpresaComponent implements OnInit {\n  displayedColumns: string[] = ['campo', 'valor'];\n  contactoColumnas: string[] = ['numero', 'ubicacion', 'acciones'];\n  empresa: any;\n  tabla: any;\n  procesos: any;\n  constructor(private location: Location, private route: ActivatedRoute, private empresaService: EmpresaService) { }\n\n  ngOnInit(): void {\n    this.obtenerEmpresa()\n    this.obtenerProcesos()\n  }\n  volver(): void{\n    this.location.back()\n  }\n  obtenerEmpresa(): void {\n    const id = +this.route.snapshot.paramMap.get('id')\n    this.empresaService.mostrarEmpresa(id).subscribe(data => {\n      this.empresa = data\n      this.tabla = this.crearFilasTabla(data)\n    })\n  }\n\n  crearFilasTabla(empresa:object): Object[] {\n    let arrayValores = Object.entries(empresa)\n    let arraySalida = []\n    arraySalida = arrayValores.map( function(elemento) {\n      if (elemento[0] !== \"contact_info\") {\n        return {\"campo\" : elemento[0], \"valor\" : elemento[1]}\n      }\n    } )\n    arraySalida = arraySalida.filter(function(elemento){\n      return elemento != undefined && elemento['campo'] != 'id'&& elemento['campo'] !='nombre' && elemento['campo'] !='apellido'\n    })\n    return arraySalida;\n  }\n  \n  obtenerProcesos():void{\n    const id = +this.route.snapshot.paramMap.get('id')\n    this.empresaService.listarProcesos(id).subscribe(data => {\n      this.procesos = data\n    })\n  }\n}\n","\n<mat-card  class=\"card\">\n  <mat-card-title >\n    <mat-toolbar>\n      <span class=\"titulo\">{{empresa.nombre}}</span>\n    </mat-toolbar>\n  </mat-card-title>\n  <mat-card-subtitle>\n    <button color=\"primary\"  routerLink=\"/dashboard/abogado/actualizar-empresa/actualizar/{{empresa.id}}\" mat-button>\n      <mat-icon hr>create</mat-icon>Update</button>\n      <button mat-icon-button color=\"accent\" (click)=\"volver()\" >\n        volver<mat-icon>reply</mat-icon>\n      </button>\n    </mat-card-subtitle>\n  <mat-card-content>\n    <table mat-table [dataSource]=\"tabla\" >     \n      <ng-container matColumnDef=\"campo\">\n        <th mat-header-cell *matHeaderCellDef>   </th>\n        <td mat-cell *matCellDef=\"let elemento\">{{elemento.campo}} : </td>\n      </ng-container>\n      <ng-container matColumnDef=\"valor\">\n        <th mat-header-cell *matHeaderCellDef> </th>\n        <td mat-cell *matCellDef=\"let elemento\">  {{elemento.valor}}</td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <mat-toolbar>\n      <span class=\"titulo\">Procesos</span>\n    </mat-toolbar>\n    <div *ngFor=\"let proceso of procesos\" class=\"titulo\">\n      <a routerLink=\"/dashboard/proceso/mostrar-proceso/{{proceso.proceso}}\"  mat-icon-button color=\"accent\">\n        <mat-icon hr>gavel</mat-icon>\n      </a>\n      <p>{{proceso.rol}}</p>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { ActivatedRoute } from '@angular/router';\nimport { PersonaService } from \"../../servicios/persona.service\";\nimport { Location } from '@angular/common';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-agregar-personas',\n  templateUrl: './agregar-personas.component.html',\n  styleUrls: ['./agregar-personas.component.css']\n})\nexport class AgregarPersonasComponent implements OnInit {\n  private accion:string;\n  private id:number;\n  form = new FormGroup({\n    documento : new FormControl('', [\n      Validators.required, \n      Validators.pattern('^[0-9]+$')\n    ]),\n    nombre: new FormControl('',[\n      Validators.required, \n      Validators.pattern('^[a-zA-Z]+$')\n    ]\n    ),\n    apellido: new FormControl('', [\n      Validators.required, \n      Validators.pattern('^[a-zA-Z]+$')\n    ]),\n    nacimiento: new FormControl('', [Validators.required]),\n    ocupacion: new FormControl('', [\n      Validators.required, \n      Validators.pattern('^[a-zA-Z]+$')\n    ]), \n    email: new FormControl('', [\n      Validators.required, \n      Validators.pattern('^[a-z0-9][a-z0-9-_\\.]+@([a-z]|[a-z0-9]?[a-z0-9-]+[a-z0-9])\\.[a-z0-9]{2,10}(?:\\.[a-z]{2,10})?$')\n    ]),\n    celular : new FormControl('', [\n      Validators.required, \n      Validators.pattern('^[0-9]+$')\n    ]),\n    fijo : new FormControl('', [\n      Validators.pattern('^[0-9]*$')\n    ]),\n    direccion : new FormControl('', [\n      Validators.required, \n      Validators.pattern('[^`~!@$%^&*()_|+\\=?;:,.]+$')\n    ]),\n  });\n\n  constructor(private route: ActivatedRoute, private personaService: PersonaService, private location: Location) { }\n\n  ngOnInit(): void {\n    this.accion = this.route.snapshot.paramMap.get('accion')\n    if(this.accion === 'actualizar'){\n      this.inicializar()\n      console.log('actualizando')\n    }\n  }\n\n  private formatDate(date):any {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\n  public registrar():void{\n    let dataParse = this.formatDate(this.form.value.nacimiento)\n    this.form.value.nacimiento = dataParse\n    if (this.accion === 'actualizar') {\n      this.personaService.actualizarPersona(this.id, this.form.value).subscribe(persona => console.log(persona));\n    } else {\n      this.personaService.agregarPersonas(this.form.value).subscribe(persona => console.log(persona));\n    }\n    this.location.back()\n  }\n\n  private inicializar():void{\n    this.id = +this.route.snapshot.paramMap.get('id')\n    this.personaService.mostrarPersona(this.id).subscribe(data => {\n      this.form.controls['documento'].setValue(data['documento'])\n      this.form.controls['nombre'].setValue(data['nombre'])\n      this.form.controls['apellido'].setValue(data['apellido'])\n      this.form.controls['nacimiento'].setValue(data['nacimiento'])\n      this.form.controls['ocupacion'].setValue(data['ocupacion'])\n      this.form.controls['email'].setValue(data['email'])\n      this.form.controls['celular'].setValue(data['celular'])\n      this.form.controls['fijo'].setValue(data['fijo'])\n      this.form.controls['direccion'].setValue(data['direccion'])\n    })\n  }\n}","<mat-card>\n  <form [formGroup]=\"form\" (ngSubmit)=\"registrar()\" novalidate>\n    <div>\n      <span class=\"titulo\">Datos personales</span>\n    </div>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Documento</mat-label>\n        <input formControlName='documento' matInput>\n        <mat-error *ngIf=\"form.get('documento').hasError('required')\">\n          <strong>Este campo es obligatorio</strong>\n        </mat-error>\n        <mat-error *ngIf=\"form.get('documento').hasError('pattern')\">\n          <strong>Solo numeros</strong>\n        </mat-error>\n      </mat-form-field>\n      \n      <mat-form-field appearance=\"outline\">\n          <mat-label>Nombre</mat-label>\n          <input formControlName='nombre' matInput>\n          <mat-error *ngIf=\"form.get('nombre').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n          <mat-error *ngIf=\"form.get('nombre').hasError('pattern')\">\n            <strong>Solo letras</strong>\n          </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Apellido</mat-label>\n          <input formControlName='apellido' matInput>\n          <mat-error *ngIf=\"form.get('apellido').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n          <mat-error *ngIf=\"form.get('apellido').hasError('pattern')\">\n            <strong>Solo letras</strong>\n          </mat-error>\n        </mat-form-field>\n        \n        <mat-form-field appearance=\"outline\">\n          <mat-label>Fecha nacimiento</mat-label>\n          <input matInput  formControlName='nacimiento' [matDatepicker]=\"myDatepicker\">\n          <mat-datepicker-toggle matSuffix [for]=\"myDatepicker\"></mat-datepicker-toggle>\n          <mat-datepicker #myDatepicker></mat-datepicker>\n          <mat-error *ngIf=\"form.get('nacimiento').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Ocupacion</mat-label>\n          <input formControlName='ocupacion' matInput>\n          <mat-error *ngIf=\"form.get('ocupacion').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n          <mat-error *ngIf=\"form.get('ocupacion').hasError('pattern')\">\n            <strong>Solo letras</strong>\n          </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-divider></mat-divider>\n        <br>\n        <div>\n          <span class=\"titulo\">Datos de contacto</span>\n        </div>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Email</mat-label>\n          <input formControlName='email' matInput>\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n          <mat-error *ngIf=\"form.get('email').hasError('pattern')\">\n            <strong>Eso no es un correo!</strong>\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Celular</mat-label>\n          <input formControlName='celular' matInput>\n          <mat-error *ngIf=\"form.get('celular').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n          <mat-error *ngIf=\"form.get('celular').hasError('pattern')\">\n            <strong>Solo letras</strong>\n          </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Fijo</mat-label>\n          <input formControlName='fijo' matInput>\n          <mat-error *ngIf=\"form.get('fijo').hasError('pattern')\">\n            <strong>Solo numeros</strong>\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Direccion</mat-label>\n          <input formControlName='direccion' matInput>\n          <mat-error *ngIf=\"form.get('direccion').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n          <mat-error *ngIf=\"form.get('direccion').hasError('pattern')\">\n            <strong>Nada de caracteres especiales</strong>\n          </mat-error>\n        </mat-form-field>\n        <br>\n        <div>\n        <button type=\"submit\" color=\"primary\" [disabled]=\"form.invalid\"  mat-raised-button>\n          <mat-icon>send</mat-icon>enviar\n        </button>\n        <a color=\"warn\" routerLink=\"/dashboard/abogado/listar-personas\"  mat-raised-button>\n          <mat-icon>cancelar</mat-icon>cancelar\n        </a> \n      </div>\n  </form>\n</mat-card> \n","import { Component, OnInit, ViewChild  } from '@angular/core';\nimport { ListarPersonasService } from \"../../servicios/listar-personas.service\";\nimport { ConfirmDialogComponent } from \"../../../compartidos/confirm-dialog/confirm-dialog.component\";\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport { MatDialog} from '@angular/material/dialog';\nimport { PersonaService } from '../../servicios/persona.service';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\nexport interface Persona {\n  documento : string,\n  nombre : string,\n  apellido: string,\n  nacimiento: any,\n  ocupacion: string,\n  contact_info: any\n}\n\n\n/**\n * @title Basic use of `<table mat-table>`\n */\n@Component({\n  selector: 'app-listar-personas',\n  templateUrl: './listar-personas.component.html',\n  styleUrls: ['./listar-personas.component.css']\n})\nexport class ListarPersonasComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns: string[] = ['documento','nombre', 'acciones'];\n  dataSource : any;\n  persona : Persona;\n  count : number;\n  next : number;\n  previous : number;\n  pageIndex : number;\n  prueba : any;\n  nombre = new FormGroup({\n    nombre : new FormControl('', [\n      Validators.pattern('^[0-9]+$')\n    ]),\n  })\n  documento = new FormGroup({\n    documento : new FormControl('', [\n      Validators.pattern('^[0-9]+$')\n    ]),\n  })\n  constructor(private listar:ListarPersonasService, private personaService:PersonaService, public dialog: MatDialog,private _snackBar: MatSnackBar) { }\n\n  \n\n  ngOnInit() {\n    this.listadoInicial()\n  }\n  ngAfterViewInit() {\n    this.paginator.page.subscribe(\n       (event) => this.obtenerListadoPersonas(event)\n    );\n  }\n  /**\n   * listado inicial\n   */\n  private listadoInicial(){\n    this.listar.obtenerPersonas().subscribe(res => {\n      this.persona = res['results'];\n      this.count = res['count'];\n      this.next = res['next'];\n      this.previous = res['previous'];\n      this.pageIndex = 0;      \n    }); \n  }\n\n  /**\n   * obtener listadoPersonas\n   */\n  public obtenerListadoPersonas(event:any):void {\n    if (event.pageIndex === this.pageIndex+1) {\n      this.personaService.obtenerPersonas(this.next).subscribe(res =>{\n        this.persona = res['results'];\n        this.count = res['count'];\n        this.next = res['next'];\n        this.previous = res['previous'];\n        this.pageIndex = 0;\n      })\n      this.pageIndex++\n    } else {\n      this.personaService.obtenerPersonas(this.previous).subscribe(res =>{\n        this.persona = res['results'];\n        this.count = res['count'];\n        this.next = res['next'];\n        this.previous = res['previous'];\n        this.pageIndex = 0;\n      })\n      this.pageIndex--\n    }\n  }\n\n  /**\n   * notificacion de las acciones a traves de un snack-bar\n   */\n  private openSnackBar(mensaje, accion):void {\n    this._snackBar.open(mensaje, accion, {\n      duration: 5000,\n    });\n  }\n\n  confirmDialog(registro:any): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data:{titulo:'alerta', mensaje:`estas seguro de querer eliminar el registro de ${registro.nombre} ${registro.apellido}`}\n    })\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if(dialogResult){\n        this.personaService.eliminarPersona(registro.id).subscribe(result => {\n          this.listadoInicial()\n          this.openSnackBar(\"registro eliminado\", \"☠️\")\n        })\n      }\n    });\n  }\n\n  buscarNombre(){\n    this.documento.controls['documento'].setValue('')\n    this.paginator.pageIndex=0\n    if (this.nombre.get('nombre').value != \"\") {\n      this.personaService.buscarNombre(this.nombre.get('nombre').value).subscribe(data =>{\n        this.persona = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n      })\n    } else {\n      this.listadoInicial()\n      console.log('por aqui pase')\n    }\n  }\n\n  buscarDocumento(){\n    this.nombre.controls['nombre'].setValue('')\n    this.paginator.pageIndex=0\n    if (this.documento.get('documento').value != \"\") {\n      this.personaService.buscarDocumento(this.documento.get('documento').value).subscribe(data =>{\n        this.persona = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n      })\n    } else {\n      this.listadoInicial()\n    }\n  }\n  \n  \n}","<mat-card>\n  <mat-card-title >\n    <mat-toolbar>\n      <span class=\"titulo\">Personas</span>\n    </mat-toolbar>\n  </mat-card-title>\n  <mat-card-content>\n    <mat-toolbar>\n      <form [formGroup]=\"nombre\" (ngSubmit)=\"buscarNombre()\" novalidate>\n        <mat-form-field >\n        <mat-label>Nombre</mat-label>\n          <input formControlName='nombre'  matInput>\n        </mat-form-field>\n      </form>\n      <span class=\"titulo\"></span>\n      <form [formGroup]=\"documento\" (ngSubmit)=\"buscarDocumento()\" novalidate>\n        <mat-form-field>\n        <mat-label>ID</mat-label>\n          <input formControlName='documento'  matInput>\n        </mat-form-field>\n      </form>\n    </mat-toolbar>\n    <table mat-table [dataSource]=\"persona\" class=\"mat-elevation-z8\">\n\n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n    \n      <!-- Position Column -->\n      <ng-container matColumnDef=\"documento\">\n        <th mat-header-cell *matHeaderCellDef>ID</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.documento}} </td>\n      </ng-container>\n    \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"nombre\">\n        <th mat-header-cell *matHeaderCellDef> Nombre </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.nombre}} {{element.apellido}} </td>\n      </ng-container>\n    \n      <ng-container matColumnDef=\"acciones\">\n        <th mat-header-cell *matHeaderCellDef>\n          <a routerLink=\"/dashboard/abogado/agregar-personas/crear\"  mat-icon-button color=\"accent\">\n            <mat-icon hr>person_add</mat-icon>\n          </a>\n        </th>\n        <td mat-cell *matCellDef=\"let element\">  \n          <button  mat-icon-button color=\"warn\" (click)=\"confirmDialog(element)\">\n            <mat-icon>delete_forever</mat-icon>\n          </button>\n          <a routerLink=\"/dashboard/abogado/mostrar-persona/{{element.id}}\" mat-icon-button color=\"accent\">\n            <mat-icon>face</mat-icon>\n          </a>\n        </td>\n      </ng-container>\n    \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    \n      <mat-paginator  [length]=\"count\"\n                      [pageSize]=\"5\"\n      >\n      </mat-paginator>\n  </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PersonaService } from '../../servicios/persona.service';\nimport { Location } from '@angular/common';\n\nexport interface Persona {\n  documento : string,\n  nombre : string,\n  apellido: string,\n  nacimiento: any,\n  ocupacion: string,\n  contact_info: any\n}\n\n@Component({\n  selector: 'app-mostrar-persona',\n  templateUrl: './mostrar-persona.component.html',\n  styleUrls: ['./mostrar-persona.component.css']\n})\nexport class MostrarPersonaComponent implements OnInit {\n  displayedColumns: string[] = ['campo', 'valor'];\n  contactoColumnas: string[] = ['numero', 'ubicacion', 'acciones'];\n  persona : any;\n  tabla : any;\n  procesos : any;\n  constructor(private location: Location,private route: ActivatedRoute, private personaService: PersonaService) { }\n\n  ngOnInit(): void {\n    this.obtenerPersona()\n    this.listar_procesos_personas()\n  }\n\n  obtenerPersona(): void {\n    const id = +this.route.snapshot.paramMap.get('id')\n    this.personaService.mostrarPersona(id).subscribe(data => {\n      this.persona = data;\n      this.tabla = this.crearFilasTabla(data)\n      console.log(data)\n      console.log(this.tabla)\n    })\n  }\n  volver(): void{\n    this.location.back()\n  }\n\n  crearFilasTabla(persona:object): Object[]{\n    let arrayValores = Object.entries(persona)\n    let arraySalida= []\n    arraySalida = arrayValores.map( function(elemento) {\n      if (elemento[0] !== \"contact_info\") {\n        return {\"campo\" : elemento[0], \"valor\" : elemento[1]}\n      }\n    } )\n    arraySalida = arraySalida.filter(function(elemento){\n      return elemento != undefined && elemento['campo'] != 'id'&& elemento['campo'] !='nombre' && elemento['campo'] !='apellido'\n    })\n    /*arrayValores.forEach(elemento =>  if(elemento[0] === \"contact_info\"){\n        arraySalida.push({\"campo\" : elemento[0], \"valor\" : elemento[1]})\n      })*/\n    return arraySalida;\n  }\n\n  obtenerProcesos():void{\n    const id = +this.route.snapshot.paramMap.get('id')\n    this.personaService.listarProcesos(id).subscribe(data => {\n      this.procesos = data\n    })\n  }\n\n  listar_procesos_personas():void{\n    const id = +this.route.snapshot.paramMap.get('id')\n    this.personaService.listar_procesos_personas(id).subscribe(data => {\n      this.procesos = data\n      console.log(data)\n    })\n  }\n\n}\n","    <mat-card>\n      <mat-card-title >\n        <mat-toolbar>\n          <span class=\"titulo\">{{persona.nombre}} {{persona.apellido}}</span>\n        </mat-toolbar>\n      </mat-card-title>\n      <mat-card-subtitle>\n        <button color=\"primary\"  routerLink=\"/dashboard/abogado/actualizar-persona/actualizar/{{persona.id}}\" mat-button>\n        <mat-icon hr>create</mat-icon>Update</button>\n        <button mat-icon-button color=\"accent\" (click)=\"volver()\" >\n          volver<mat-icon>reply</mat-icon>\n        </button>\n      </mat-card-subtitle>\n      <mat-card-content>\n        <table mat-table [dataSource]=\"tabla\" >     \n  \n          <ng-container matColumnDef=\"campo\">\n            <th mat-header-cell *matHeaderCellDef>   </th>\n            <td mat-cell *matCellDef=\"let elemento\">{{elemento.campo}} : </td>\n          </ng-container>\n  \n          <ng-container matColumnDef=\"valor\">\n            <th mat-header-cell *matHeaderCellDef> </th>\n            <td mat-cell *matCellDef=\"let elemento\">  {{elemento.valor}}</td>\n          </ng-container>\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <mat-toolbar>\n          <span class=\"titulo\">Procesos</span>\n        </mat-toolbar>\n        <mat-list>\n          <mat-list-item *ngFor=\"let proceso of procesos\"  class=\"titulo\">\n            <mat-icon mat-list-icon>folder</mat-icon>\n            <div mat-line>\n              <a routerLink=\"/dashboard/proceso/mostrar-proceso/{{proceso.id}}\"  mat-icon-button color=\"accent\">\n                {{proceso.numero_proceso}}\n              </a>\n            </div>\n            <div mat-line> {{proceso.fecha_publicacion}} </div>\n            <div mat-line> {{proceso.estado}} </div>\n          </mat-list-item>\n        </mat-list>\n      </mat-card-content>\n     </mat-card>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Empresa{\n  documento: number;\n  nombre: string;\n  actividad: string;\n  email: string;\n  celular: number;\n  fijo: number;\n  direccion: string;\n\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaService {\n  private url = \"http://127.0.0.1:8000/api/v1.0/abogado/empresas/\";\n  constructor(private http: HttpClient) { }\n\n  public agregarEmpresas(empresa: Empresa) {\n   \n    return this.http.post(this.url, empresa)\n  }\n  /**\n   * EliminarEmpresa\n   */\n  public eliminarEmpresa(id: number) {\n    const ruta = `${this.url}${id}`\n    return this.http.delete(ruta)\n  }\n\n  /**\n   * mostrarEmpresa\n   */\n  public mostrarEmpresa(id: number) {\n    const ruta = `${this.url}${id}`\n    return this.http.get(ruta)\n  }\n\n  public obtenerEmpresas(urlPaginacion:any) {\n    return this.http.get(urlPaginacion);\n  }\n  public iniciarListadoEmpresas() {\n    return this.http.get(this.url);\n  }\n\n  public actualizarEmpresa(id:number, empresa:Empresa){\n    const ruta = `${this.url}${id}/`\n    return this.http.put(ruta, empresa);\n  }\n\n  public agregarInfoEmpresa(id:number, info:any){\n    const ruta = `${this.url}${id}/`\n    return this.http.patch(ruta,info)\n  }\n\n  public listarProcesos(id:number){\n    const ruta = `http://127.0.0.1:8000/api/v1.0/procesos/partes_juridico/${id}/listar_procesos_empresa/`\n    return this.http.get(ruta)\n  }\n\n  public buscarNombre(nombre:string){\n    let ruta = `http://127.0.0.1:8000/api/v1.0/abogado/empresas/?nombre=${nombre}`;\n    return this.http.get(ruta)\n  }\n\n  public buscarDocumento(documento:string){\n    let ruta = `http://127.0.0.1:8000/api/v1.0/abogado/empresas/?documento=${documento}`;\n    return this.http.get(ruta)\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListarPersonasService {\n  constructor(private http: HttpClient) { }\n  public obtenerPersonas() {\n    const url = 'http://127.0.0.1:8000/api/v1.0/abogado/personas';\n    return this.http.get(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Persona {\n  documento : string,\n  nombre : string,\n  apellido: string,\n  nacimiento: any,\n  ocupacion: string,\n}\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class PersonaService {\n  private  url= 'http://127.0.0.1:8000/api/v1.0/abogado/personas/';\n  constructor(private http: HttpClient) { }\n\n  public agregarPersonas(persona: Persona) {\n   \n    return this.http.post(this.url, persona)\n  }\n  /**\n   * EliminarPersona\n   */\n  public eliminarPersona(id: number) {\n    const ruta = `${this.url}${id}`\n    return this.http.delete(ruta)\n  }\n\n  /**\n   * mostrarPersona\n   */\n  public mostrarPersona(id: number) {\n    const ruta = `${this.url}${id}`\n    return this.http.get(ruta)\n  }\n\n  public obtenerPersonas(urlPaginacion:any) {\n    return this.http.get(urlPaginacion);\n  }\n\n  public actualizarPersona(id:number, persona:Persona){\n    const ruta = `${this.url}${id}/`\n    return this.http.put(ruta, persona);\n  }\n\n  public agregarInfoPersona(id:number, info:any){\n    const ruta = `${this.url}${id}/`\n    return this.http.patch(ruta,info)\n  }\n\n  public prueba(){\n    const ruta = `${this.url}lista_prueba`\n    return this.http.get(ruta)\n  }\n\n  public listarProcesos(id:number){\n    const ruta = `http://127.0.0.1:8000/api/v1.0/procesos/partes_naturales/${id}/listar_procesos_persona/`\n    return this.http.get(ruta)\n  }\n  \n  public buscarNombre(nombre:string){\n    let ruta = `http://127.0.0.1:8000/api/v1.0/abogado/personas/?nombre=${nombre}`;\n    return this.http.get(ruta)\n  }\n\n  public buscarDocumento(documento:string){\n    let ruta = `http://127.0.0.1:8000/api/v1.0/abogado/personas/?documento=${documento}`;\n    return this.http.get(ruta)\n  }\n\n  public listar_procesos_personas(id:number){\n    let ruta = `http://127.0.0.1:8000/api/v1.0/procesos/procesos/${id}/listar_procesos_personas/`\n    return this.http.get(ruta)\n  }\n}"]}