{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/badge.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","webpack:///src/app/modulos/procesos/actuaciones/agregar-actuacion/agregar-actuacion.component.ts","webpack:///src/app/modulos/procesos/actuaciones/agregar-actuacion/agregar-actuacion.component.html","webpack:///src/app/modulos/procesos/actuaciones/listar-actuaciones/listar-actuaciones.component.ts","webpack:///src/app/modulos/procesos/actuaciones/listar-actuaciones/listar-actuaciones.component.html","webpack:///src/app/modulos/procesos/actuaciones/mostrar-actuacion/mostrar-actuacion.component.ts","webpack:///src/app/modulos/procesos/actuaciones/mostrar-actuacion/mostrar-actuacion.component.html","webpack:///src/app/modulos/procesos/archivos/agregar-archivo/agregar-archivo.component.ts","webpack:///src/app/modulos/procesos/archivos/agregar-archivo/agregar-archivo.component.html","webpack:///src/app/modulos/procesos/archivos/listar-archivos/listar-archivos.component.ts","webpack:///src/app/modulos/procesos/archivos/listar-archivos/listar-archivos.component.html","webpack:///src/app/modulos/procesos/calutelares/agregar-cautelar/agregar-cautelar.component.ts","webpack:///src/app/modulos/procesos/calutelares/agregar-cautelar/agregar-cautelar.component.html","webpack:///src/app/modulos/procesos/calutelares/listar-cautelar/listar-cautelar.component.ts","webpack:///src/app/modulos/procesos/calutelares/listar-cautelar/listar-cautelar.component.html","webpack:///src/app/modulos/procesos/calutelares/mostrar-cautelar/mostrar-cautelar.component.ts","webpack:///src/app/modulos/procesos/calutelares/mostrar-cautelar/mostrar-cautelar.component.html","webpack:///src/app/modulos/procesos/despachos/despacho/despacho.component.ts","webpack:///src/app/modulos/procesos/despachos/despacho/despacho.component.html","webpack:///src/app/modulos/procesos/ejecutivo/agregar-ejecutivo/agregar-ejecutivo.component.ts","webpack:///src/app/modulos/procesos/ejecutivo/agregar-ejecutivo/agregar-ejecutivo.component.html","webpack:///src/app/modulos/procesos/notificaciones/agregar-notificacion/agregar-notificacion.component.ts","webpack:///src/app/modulos/procesos/notificaciones/agregar-notificacion/agregar-notificacion.component.html","webpack:///src/app/modulos/procesos/notificaciones/empresas-notificadas/empresas-notificadas.component.ts","webpack:///src/app/modulos/procesos/notificaciones/empresas-notificadas/empresas-notificadas.component.html","webpack:///src/app/modulos/procesos/notificaciones/listar-notificaciones/listar-notificaciones.component.ts","webpack:///src/app/modulos/procesos/notificaciones/listar-notificaciones/listar-notificaciones.component.html","webpack:///src/app/modulos/procesos/notificaciones/mostrar-notificacion/mostrar-notificacion.component.ts","webpack:///src/app/modulos/procesos/notificaciones/mostrar-notificacion/mostrar-notificacion.component.html","webpack:///src/app/modulos/procesos/notificaciones/personas-notificadas/personas-notificadas.component.ts","webpack:///src/app/modulos/procesos/notificaciones/personas-notificadas/personas-notificadas.component.html","webpack:///src/app/modulos/procesos/partes_proceso/partes-juridicas/partes-juridicas.component.ts","webpack:///src/app/modulos/procesos/partes_proceso/partes-juridicas/partes-juridicas.component.html","webpack:///src/app/modulos/procesos/partes_proceso/partes/partes.component.ts","webpack:///src/app/modulos/procesos/partes_proceso/partes/partes.component.html","webpack:///src/app/modulos/procesos/pipes/archivo-nombre.pipe.ts","webpack:///src/app/modulos/procesos/proceso/agregar-proceso/agregar-proceso.component.ts","webpack:///src/app/modulos/procesos/proceso/agregar-proceso/agregar-proceso.component.html","webpack:///src/app/modulos/procesos/proceso/listar-procesos/listar-procesos.component.ts","webpack:///src/app/modulos/procesos/proceso/listar-procesos/listar-procesos.component.html","webpack:///src/app/modulos/procesos/proceso/mostrar-proceso/mostrar-proceso.component.ts","webpack:///src/app/modulos/procesos/proceso/mostrar-proceso/mostrar-proceso.component.html","webpack:///src/app/modulos/procesos/procesos-routing.module.ts","webpack:///src/app/modulos/procesos/procesos.module.ts","webpack:///src/app/modulos/procesos/servicios/proceso.service.ts","webpack:///src/app/modulos/procesos/todas-mis-notificaciones/todas-mis-notificaciones.component.ts","webpack:///src/app/modulos/procesos/todas-mis-notificaciones/todas-mis-notificaciones.component.html"],"names":["nextId","CdkAccordion","_stateChanges","_openCloseAllActions","id","_multi","_openCloseAll","changes","next","complete","expanded","multi","ɵfac","CdkAccordion_Factory","t","ɵdir","type","selectors","inputs","exportAs","features","propDecorators","args","selector","nextId$1","ɵ0","undefined","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","emit","unsubscribe","disabled","subscribe","notify","markForCheck","CdkAccordionItem_Factory","outputs","provide","useValue","ctorParameters","decorators","providers","CdkAccordionModule","ɵmod","ɵinj","factory","CdkAccordionModule_Factory","ngJitMode","declarations","exports","_c0","MatAutocomplete_ng_template_0_Template","rf","ctx","ctx_r6","_classList","_c1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","MatAutocompleteActivatedEvent","MatAutocompleteBase","_MatAutocompleteMixinBase","MatAutocompleteDefaultOptions","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","MatAutocomplete","_elementRef","defaults","_activeOptionChanges","showPanel","_isOpen","displayWith","optionSelected","optionActivated","_autoActiveFirstOption","_keyManager","options","withWrap","change","index","toArray","_setVisibility","scrollTop","panel","nativeElement","length","_setVisibilityClasses","event","classList","value","split","reduce","className","trim","MatAutocomplete_Factory","ɵcmp","contentQueries","MatAutocomplete_ContentQueries","dirIndex","_t","optionGroups","viewQuery","MatAutocomplete_Query","template","first","hostAttrs","disableRipple","panelWidth","useExisting","ngContentSelectors","decls","vars","consts","MatAutocomplete_Template","directives","styles","encapsulation","changeDetection","descendants","None","OnPush","host","MatAutocompleteOrigin","elementRef","MatAutocompleteOrigin_Factory","AUTOCOMPLETE_OPTION_HEIGHT","AUTOCOMPLETE_PANEL_HEIGHT","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","getMatAutocompleteMissingPanelError","Error","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","map","onSelectionChange","onStable","asObservable","pipe","_scrollStrategy","window","_getWindow","runOutsideAngular","addEventListener","_isInsideShadowRoot","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","_attachOverlay","_floatLabel","_resetLabel","hasAttached","detach","_closingActionsSubscription","detectChanges","clickTarget","composedPath","target","formField","contains","overlayElement","Promise","resolve","then","_setTriggerValue","fn","isDisabled","keyCode","preventDefault","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","activeItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","activeItemIndex","labelCount","_setScrollTop","newScrollPosition","_getScrollTop","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","forEach","selected","deselect","overlayRef","_portal","create","_getOverlayConfig","keydownEvents","altKey","stopPropagation","updateSize","width","_getPanelWidth","setOrigin","_getConnectedElement","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","direction","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","panelClass","abovePositions","positions","withPositions","connectedTo","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setActiveItem","element","readOnly","_a","defaultView","tabOut","_getOutsideClickStream","detachments","MatAutocompleteTrigger_Factory","hostVars","hostBindings","MatAutocompleteTrigger_HostBindings","MatAutocompleteTrigger_focusin_HostBindingHandler","_handleFocus","MatAutocompleteTrigger_blur_HostBindingHandler","MatAutocompleteTrigger_input_HostBindingHandler","$event","_handleInput","MatAutocompleteTrigger_keydown_HostBindingHandler","_handleKeydown","autocompleteDisabled","toString","MatAutocompleteModule","MatAutocompleteModule_Factory","imports","MatBadgeBase","_MatBadgeMixinBase","MatBadge","_ngZone","_ariaDescriber","_renderer","_animationMode","_hasContent","_color","_overlap","size","_id","nodeType","ELEMENT_NODE","indexOf","contentChange","currentValue","_updateTextContent","badgeElement","_badgeElement","description","removeDescription","destroyNode","_createBadgeElement","textContent","content","createElement","activeClass","contentClass","_clearExistingBadges","setAttribute","add","appendChild","requestAnimationFrame","newDescription","oldDescription","describe","colorPalette","remove","cssClass","childCount","children","currentChild","removeChild","_setColor","val","_description","_updateHostAriaDescription","removeAttribute","_hidden","MatBadge_Factory","MatBadge_HostBindings","overlap","isAbove","isAfter","hidden","color","String","MatBadgeModule","MatBadgeModule_Factory","MatExpansionPanel_ng_template_5_Template","_c2","_c3","a0","a1","collapsedHeight","expandedHeight","_c4","params","MatExpansionPanelHeader_span_4_Template","ctx_r19","_getExpandedState","_c5","_c6","MatAccordionBase","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","expansionHeaderHeight","height","optional","bodyExpansion","visibility","MatExpansionPanelContent","_template","MatExpansionPanelContent_Factory","uniqueId","MatExpansionPanelDefaultOptions","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_uniqueSelectionDispatcher","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","x","y","fromState","toState","hideToggle","displayMode","_lazyContent","_body","focusedElement","bodyElement","_togglePosition","togglePosition","MatExpansionPanel_Factory","MatExpansionPanel_ContentQueries","MatExpansionPanel_Query","MatExpansionPanel_HostBindings","_hasSpacing","MatExpansionPanel_Template","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","data","animation","animations","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","MatExpansionPanelHeader","_focusMonitor","_parentChangeSubscription","_animationsDisabled","accordionHideToggleChange","_containsFocus","focusVia","monitor","origin","_handleHeaderFocus","toggle","_toggle","_handleHeaderKeydown","stopMonitoring","MatExpansionPanelHeader_Factory","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_animation_expansionHeight_start_HostBindingHandler","_animationStarted","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","_keydown","_getPanelId","_isExpanded","_getTogglePosition","MatExpansionPanelHeader_Template","_showToggle","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","_ownHeaders","_headers","headers","reset","filter","header","notifyOnChanges","manager","setFirstItemActive","setLastItemActive","updateActiveItem","show","MatAccordion_Factory","ɵMatAccordion_BaseFactory","MatAccordion_ContentQueries","MatAccordion_HostBindings","MatExpansionModule","MatExpansionModule_Factory","enterDuration","MatRadioDefaultOptions","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","nextUniqueId","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioGroup","MatRadioChange","_changeDetector","_value","_name","_selected","_isInitialized","_labelPosition","_required","_controlValueAccessorChangeFn","onTouched","checked","_radios","radio","name","_markForCheck","isAlreadySelected","_updateRadioButtonNames","v","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","MatRadioGroup_Factory","MatRadioGroup_ContentQueries","MatRadioButton","labelPosition","required","MatRadioButtonBase","_MatRadioButtonMixinBase","radioGroup","_radioDispatcher","_providerOverride","_uniqueId","_checked","_inputElement","focusOrigin","_touch","groupValueChanged","_emitChangeEvent","newCheckedState","_setDisabled","MatRadioButton_Factory","MatRadioButton_Query","MatRadioButton_HostBindings","MatRadioButton_focus_HostBindingHandler","tabIndex","ariaLabel","ariaLabelledby","ariaDescribedby","MatRadioButton_Template","MatRadioButton_Template_input_change_5_listener","_onInputChange","MatRadioButton_Template_input_click_5_listener","_onInputClick","_r14","inputId","_isRippleDisabled","MatRadioModule","MatRadioModule_Factory","MatSlideToggleDefaultOptions","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","disableToggleValue","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","MatSlideToggleChange","MatSlideToggleBase","_MatSlideToggleMixinBase","_","toggleChange","dragChange","parseInt","MatSlideToggle_Factory","MatSlideToggle_Query","_thumbEl","_thumbBarEl","MatSlideToggle_HostBindings","MatSlideToggle_Template","MatSlideToggle_Template_input_change_4_listener","_onChangeEvent","MatSlideToggle_Template_input_click_4_listener","MatSlideToggle_Template_span_cdkObserveContent_11_listener","_onLabelTextChange","_r26","_r30","MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR","MatSlideToggleRequiredValidator","MatSlideToggleRequiredValidator_Factory","ɵMatSlideToggleRequiredValidator_BaseFactory","_MatSlideToggleRequiredValidatorModule","_MatSlideToggleRequiredValidatorModule_Factory","MatSlideToggleModule","MatSlideToggleModule_Factory","MyErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","AgregarActuacionComponent","route","procesoService","location","proceso","actuacion","pattern","anotacion","inicio","termino","registro","accion","snapshot","paramMap","get","controls","setValue","inicializar","console","log","mostrarActuacion","back","actualizarActuacion","agregarActuacion","volver","registrar","templateUrl","styleUrls","ListarActuacionesComponent","dialog","_snackBar","displayedColumns","listadoInicial","paginator","page","listarActuaciones","iniciarListadoActuaciones","actuaciones","count","previous","pageIndex","obtenerNotificaciones","mensaje","open","duration","dialogRef","titulo","afterClosed","dialogResult","eliminarActuacion","result","openSnackBar","MostrarActuacionComponent","confirmDialog","AgregarArchivoComponent","nombre_archivo","archivo","descripcion","files","patchValue","extension","formData","FormData","append","obtener_extension","agregarArchivo","procesarArchivo","ListarArchivosComponent","listarArchivos","iniciarListadoArchivos","archivos","obtenerArchivos","eliminarArchivo","palabras","indice","nombre","AgregarCautelarComponent","clase","estado","secuestro_info","mostrarCautelar","actualizarCautelar","agregarCautelar","ListarCautelarComponent","listarCautelares","iniciarListadoCautelares","cautelares","eliminarCautelar","MostrarCautelarComponent","cautelar","DespachoComponent","mostrarDespacho","obtenerDespacho","despacho","AgregarEjecutivoComponent","obligacion","pretension","cuantia","actualizarEjecutivo","agregarEjecutivo","obtenerEjecutivo","AgregarNotificacionComponent","tipo","expedicion","limite","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","mostrarNotificacion","dataParse","formatDate","actualizarNotificacion","agregarNotificacion","EmpresasNotificadasComponent","recargar","empresa","notificacion","notificado","medio","onChanges","valueChanges","valor","listarEmpresas","listarPartesJuridicas","empresas","agregarEmpresaNotificada","eliminarEmpresaNotificada","ListarNotificacionesComponent","obtenerListadoNotificaciones","iniciarlistadoNotificaciones","notificaciones","eliminarNotificacion","MostrarNotificacionComponent","obtenerActuacion","PersonasNotificadasComponent","persona","listarPersonas","listarPartesNaturales","personas","agregarPersonaNotificada","eliminarPersonaNotificada","PartesJuridicasComponent","rol","agregarParteJuridica","eliminarParteJuridica","PartesComponent","agregarParteNatural","eliminarParteNatural","ArchivoNombrePipe","partes","resultado","AgregarProcesoComponent","numero_proceso","litisconsorcio","fecha_providencia","fecha_publicacion","fecha_finalizacion","listarDespachos","despachos","actualizarProceso","agregarProcesos","mostrarProceso","ListarProcesosComponent","obtenerListadoProcesos","iniciarListadoProcesos","obtenerProcesos","eliminarProceso","listarProcesosId","buscarNumero","MostrarProcesoComponent","contarAlertas","obtenerProceso","contarArchivos","contarCautelares","contarActuaciones","contarNotificaciones","tablaProceso","crearFilasTabla","ejecutivo","tablaEjecutivo","crearFilasTablaJuridico","alertaNotificaciones","alerta","arrayValores","Object","entries","arraySalida","elemento","juridico","routes","path","component","ProcesosRoutingModule","forChild","ProcesosModule","ProcesoService","http","url","urlEjecutivo","urlActuaciones","urlCautelar","urlNotificacion","urlArchivos","post","ruta","urlPaginacion","urlProcesos","put","TodasMisNotificacionesComponent","todasNotificaciones"],"mappings":"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","file":"procesos-procesos-module-es5.js","sourcesContent":["import { Directive, Input, EventEmitter, Optional, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /**\n         * Emits when the state of the accordion changes\n         */\n        this._stateChanges = new Subject();\n        /**\n         * Stream that emits true/false when openAll/closeAll is triggered.\n         */\n        this._openCloseAllActions = new Subject();\n        /**\n         * A readonly id value to use for unique selection coordination.\n         */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /**\n     * Whether the accordion should allow multiple expanded accordion items simultaneously.\n     * @return {?}\n     */\n    get multi() { return this._multi; }\n    /**\n     * @param {?} multi\n     * @return {?}\n     */\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /**\n     * Opens all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /**\n     * Closes all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @private\n     * @param {?} expanded\n     * @return {?}\n     */\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion'\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordion.ngAcceptInputType_multi;\n    /**\n     * Emits when the state of the accordion changes\n     * @type {?}\n     */\n    CdkAccordion.prototype._stateChanges;\n    /**\n     * Stream that emits true/false when openAll/closeAll is triggered.\n     * @type {?}\n     */\n    CdkAccordion.prototype._openCloseAllActions;\n    /**\n     * A readonly id value to use for unique selection coordination.\n     * @type {?}\n     */\n    CdkAccordion.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordion.prototype._multi;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion item.\n * @type {?}\n */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _expansionDispatcher\n     */\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /**\n         * Subscription to openAll/closeAll events.\n         */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /**\n         * Event emitted every time the AccordionItem is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted every time the AccordionItem is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event emitted when the AccordionItem is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * \\@docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /**\n         * The unique AccordionItem id.\n         */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /**\n         * Unregister function for _expansionDispatcher.\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} accordionId\n             * @return {?}\n             */\n            (id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            }));\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /**\n     * Whether the AccordionItem is expanded.\n     * @return {?}\n     */\n    get expanded() { return this._expanded; }\n    /**\n     * @param {?} expanded\n     * @return {?}\n     */\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 * @type {?}\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the AccordionItem is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /**\n     * Emits an event for the accordion item being destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /**\n     * Toggles the expanded state of the accordion item.\n     * @return {?}\n     */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to false.\n     * @return {?}\n     */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to true.\n     * @return {?}\n     */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe((/**\n         * @param {?} expanded\n         * @return {?}\n         */\n        expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        }));\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CdkAccordion, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n            // to the same accordion.\n            { provide: CdkAccordion, useValue: ɵ0 },\n        ])] });\n/** @nocollapse */\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n                    // to the same accordion.\n                    { provide: CdkAccordion, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_expanded;\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_disabled;\n    /**\n     * Subscription to openAll/closeAll events.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._openCloseAllSubscription;\n    /**\n     * Event emitted every time the AccordionItem is closed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.closed;\n    /**\n     * Event emitted every time the AccordionItem is opened.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.opened;\n    /**\n     * Event emitted when the AccordionItem is destroyed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.destroyed;\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.expandedChange;\n    /**\n     * The unique AccordionItem id.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._disabled;\n    /**\n     * Unregister function for _expansionDispatcher.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._removeUniqueSelectionListener;\n    /** @type {?} */\n    CdkAccordionItem.prototype.accordion;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkAccordionItem.prototype._expansionDispatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion,\n        CdkAccordionItem], exports: [CdkAccordion,\n        CdkAccordionItem] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n\n//# sourceMappingURL=accordion.js.map","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, ContentChildren, Input, Output, Directive, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroup, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r6.id)(\"ngClass\", ctx_r6._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/**\n * Event object that is emitted when an autocomplete option is selected.\n */\nclass MatAutocompleteSelectedEvent {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.option;\n}\n/**\n * Event object that is emitted when an autocomplete option is activated.\n * @record\n */\nfunction MatAutocompleteActivatedEvent() { }\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.option;\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/**\n * \\@docs-private\n */\nclass MatAutocompleteBase {\n}\n/** @type {?} */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/**\n * Default `mat-autocomplete` options that can be overridden.\n * @record\n */\nfunction MatAutocompleteDefaultOptions() { }\nif (false) {\n    /**\n     * Whether the first option should be highlighted when an autocomplete panel is opened.\n     * @type {?|undefined}\n     */\n    MatAutocompleteDefaultOptions.prototype.autoActiveFirstOption;\n}\n/**\n * Injection token to be used to override the default options for `mat-autocomplete`.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\nclass MatAutocomplete extends _MatAutocompleteMixinBase {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} defaults\n     */\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete panel should be visible, depending on option length.\n         */\n        this.showPanel = false;\n        this._isOpen = false;\n        /**\n         * Function that maps an option's control value to its display value in the trigger.\n         */\n        this.displayWith = null;\n        /**\n         * Event that is emitted whenever an option from the list is selected.\n         */\n        this.optionSelected = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Emits whenever an option is activated using the keyboard.\n         */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /**\n         * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n         */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /**\n     * Whether the autocomplete panel is open.\n     * @return {?}\n     */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     * @return {?}\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((/**\n             * @param {?} classList\n             * @param {?} className\n             * @return {?}\n             */\n            (classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }), (/** @type {?} */ ({})));\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        }));\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitSelectEvent(option) {\n        /** @type {?} */\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /**\n     * Sets the autocomplete visibility classes on a classlist based on the panel is visible.\n     * @private\n     * @param {?} classList\n     * @return {?}\n     */\n    _setVisibilityClasses(classList) {\n        classList['mat-autocomplete-visible'] = this.showPanel;\n        classList['mat-autocomplete-hidden'] = !this.showPanel;\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return new (t || MatAutocomplete)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatAutocomplete_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\", displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAutocomplete.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\nMatAutocomplete.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_autoActiveFirstOption;\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._activeOptionChanges;\n    /**\n     * Manages active item in option list based on key events.\n     * @type {?}\n     */\n    MatAutocomplete.prototype._keyManager;\n    /**\n     * Whether the autocomplete panel should be visible, depending on option length.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.showPanel;\n    /** @type {?} */\n    MatAutocomplete.prototype._isOpen;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.template;\n    /**\n     * Element for the panel containing the autocomplete options.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panel;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.options;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionGroups;\n    /**\n     * Function that maps an option's control value to its display value in the trigger.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.displayWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._autoActiveFirstOption;\n    /**\n     * Specify the width of the autocomplete panel.  Can be any CSS sizing value, otherwise it will\n     * match the width of its host.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panelWidth;\n    /**\n     * Event that is emitted whenever an option from the list is selected.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionSelected;\n    /**\n     * Event that is emitted when the autocomplete panel is opened.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.opened;\n    /**\n     * Event that is emitted when the autocomplete panel is closed.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.closed;\n    /**\n     * Emits whenever an option is activated using the keyboard.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionActivated;\n    /** @type {?} */\n    MatAutocomplete.prototype._classList;\n    /**\n     * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-origin.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return new (t || MatAutocompleteOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"] });\n/** @nocollapse */\nMatAutocompleteOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    MatAutocompleteOrigin.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The height of each autocomplete option.\n * @type {?}\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @type {?}\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Injection token that determines the scroll handling while the autocomplete panel is open.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatAutocompleteTrigger)),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nclass MatAutocompleteTrigger {\n    /**\n     * @param {?} _element\n     * @param {?} _overlay\n     * @param {?} _viewContainerRef\n     * @param {?} _zone\n     * @param {?} _changeDetectorRef\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _formField\n     * @param {?} _document\n     * @param {?=} _viewportRuler\n     */\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /**\n         * Whether or not the label state is being overridden.\n         */\n        this._manuallyFloatingLabel = false;\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /**\n         * Stream of keyboard events that can close the panel.\n         */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = (/**\n         * @return {?}\n         */\n        () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        });\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when autocomplete has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * \\@docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /**\n         * Stream of autocomplete option selections.\n         */\n        this.optionSelections = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange)));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelections)));\n        }))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     * @return {?}\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                window.addEventListener('blur', this._windowBlurHandler);\n            }));\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /**\n     * Whether or not the autocomplete panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            (/** @type {?} */ (this._overlayRef)).updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     * @return {?}\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter((/**\n         * @return {?}\n         */\n        () => this._overlayAttached))), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter((/**\n             * @return {?}\n             */\n            () => this._overlayAttached))) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event instanceof MatOptionSelectionChange ? event : null)));\n    }\n    /**\n     * The currently active option, coerced to MatOption type.\n     * @return {?}\n     */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /**\n     * Stream of clicks outside of the autocomplete panel.\n     * @private\n     * @return {?}\n     */\n    _getOutsideClickStream() {\n        return merge((/** @type {?} */ (fromEvent(this._document, 'click'))), (/** @type {?} */ (fromEvent(this._document, 'touchend'))))\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            /** @type {?} */\n            const clickTarget = (/** @type {?} */ ((this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target)));\n            /** @type {?} */\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        })));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        Promise.resolve(null).then((/**\n         * @return {?}\n         */\n        () => this._setTriggerValue(value)));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            /** @type {?} */\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            /** @type {?} */\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleInput(event) {\n        /** @type {?} */\n        let target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @private\n     * @param {?=} shouldAnimate Whether the label should be animated when it is floated.\n     * @return {?}\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /**\n     * If the label has been manually elevated, return it to its normal state.\n     * @private\n     * @return {?}\n     */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @private\n     * @return {?}\n     */\n    _scrollToOption() {\n        /** @type {?} */\n        const index = this.autocomplete._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(index, this.autocomplete.options, this.autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.autocomplete._setScrollTop(0);\n        }\n        else {\n            /** @type {?} */\n            const newScrollPosition = _getOptionScrollPosition(index + labelCount, AUTOCOMPLETE_OPTION_HEIGHT, this.autocomplete._getScrollTop(), AUTOCOMPLETE_PANEL_HEIGHT);\n            this.autocomplete._setScrollTop(newScrollPosition);\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @private\n     * @return {?}\n     */\n    _subscribeToClosingActions() {\n        /** @type {?} */\n        const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n        /** @type {?} */\n        const optionChanges = this.autocomplete.options.changes.pipe(tap((/**\n         * @return {?}\n         */\n        () => this._positionStrategy.reapplyLastPosition())), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        })), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this._setValueAndClose(event)));\n    }\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @private\n     * @return {?}\n     */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTriggerValue(value) {\n        /** @type {?} */\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        /** @type {?} */\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @private\n     * @param {?} skip\n     * @return {?}\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this.autocomplete) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        /** @type {?} */\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            }));\n            if (this._viewportRuler) {\n                this._viewportSubscription = this._viewportRuler.change().subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.panelOpen && overlayRef) {\n                        overlayRef.updateSize({ width: this._getPanelWidth() });\n                    }\n                }));\n            }\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        /** @type {?} */\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /**\n     * Sets the positions on a position strategy based on the directive's input state.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        /** @type {?} */\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        /** @type {?} */\n        const panelClass = 'mat-autocomplete-panel-above';\n        /** @type {?} */\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        /** @type {?} */\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @private\n     * @return {?}\n     */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     * @private\n     * @return {?}\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /**\n     * Determines whether the panel can be opened.\n     * @private\n     * @return {?}\n     */\n    _canOpen() {\n        /** @type {?} */\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return new (t || MatAutocompleteTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler)); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatAutocompleteTrigger.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\nMatAutocompleteTrigger.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocompleteTrigger.ngAcceptInputType_autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._componentDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._scrollStrategy;\n    /**\n     * Old value of the native input. Used to work around issues with the `input` event on IE.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._previousValue;\n    /**\n     * Strategy that is used to position the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._positionStrategy;\n    /**\n     * Whether or not the label state is being overridden.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._manuallyFloatingLabel;\n    /**\n     * The subscription for closing actions (some are bound to document).\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closingActionsSubscription;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportSubscription;\n    /**\n     * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n     * closed autocomplete from being reopened if the user switches to another browser tab and then\n     * comes back.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._canOpenOnNextFocus;\n    /**\n     * Whether the element is inside of a ShadowRoot component.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._isInsideShadowRoot;\n    /**\n     * Stream of keyboard events that can close the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closeKeyEventStream;\n    /**\n     * Event handler for when the window is blurred. Needs to be an\n     * arrow function in order to preserve the context.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._windowBlurHandler;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onChange;\n    /**\n     * `View -> model callback called when autocomplete has been touched`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onTouched;\n    /**\n     * The autocomplete panel to be attached to this trigger.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocomplete;\n    /**\n     * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n     * will render the panel underneath the trigger if there is enough space for it to fit in\n     * the viewport, otherwise the panel will be shown above it. If the position is set to\n     * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n     * whether it fits completely in the viewport.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.position;\n    /**\n     * Reference relative to which to position the autocomplete panel.\n     * Defaults to the autocomplete trigger element.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.connectedTo;\n    /**\n     * `autocomplete` attribute to be set on the input element.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocompleteAttribute;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayAttached;\n    /**\n     * Stream of autocomplete option selections.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.optionSelections;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._formField;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin]; }, imports: function () { return [MatOptionModule, OverlayModule, MatCommonModule, CommonModule]; }, exports: function () { return [MatAutocomplete,\n        MatOptionModule,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n                exports: [\n                    MatAutocomplete,\n                    MatOptionModule,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    MatCommonModule\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","import { isDevMode, Directive, NgZone, ElementRef, Renderer2, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { AriaDescriber, A11yModule } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/badge/badge.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nlet nextId = 0;\n// Boilerplate for applying mixins to MatBadge.\n/**\n * \\@docs-private\n */\nclass MatBadgeBase {\n}\n/** @type {?} */\nconst _MatBadgeMixinBase = mixinDisabled(MatBadgeBase);\n/**\n * Directive to display a text badge.\n */\nclass MatBadge extends _MatBadgeMixinBase {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _elementRef\n     * @param {?} _ariaDescriber\n     * @param {?} _renderer\n     * @param {?=} _animationMode\n     */\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the badge has any content.\n         */\n        this._hasContent = false;\n        this._color = 'primary';\n        this._overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /**\n         * Size of the badge. Can be 'small', 'medium', or 'large'.\n         */\n        this.size = 'medium';\n        /**\n         * Unique id for the badge\n         */\n        this._id = nextId++;\n        if (isDevMode()) {\n            /** @type {?} */\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n        }\n    }\n    /**\n     * The color of the badge. Can be `primary`, `accent`, or `warn`.\n     * @return {?}\n     */\n    get color() { return this._color; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /**\n     * Whether the badge should overlap its contents or not\n     * @return {?}\n     */\n    get overlap() { return this._overlap; }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set overlap(val) {\n        this._overlap = coerceBooleanProperty(val);\n    }\n    /**\n     * Message used to describe the decorated element via aria-describedby\n     * @return {?}\n     */\n    get description() { return this._description; }\n    /**\n     * @param {?} newDescription\n     * @return {?}\n     */\n    set description(newDescription) {\n        if (newDescription !== this._description) {\n            /** @type {?} */\n            const badgeElement = this._badgeElement;\n            this._updateHostAriaDescription(newDescription, this._description);\n            this._description = newDescription;\n            if (badgeElement) {\n                newDescription ? badgeElement.setAttribute('aria-label', newDescription) :\n                    badgeElement.removeAttribute('aria-label');\n            }\n        }\n    }\n    /**\n     * Whether the badge is hidden.\n     * @return {?}\n     */\n    get hidden() { return this._hidden; }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set hidden(val) {\n        this._hidden = coerceBooleanProperty(val);\n    }\n    /**\n     * Whether the badge is above the host or not\n     * @return {?}\n     */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /**\n     * Whether the badge is after the host or not\n     * @return {?}\n     */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const contentChange = changes['content'];\n        if (contentChange) {\n            /** @type {?} */\n            const value = contentChange.currentValue;\n            this._hasContent = value != null && `${value}`.trim().length > 0;\n            this._updateTextContent();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const badgeElement = this._badgeElement;\n        if (badgeElement) {\n            if (this.description) {\n                this._ariaDescriber.removeDescription(badgeElement, this.description);\n            }\n            // When creating a badge through the Renderer, Angular will keep it in an index.\n            // We have to destroy it ourselves, otherwise it'll be retained in memory.\n            if (this._renderer.destroyNode) {\n                this._renderer.destroyNode(badgeElement);\n            }\n        }\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered.\n     * Undefined if the element hasn't been created (e.g. if the badge doesn't have content).\n     * @return {?}\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    /**\n     * Injects a span element into the DOM with the content.\n     * @private\n     * @return {?}\n     */\n    _updateTextContent() {\n        if (!this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        else {\n            this._badgeElement.textContent = this.content;\n        }\n        return this._badgeElement;\n    }\n    /**\n     * Creates the badge element\n     * @private\n     * @return {?}\n     */\n    _createBadgeElement() {\n        /** @type {?} */\n        const badgeElement = this._renderer.createElement('span');\n        /** @type {?} */\n        const activeClass = 'mat-badge-active';\n        /** @type {?} */\n        const contentClass = 'mat-badge-content';\n        // Clear any existing badges which may have persisted from a server-side render.\n        this._clearExistingBadges(contentClass);\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        badgeElement.classList.add(contentClass);\n        badgeElement.textContent = this.content;\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        if (this.description) {\n            badgeElement.setAttribute('aria-label', this.description);\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    badgeElement.classList.add(activeClass);\n                }));\n            }));\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /**\n     * Sets the aria-label property on the element\n     * @private\n     * @param {?} newDescription\n     * @param {?} oldDescription\n     * @return {?}\n     */\n    _updateHostAriaDescription(newDescription, oldDescription) {\n        // ensure content available before setting label\n        /** @type {?} */\n        const content = this._updateTextContent();\n        if (oldDescription) {\n            this._ariaDescriber.removeDescription(content, oldDescription);\n        }\n        if (newDescription) {\n            this._ariaDescriber.describe(content, newDescription);\n        }\n    }\n    /**\n     * Adds css theme class given the color to the component host\n     * @private\n     * @param {?} colorPalette\n     * @return {?}\n     */\n    _setColor(colorPalette) {\n        if (colorPalette !== this._color) {\n            if (this._color) {\n                this._elementRef.nativeElement.classList.remove(`mat-badge-${this._color}`);\n            }\n            if (colorPalette) {\n                this._elementRef.nativeElement.classList.add(`mat-badge-${colorPalette}`);\n            }\n        }\n    }\n    /**\n     * Clears any existing badges that might be left over from server-side rendering.\n     * @private\n     * @param {?} cssClass\n     * @return {?}\n     */\n    _clearExistingBadges(cssClass) {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        let childCount = element.children.length;\n        // Use a reverse while, because we'll be removing elements from the list as we're iterating.\n        while (childCount--) {\n            /** @type {?} */\n            const currentChild = element.children[childCount];\n            if (currentChild.classList.contains(cssClass)) {\n                element.removeChild(currentChild);\n            }\n        }\n    }\n}\nMatBadge.ɵfac = function MatBadge_Factory(t) { return new (t || MatBadge)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatBadge.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatBadge, selectors: [[\"\", \"matBadge\", \"\"]], hostAttrs: [1, \"mat-badge\"], hostVars: 20, hostBindings: function MatBadge_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-badge-overlap\", ctx.overlap)(\"mat-badge-above\", ctx.isAbove())(\"mat-badge-below\", !ctx.isAbove())(\"mat-badge-before\", !ctx.isAfter())(\"mat-badge-after\", ctx.isAfter())(\"mat-badge-small\", ctx.size === \"small\")(\"mat-badge-medium\", ctx.size === \"medium\")(\"mat-badge-large\", ctx.size === \"large\")(\"mat-badge-hidden\", ctx.hidden || !ctx._hasContent)(\"mat-badge-disabled\", ctx.disabled);\n    } }, inputs: { disabled: [\"matBadgeDisabled\", \"disabled\"], position: [\"matBadgePosition\", \"position\"], size: [\"matBadgeSize\", \"size\"], color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\"], description: [\"matBadgeDescription\", \"description\"], hidden: [\"matBadgeHidden\", \"hidden\"], content: [\"matBadge\", \"content\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatBadge.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: AriaDescriber },\n    { type: Renderer2 },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatBadge.propDecorators = {\n    color: [{ type: Input, args: ['matBadgeColor',] }],\n    overlap: [{ type: Input, args: ['matBadgeOverlap',] }],\n    position: [{ type: Input, args: ['matBadgePosition',] }],\n    content: [{ type: Input, args: ['matBadge',] }],\n    description: [{ type: Input, args: ['matBadgeDescription',] }],\n    size: [{ type: Input, args: ['matBadgeSize',] }],\n    hidden: [{ type: Input, args: ['matBadgeHidden',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadge, [{\n        type: Directive,\n        args: [{\n                selector: '[matBadge]',\n                inputs: ['disabled: matBadgeDisabled'],\n                host: {\n                    'class': 'mat-badge',\n                    '[class.mat-badge-overlap]': 'overlap',\n                    '[class.mat-badge-above]': 'isAbove()',\n                    '[class.mat-badge-below]': '!isAbove()',\n                    '[class.mat-badge-before]': '!isAfter()',\n                    '[class.mat-badge-after]': 'isAfter()',\n                    '[class.mat-badge-small]': 'size === \"small\"',\n                    '[class.mat-badge-medium]': 'size === \"medium\"',\n                    '[class.mat-badge-large]': 'size === \"large\"',\n                    '[class.mat-badge-hidden]': 'hidden || !_hasContent',\n                    '[class.mat-badge-disabled]': 'disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.AriaDescriber }, { type: ɵngcc0.Renderer2 }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { position: [{\n            type: Input,\n            args: ['matBadgePosition']\n        }], size: [{\n            type: Input,\n            args: ['matBadgeSize']\n        }], color: [{\n            type: Input,\n            args: ['matBadgeColor']\n        }], overlap: [{\n            type: Input,\n            args: ['matBadgeOverlap']\n        }], description: [{\n            type: Input,\n            args: ['matBadgeDescription']\n        }], hidden: [{\n            type: Input,\n            args: ['matBadgeHidden']\n        }], content: [{\n            type: Input,\n            args: ['matBadge']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatBadge.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatBadge.ngAcceptInputType_hidden;\n    /** @type {?} */\n    MatBadge.ngAcceptInputType_overlap;\n    /**\n     * Whether the badge has any content.\n     * @type {?}\n     */\n    MatBadge.prototype._hasContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._overlap;\n    /**\n     * Position the badge should reside.\n     * Accepts any combination of 'above'|'below' and 'before'|'after'\n     * @type {?}\n     */\n    MatBadge.prototype.position;\n    /**\n     * The content for the badge\n     * @type {?}\n     */\n    MatBadge.prototype.content;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._description;\n    /**\n     * Size of the badge. Can be 'small', 'medium', or 'large'.\n     * @type {?}\n     */\n    MatBadge.prototype.size;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._hidden;\n    /**\n     * Unique id for the badge\n     * @type {?}\n     */\n    MatBadge.prototype._id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._badgeElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._ariaDescriber;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatBadge.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/badge/badge-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatBadgeModule {\n}\nMatBadgeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatBadgeModule });\nMatBadgeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatBadgeModule_Factory(t) { return new (t || MatBadgeModule)(); }, imports: [[\n            A11yModule,\n            MatCommonModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatBadgeModule, { declarations: function () { return [MatBadge]; }, imports: function () { return [A11yModule,\n        MatCommonModule]; }, exports: function () { return [MatBadge]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadgeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    MatCommonModule\n                ],\n                exports: [MatBadge],\n                declarations: [MatBadge]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/badge/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n\n//# sourceMappingURL=badge.js.map","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, hasModifierKey, SPACE, HOME, END } from '@angular/cdk/keycodes';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, group, query, animateChild } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a `MatAccordion`.\n * \\@docs-private\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c3 = function (a0, a1) { return { collapsedHeight: a0, expandedHeight: a1 }; };\nconst _c4 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r19 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r19._getExpandedState());\n} }\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nfunction MatAccordionBase() { }\nif (false) {\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.togglePosition;\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderKeydown;\n    /**\n     * Handles focus events on the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderFocus;\n}\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n * @type {?}\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time and timing curve for expansion panel animations.\n * @type {?}\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n * @type {?}\n */\nconst matExpansionAnimations = {\n    /**\n     * Animation that rotates the indicator arrow.\n     */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /**\n     * Animation that expands and collapses the panel header height.\n     */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed, void', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}'\n        }), {\n            params: { expandedHeight: '64px' }\n        }),\n        transition('expanded <=> collapsed, void => collapsed', group([\n            query('@indicatorRotate', animateChild(), { optional: true }),\n            animate(EXPANSION_PANEL_ANIMATION_TIMING),\n        ])),\n    ]),\n    /**\n     * Animation that expands and collapses the panel content.\n     */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanelContent.prototype._template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter for generating unique element ids.\n * @type {?}\n */\nlet uniqueId = 0;\n/**\n * Object that can be used to override the default options\n * for all of the expansion panels in a module.\n * @record\n */\nfunction MatExpansionPanelDefaultOptions() { }\nif (false) {\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.collapsedHeight;\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.hideToggle;\n}\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n * @type {?}\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?} _animationMode\n     * @param {?=} defaultOptions\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /**\n         * An event emitted after the body's expansion animation happens.\n         */\n        this.afterExpand = new EventEmitter();\n        /**\n         * An event emitted after the body's collapse animation happens.\n         */\n        this.afterCollapse = new EventEmitter();\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /**\n         * Stream of body animation done events.\n         */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        }));\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * The position of the expansion indicator.\n     * @return {?}\n     */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * Toggles the expanded state of the expansion panel.\n     * @return {?}\n     */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to false.\n     * @return {?}\n     */\n    close() {\n        this.expanded = false;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to true.\n     * @return {?}\n     */\n    open() {\n        this.expanded = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith((/** @type {?} */ (null))), filter((/**\n             * @return {?}\n             */\n            () => this.expanded && !this._portal)), take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /**\n     * Checks whether the expansion panel's content contains the currently-focused element.\n     * @return {?}\n     */\n    _containsFocus() {\n        if (this._body) {\n            /** @type {?} */\n            const focusedElement = this._document.activeElement;\n            /** @type {?} */\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_hideToggle;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_expanded;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._togglePosition;\n    /**\n     * An event emitted after the body's expansion animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterExpand;\n    /**\n     * An event emitted after the body's collapse animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterCollapse;\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._inputChanges;\n    /**\n     * Optionally defined accordion the expansion panel belongs to.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.accordion;\n    /**\n     * Content that will be rendered lazily.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._lazyContent;\n    /**\n     * Element containing the panel's user-provided content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._body;\n    /**\n     * Portal holding the user's content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._portal;\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._headerId;\n    /**\n     * Stream of body animation done events.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._bodyAnimationDone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._viewContainerRef;\n    /** @type {?} */\n    MatExpansionPanel.prototype._animationMode;\n}\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultOptions\n     */\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /**\n         * Whether Angular animations in the panel header should be disabled.\n         */\n        this._animationsDisabled = true;\n        /** @type {?} */\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => !!(changes['hideToggle'] || changes['togglePosition'])))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            }))))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter((/**\n         * @return {?}\n         */\n        () => panel._containsFocus())))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => _focusMonitor.focusVia(_element, 'program')));\n        _focusMonitor.monitor(_element).subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            if (origin && panel.accordion) {\n                panel.accordion._handleHeaderFocus(this);\n            }\n        }));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _animationStarted() {\n        // Currently the `expansionHeight` animation has a `void => collapsed` transition which is\n        // there to work around a bug in Angular (see #13088), however this introduces a different\n        // issue. The new transition will cause the header to animate in on init (see #16067), if the\n        // consumer has set a header height that is different from the default one. We work around it\n        // by disabling animations on the header and re-enabling them after the first animation has run.\n        // Note that Angular dispatches animation events even if animations are disabled. Ideally this\n        // wouldn't be necessary if we remove the `void => collapsed` transition, but we have to wait\n        // for https://github.com/angular/angular/issues/18847 to be resolved.\n        this._animationsDisabled = false;\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets the toggle position for the header.\n     * @return {?}\n     */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @param {?=} origin Origin of the action that triggered the focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 19, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@expansionHeight.start\", function MatExpansionPanelHeader_animation_expansionHeight_start_HostBindingHandler() { return ctx._animationStarted(); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? 0 - 1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@.disabled\", ctx._animationsDisabled)(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(16, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(13, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c6, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;position:relative}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n            matExpansionAnimations.expansionHeaderHeight\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                    matExpansionAnimations.expansionHeaderHeight\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@.disabled]': '_animationsDisabled',\n                    '(@expansionHeight.start)': '_animationStarted()',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;position:relative}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._parentChangeSubscription;\n    /**\n     * Whether Angular animations in the panel header should be disabled.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype._animationsDisabled;\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.collapsedHeight;\n    /** @type {?} */\n    MatExpansionPanelHeader.prototype.panel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._changeDetectorRef;\n}\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /**\n         * Headers belonging to this accordion.\n         */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /**\n         * The position of the expansion indicator.\n         */\n        this.togglePosition = 'after';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((/**\n         * @param {?} headers\n         * @return {?}\n         */\n        (headers) => {\n            this._ownHeaders.reset(headers.filter((/**\n             * @param {?} header\n             * @return {?}\n             */\n            header => header.panel.accordion === this)));\n            this._ownHeaders.notifyOnChanges();\n        }));\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap();\n    }\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleHeaderKeydown(event) {\n        const { keyCode } = event;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME) {\n            if (!hasModifierKey(event)) {\n                manager.setFirstItemActive();\n                event.preventDefault();\n            }\n        }\n        else if (keyCode === END) {\n            if (!hasModifierKey(event)) {\n                manager.setLastItemActive();\n                event.preventDefault();\n            }\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\nconst ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAccordion.ngAcceptInputType_hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._keyManager;\n    /**\n     * Headers belonging to this accordion.\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._ownHeaders;\n    /**\n     * All headers inside the accordion. Includes headers inside nested accordions.\n     * @type {?}\n     */\n    MatAccordion.prototype._headers;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     * @type {?}\n     */\n    MatAccordion.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordion.prototype.togglePosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); }, imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n\n//# sourceMappingURL=expansion.js.map","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, ContentChildren, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, ElementRef, Inject, ViewChild, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/radio.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatRadioDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatRadioDefaultOptions.prototype.color;\n}\n/** @type {?} */\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @return {?}\n */\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatRadioGroup)),\n    multi: true\n};\n/**\n * Change event object emitted by MatRadio and MatRadioGroup.\n */\nclass MatRadioChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * The MatRadioButton that emits the change event.\n     * @type {?}\n     */\n    MatRadioChange.prototype.source;\n    /**\n     * The value of the MatRadioButton.\n     * @type {?}\n     */\n    MatRadioChange.prototype.value;\n}\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup {\n    /**\n     * @param {?} _changeDetector\n     */\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /**\n         * Selected value for the radio group.\n         */\n        this._value = null;\n        /**\n         * The HTML name attribute applied to radio buttons in this group.\n         */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /**\n         * The currently selected radio button. Should match value.\n         */\n        this._selected = null;\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n         */\n        this._labelPosition = 'after';\n        /**\n         * Whether the radio group is disabled.\n         */\n        this._disabled = false;\n        /**\n         * Whether the radio group is required.\n         */\n        this._required = false;\n        /**\n         * The method to be called in order to update ngModel\n         */\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * \\@docs-private\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * Name of the radio button group. All radio buttons inside this group will use this name.\n     * @return {?}\n     */\n    get name() { return this._name; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} selected\n     * @return {?}\n     */\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /**\n     * Whether the radio group is disabled\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Whether the radio group is required\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @private\n     * @return {?}\n     */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        /** @type {?} */\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            }));\n        }\n    }\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange((/** @type {?} */ (this._selected)), this._value));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((/**\n             * @param {?} radio\n             * @return {?}\n             */\n            radio => radio._markForCheck()));\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return new (t || MatRadioGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" }, exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR])] });\n/** @nocollapse */\nMatRadioGroup.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nMatRadioGroup.propDecorators = {\n    change: [{ type: Output }],\n    _radios: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatRadioButton)), { descendants: true },] }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatRadioButton)), { descendants: true }]\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatRadioGroup.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatRadioGroup.ngAcceptInputType_required;\n    /**\n     * Selected value for the radio group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._value;\n    /**\n     * The HTML name attribute applied to radio buttons in this group.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._name;\n    /**\n     * The currently selected radio button. Should match value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._selected;\n    /**\n     * Whether the `value` has been set to its initial value.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._isInitialized;\n    /**\n     * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._labelPosition;\n    /**\n     * Whether the radio group is disabled.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._disabled;\n    /**\n     * Whether the radio group is required.\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._required;\n    /**\n     * The method to be called in order to update ngModel\n     * @type {?}\n     */\n    MatRadioGroup.prototype._controlValueAccessorChangeFn;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * \\@docs-private\n     * @type {?}\n     */\n    MatRadioGroup.prototype.onTouched;\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    MatRadioGroup.prototype.change;\n    /**\n     * Child radio buttons.\n     * @type {?}\n     */\n    MatRadioGroup.prototype._radios;\n    /**\n     * Theme color for all of the radio buttons in the group.\n     * @type {?}\n     */\n    MatRadioGroup.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioGroup.prototype._changeDetector;\n}\n// Boilerplate for applying mixins to MatRadioButton.\n/**\n * \\@docs-private\n */\nclass MatRadioButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatRadioButtonBase.prototype.disabled;\n    /** @type {?} */\n    MatRadioButtonBase.prototype._elementRef;\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\n/** @type {?} */\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonMixinBase {\n    /**\n     * @param {?} radioGroup\n     * @param {?} elementRef\n     * @param {?} _changeDetector\n     * @param {?} _focusMonitor\n     * @param {?} _radioDispatcher\n     * @param {?=} _animationMode\n     * @param {?=} _providerOverride\n     */\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /**\n         * The unique ID for the radio button.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /**\n         * Whether this radio is checked.\n         */\n        this._checked = false;\n        /**\n         * Value assigned to this radio.\n         */\n        this._value = null;\n        /**\n         * Unregister function for _radioDispatcher\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} name\n             * @return {?}\n             */\n            (id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            }));\n    }\n    /**\n     * Whether this radio button is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        /** @type {?} */\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * The value of this radio button.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /**\n     * Whether the label should appear after or before the radio button. Defaults to 'after'\n     * @return {?}\n     */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /**\n     * Whether the radio button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /**\n     * Whether the radio button is required.\n     * @return {?}\n     */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /**\n     * Theme color of the radio button.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * ID of the native input element inside `<mat-radio-button>`\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Focuses the radio button.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /**\n     * Dispatch change event with current value.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        /** @type {?} */\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /**\n     * Sets the disabled state and marks for check if a change occurred.\n     * @protected\n     * @param {?} value\n     * @return {?}\n     */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MatRadioGroup, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8)); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], viewQuery: function MatRadioButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r14 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r14)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] }\n];\nMatRadioButton.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatRadioButton.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatRadioButton.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatRadioButton.ngAcceptInputType_required;\n    /** @type {?} */\n    MatRadioButton.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._uniqueId;\n    /**\n     * The unique ID for the radio button.\n     * @type {?}\n     */\n    MatRadioButton.prototype.id;\n    /**\n     * Analog to HTML 'name' attribute used to group radios for unique selection.\n     * @type {?}\n     */\n    MatRadioButton.prototype.name;\n    /**\n     * Used to set the 'aria-label' attribute on the underlying input element.\n     * @type {?}\n     */\n    MatRadioButton.prototype.ariaLabel;\n    /**\n     * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n     * @type {?}\n     */\n    MatRadioButton.prototype.ariaLabelledby;\n    /**\n     * The 'aria-describedby' attribute is read after the element's label and field type.\n     * @type {?}\n     */\n    MatRadioButton.prototype.ariaDescribedby;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._labelPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._color;\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     * @type {?}\n     */\n    MatRadioButton.prototype.change;\n    /**\n     * The parent radio group. May or may not be present.\n     * @type {?}\n     */\n    MatRadioButton.prototype.radioGroup;\n    /**\n     * Whether this radio is checked.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._checked;\n    /**\n     * Whether this radio is disabled.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._disabled;\n    /**\n     * Whether this radio is required.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._required;\n    /**\n     * Value assigned to this radio.\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._value;\n    /**\n     * Unregister function for _radioDispatcher\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._removeUniqueSelectionListener;\n    /**\n     * The native `<input type=radio>` element\n     * @type {?}\n     */\n    MatRadioButton.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatRadioButton.prototype._changeDetector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._radioDispatcher;\n    /** @type {?} */\n    MatRadioButton.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRadioButton.prototype._providerOverride;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/radio-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); }, imports: [[MatRippleModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup,\n        MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup,\n        MatRadioButton,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/radio/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule };\n\n//# sourceMappingURL=radio.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, NgZone, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-slide-toggle` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nfunction MatSlideToggleDefaultOptions() { }\nif (false) {\n    /**\n     * Whether toggle action triggers value changes in slide toggle.\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableToggleValue;\n    /**\n     * Whether drag action triggers value changes in slide toggle.\n     * @deprecated No longer being used.\n     * \\@breaking-change 10.0.0\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableDragValue;\n}\n/**\n * Injection token to be used to override the default options for `mat-slide-toggle`.\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => ({ disableToggleValue: false }))\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for slide-toggle components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggle)),\n    multi: true\n};\n/**\n * Change event object emitted by a MatSlideToggle.\n */\nclass MatSlideToggleChange {\n    /**\n     * @param {?} source\n     * @param {?} checked\n     */\n    constructor(source, checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\nif (false) {\n    /**\n     * The source MatSlideToggle of the event.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.source;\n    /**\n     * The new `checked` value of the MatSlideToggle.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/**\n * \\@docs-private\n */\nclass MatSlideToggleBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSlideToggleBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/**\n * Represents a slidable \"switch\" toggle that can be moved between on and off.\n */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} tabIndex\n     * @param {?} _ngZone\n     * @param {?} defaults\n     * @param {?=} _animationMode\n     * @param {?=} _dir\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, \n    /**\n     * @deprecated `_ngZone` and `_dir` parameters to be removed.\n     * @breaking-change 10.0.0\n     */\n    _ngZone, defaults, _animationMode, _dir) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /**\n         * Name value will be applied to the input element if present.\n         */\n        this.name = null;\n        /**\n         * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n         */\n        this.labelPosition = 'after';\n        /**\n         * Used to set the aria-label attribute on the underlying input element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Used to set the aria-labelledby attribute on the underlying input element.\n         */\n        this.ariaLabelledby = null;\n        /**\n         * An event will be dispatched each time the slide-toggle changes its value.\n         */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle is dragged.\n         * This event is always emitted when the user drags the slide toggle to make a change greater\n         * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n         * the user toggles the slide toggle to change its value.\n         * @deprecated No longer being used. To be removed.\n         * \\@breaking-change 10.0.0\n         */\n        this.dragChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the slide-toggle is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Whether the slide-toggle element is checked or not.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._onTouched()));\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Method being called whenever the underlying input emits a change event.\n     * @param {?} event\n     * @return {?}\n     */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /**\n     * Method being called whenever the slide-toggle has been clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the slide-toggle.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Toggles the checked state of the slide-toggle.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\", dragChange: \"dragChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r26 = ɵngcc0.ɵɵreference(1);\n        const _r30 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r30.textContent || !_r30.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r26)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc4.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    dragChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], dragChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._uniqueId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._required;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._checked;\n    /**\n     * Reference to the thumb HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbEl;\n    /**\n     * Reference to the thumb bar HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbBarEl;\n    /**\n     * Name value will be applied to the input element if present.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.name;\n    /**\n     * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.id;\n    /**\n     * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.labelPosition;\n    /**\n     * Used to set the aria-label attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabel;\n    /**\n     * Used to set the aria-labelledby attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabelledby;\n    /**\n     * An event will be dispatched each time the slide-toggle changes its value.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.change;\n    /**\n     * An event will be dispatched each time the slide-toggle input is toggled.\n     * This event is always emitted when the user toggles the slide toggle, but this does not mean\n     * the slide toggle's value has changed.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.toggleChange;\n    /**\n     * An event will be dispatched each time the slide-toggle is dragged.\n     * This event is always emitted when the user drags the slide toggle to make a change greater\n     * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n     * the user toggles the slide toggle to change its value.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatSlideToggle.prototype.dragChange;\n    /**\n     * Reference to the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._inputElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatSlideToggle.prototype.defaults;\n    /** @type {?} */\n    MatSlideToggle.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggleRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based slide-toggle implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ],\n        _MatSlideToggleRequiredValidatorModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatSlideToggle,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ProcesoService } from \"../../servicios/proceso.service\";\nimport { Location } from '@angular/common';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-agregar-actuacion',\n  templateUrl: './agregar-actuacion.component.html',\n  styleUrls: ['./agregar-actuacion.component.css']\n})\nexport class AgregarActuacionComponent implements OnInit {\n  private accion: string;\n  actuacion : any;\n  id : number;\n  private proceso : number;\n  form = new FormGroup({\n    proceso :  new FormControl(),\n    actuacion :  new FormControl('', [\n      Validators.required,\n      Validators.pattern('[^`~!@$%^&*()_|+\\=?;:,.]+$')\n    ]),\n    anotacion :  new FormControl('', [\n      Validators.required,\n      Validators.pattern('[^`~!@$%^&*()_|+\\=?;:,.]+$')\n    ]),\n    inicio :  new FormControl('', [\n      Validators.required\n    ]),\n    termino :  new FormControl('', [\n      Validators.required\n    ]),\n    registro:  new FormControl('', [\n      Validators.required\n    ]),\n\n  })\n  constructor(private route: ActivatedRoute, private procesoService : ProcesoService,private location: Location) { }\n\n  ngOnInit(): void {\n    this.accion = this.route.snapshot.paramMap.get('accion')\n    this.form.controls['proceso'].setValue(this.proceso)\n    if(this.accion === 'actualizar'){\n      this.inicializar()\n      console.log('actualizando')\n    }else{\n      this.proceso =+ this.route.snapshot.paramMap.get('proceso')\n      this.form.controls['proceso'].setValue(this.proceso)\n    }\n  }\n  private inicializar(){\n    this.id =+  this.route.snapshot.paramMap.get('id')\n    this.procesoService.mostrarActuacion(this.id).subscribe(data => {\n      this.form.controls['proceso'].setValue(data['proceso'])\n      this.form.controls['actuacion'].setValue(data['actuacion'])\n      this.form.controls['anotacion'].setValue(data['anotacion'])\n      this.form.controls['inicio'].setValue(data['inicio'])\n      this.form.controls['termino'].setValue(data['termino'])\n      this.form.controls['registro'].setValue(data['registro'])\n      \n    })\n  }\n\n  volver(): void{\n    this.location.back()\n  }\n\n\n  registrar():void{\n    if (this.accion === 'actualizar') {\n      this.procesoService.actualizarActuacion(this.form.value, this.id).subscribe(data => console.log(data))\n    } else {\n      this.procesoService.agregarActuacion(this.form.value).subscribe(data => this.volver())\n    }\n    \n  }\n\n}\n","<mat-card>\n<form [formGroup]=\"form\" (ngSubmit)=\"registrar()\" novalidate>\n  <div>\n    <span class=\"titulo\">Datos generales</span>\n  </div>\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Actuacion</mat-label>\n    <input formControlName='actuacion' matInput>\n    <mat-error *ngIf=\"form.get('actuacion').hasError('required')\">\n      <strong>Este campo es obligatorio</strong>\n    </mat-error>\n    <mat-error *ngIf=\"form.get('actuacion').hasError('pattern')\">\n      <strong>los caracteres especiales no estan permitidos</strong>\n    </mat-error>\n  </mat-form-field>\n  \n  <mat-form-field appearance=\"outline\">\n      <mat-label>Anotacion</mat-label>\n      <input formControlName='anotacion' matInput>\n      <mat-error *ngIf=\"form.get('anotacion').hasError('required')\">\n        <strong>Este campo es obligatorio</strong>\n      </mat-error>\n      <mat-error *ngIf=\"form.get('anotacion').hasError('pattern')\">\n        <strong>los caracteres especiales no estan permitidos</strong>\n      </mat-error>\n    </mat-form-field>\n  <br>\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Inicio</mat-label>\n    <input  matInput type=\"datetime-local\"  formControlName='inicio'>\n  </mat-form-field>\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Terminación</mat-label>\n    <input  matInput type=\"datetime-local\"  formControlName='termino'>\n  </mat-form-field>\n  <br>\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Registro</mat-label>\n    <input  matInput type=\"datetime-local\"  formControlName='registro'>\n  </mat-form-field>\n  <br>  \n  <div>\n    <button type=\"submit\" color=\"primary\" [disabled]=\"form.invalid\"  mat-raised-button>\n      <mat-icon>send</mat-icon>enviar\n  </button>\n  <a color=\"warn\" (click)=\"volver()\" mat-raised-button>\n      <mat-icon>cancelar</mat-icon>cancelar\n  </a>\n  </div>\n</form>\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProcesoService } from \"../../servicios/proceso.service\";\nimport { ConfirmDialogComponent } from \"../../../compartidos/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport {MatPaginator} from '@angular/material/paginator';\nimport { Location } from '@angular/common';\n\n\n@Component({\n  selector: 'app-listar-actuaciones',\n  templateUrl: './listar-actuaciones.component.html',\n  styleUrls: ['./listar-actuaciones.component.css']\n})\nexport class ListarActuacionesComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  actuaciones : any;\n  proceso: number;\n  count : number;\n  next : number;\n  previous : number;\n  pageIndex : number;\n  displayedColumns: string[] = ['actuacion', 'registro', 'acciones'];\n  constructor(private route: ActivatedRoute, private procesoService: ProcesoService, public dialog: MatDialog, private _snackBar: MatSnackBar,private location: Location){ }\n\n  ngOnInit(): void {\n    this.listadoInicial()\n  }\n  ngAfterViewInit() {\n    this.paginator.page.subscribe(\n       (event) => this.listarActuaciones(event)\n    );\n  }\n\n\n  listadoInicial(){\n    this.proceso = +this.route.snapshot.paramMap.get('proceso')\n    this.procesoService.iniciarListadoActuaciones(this.proceso).subscribe(data => {\n      this.actuaciones = data['results'];\n      this.count = data['count'];\n      this.next = data['next'];\n      this.previous = data['previous'];\n      this.pageIndex = 0;\n      console.log(data)\n    })\n  }\n\n  listarActuaciones(event:any):void {\n    if (event.pageIndex === this.pageIndex+1) {\n      this.procesoService.obtenerNotificaciones(this.next).subscribe(data =>{\n        this.actuaciones = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(this.actuaciones)\n      })\n      this.pageIndex++\n    } else {\n      this.procesoService.obtenerNotificaciones(this.previous).subscribe(data =>{\n        this.actuaciones = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n    })\n    this.pageIndex--\n   }\n  }\n  \n  private openSnackBar(mensaje, accion):void {\n    this._snackBar.open(mensaje, accion, {\n      duration: 5000,\n    });\n  }\n\n  confirmDialog(registro:any): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data:{titulo:'alerta', mensaje:`estas seguro de querer eliminar el registro de ${registro.id}`}\n    })\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if(dialogResult){\n        this.procesoService.eliminarActuacion(registro.id).subscribe(result => {\n          this.listadoInicial()\n          this.openSnackBar(\"registro eliminado\", \"☠️\")\n        })\n      }\n    });\n  }\n  \n  volver(): void{\n    this.location.back()\n  }\n\n}\n","<mat-card>   \n    <mat-card-title >\n      <mat-toolbar>\n        <span class=\"titulo\">Actuaciones</span>\n      </mat-toolbar>\n    </mat-card-title>\n    <mat-card-content>\n        <table mat-table [dataSource]=\"actuaciones\" class=\"mat-elevation-z8\">\n            \n            <ng-container matColumnDef=\"actuacion\">\n                <th mat-header-cell *matHeaderCellDef>Actuacion</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.actuacion}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"registro\">\n                <th mat-header-cell *matHeaderCellDef>Registro</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.registro}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"acciones\">\n                <th mat-header-cell *matHeaderCellDef>\n                  <a mat-icon-button color=\"accent\" (click)=\"volver()\" >\n                    <mat-icon>reply</mat-icon>\n                  </a>\n                  <a routerLink=\"/dashboard/proceso/agregar-actuacion/crear/{{proceso}}\"  mat-icon-button color=\"primary\">\n                    <mat-icon hr>person_add</mat-icon>\n                  </a>\n                </th>\n                <td mat-cell *matCellDef=\"let element\">  \n                  <button  mat-icon-button color=\"warn\" (click)=\"confirmDialog(element)\">\n                    <mat-icon>delete_forever</mat-icon>\n                  </button>\n                  <a routerLink=\"/dashboard/proceso/mostrar-actuacion/{{element.id}}\" mat-icon-button color=\"primary\">\n                    <mat-icon>face</mat-icon>\n                  </a>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <mat-paginator  [length]=\"count\" [pageSize]=\"5\"></mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { ProcesoService } from '../../servicios/proceso.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmDialogComponent } from \"../../../compartidos/confirm-dialog/confirm-dialog.component\";\nimport { Location } from '@angular/common';\nimport { MatDialog} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-mostrar-actuacion',\n  templateUrl: './mostrar-actuacion.component.html',\n  styleUrls: ['./mostrar-actuacion.component.css']\n})\nexport class MostrarActuacionComponent implements OnInit {\n  id: number;\n  actuacion: any;\n  constructor(private location: Location, private route: ActivatedRoute, private procesoService: ProcesoService,public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.mostrarActuacion()\n  }\n\n  mostrarActuacion(): void {\n    this.id=+ this.route.snapshot.paramMap.get('id')\n    this.procesoService.mostrarActuacion(this.id).subscribe(data => {\n      this.actuacion = data\n      console.log(data)\n    })\n  }\n\n  volver(): void{\n    this.location.back()\n  }\n\n\n  confirmDialog(): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data:{titulo:'alerta', mensaje:`estas seguro de querer eliminar este registro`}\n    })\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if(dialogResult){\n        this.procesoService.eliminarActuacion(this.actuacion.id).subscribe(result => {\n          this.volver() \n        })\n      }\n    });\n  }\n\n\n}\n","<mat-card>\n    <mat-card-title>\n        <mat-toolbar>\n            <span class=\"titulo\">Actuación</span>\n        </mat-toolbar>\n    </mat-card-title> \n    <mat-card-content>\n       <table>\n           <tr>\n               <td><strong>Actuacion : </strong> </td>\n               <td>{{actuacion.actuacion}}</td>\n           </tr>\n           <tr>\n                <td><strong>Anotación : </strong> </td>\n                <td>{{actuacion.anotacion}}</td>\n            </tr>\n            <tr>\n                <td><strong>Inicio : </strong> </td>\n                <td>{{actuacion.inicio}}</td>\n            </tr>\n            <tr>\n                <td><strong>Termino : </strong> </td>\n                <td>{{actuacion.termino}}</td>\n            </tr>\n            <tr>\n                <td><strong>Registro : </strong> </td>\n                <td>{{actuacion.registro}}</td>\n            </tr>\n            <tr>\n                <td style=\"text-align:center\" colspan=\"2\">\n                    <button mat-icon-button color=\"accent\" (click)=\"volver()\" >\n                        <mat-icon>reply</mat-icon>\n                    </button>\n                    <button mat-icon-button color=\"primary\" routerLink=\"/dashboard/proceso/actualizar-actuacion/actualizar/{{actuacion.id}}\">\n                      <mat-icon>create</mat-icon>\n                    </button>\n                    <button mat-icon-button color=\"warn\"  (click)=\"confirmDialog()\">\n                      <mat-icon>delete_forever</mat-icon>\n                    </button>\n                </td>\n            </tr>\n       </table>   \n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { ActivatedRoute } from '@angular/router';\n\n\nimport { ProcesoService } from \"../../servicios/proceso.service\";\nimport { Location } from '@angular/common';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-agregar-archivo',\n  templateUrl: './agregar-archivo.component.html',\n  styleUrls: ['./agregar-archivo.component.css']\n})\nexport class AgregarArchivoComponent implements OnInit {\n  private accion: string;\n  archivo : any;\n  id : number;\n  private proceso : string;\n  form = new FormGroup({\n    nombre_archivo: new FormControl(),\n    archivo :  new FormControl(),\n    descripcion : new FormControl(),\n  })\n  constructor(private route: ActivatedRoute, private procesoService : ProcesoService,private location: Location) { }\n\n  ngOnInit(): void {\n    this.accion = this.route.snapshot.paramMap.get('accion')\n    if(this.accion === 'actualizar'){\n      //this.inicializar()\n      console.log('actualizando')\n    }else{\n      this.proceso = this.route.snapshot.paramMap.get('proceso')\n    }\n  }\n\n  procesarArchivo(event):void {\n    if (event.target.files.length > 0) {\n      const archivo = event.target.files[0];\n      this.form.patchValue({\n        archivo: archivo\n      });\n    }\n  }\n\n  private obtener_extension(archivo:string){\n    let extension = archivo.split(\".\")\n    console.log(extension[extension.length-1])\n    return extension[-1]\n  }\n  volver(): void{\n    this.location.back()\n  }\n\n\n  registrar(){\n    const formData = new FormData();\n    formData.append('proceso', this.proceso);\n    let archivo = this.obtener_extension(this.form.get('nombre_archivo').value)\n    formData.append('archivo', this.form.get('archivo').value);\n    formData.append('descripcion', this.form.get('descripcion').value);\n    this.procesoService.agregarArchivo(formData).subscribe( data => \n      this.volver()\n    )\n    \n  }\n}\n","<mat-card>\n    <form [formGroup]=\"form\" (ngSubmit)=\"registrar()\" novalidate> \n        <div>\n            <span class=\"titulo\">Agregar archivo</span>\n          </div><br>\n        <input type=\"file\" formControlName='nombre_archivo'  id=\"input\" (change)=\"procesarArchivo($event)\">\n        <label for=\"input\" id=\"label\"><a  color=\"primary\" mat-raised-button><mat-icon>arrow_circle_up</mat-icon>elige un archivo</a></label>\n        <br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Descripcion</mat-label>\n            <input formControlName='descripcion' matInput>\n        </mat-form-field><br>\n        <button type=\"submit\" color=\"primary\" [disabled]=\"form.invalid\"  mat-raised-button>\n            <mat-icon>send</mat-icon>enviar\n        </button>\n        <a color=\"warn\" routerLink=\"/dashboard/abogado/listar-personas\" (click)=\"volver()\" mat-raised-button>\n            <mat-icon>cancelar</mat-icon>cancelar\n        </a>\n    </form>\n    \n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProcesoService } from '../../servicios/proceso.service';\nimport { ConfirmDialogComponent } from \"../../../compartidos/confirm-dialog/confirm-dialog.component\";\nimport { ActivatedRoute } from '@angular/router';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { MatDialog} from '@angular/material/dialog';\nimport { Location } from '@angular/common';\n\n\n@Component({\n  selector: 'app-listar-archivos',\n  templateUrl: './listar-archivos.component.html',\n  styleUrls: ['./listar-archivos.component.css']\n})\nexport class ListarArchivosComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  proceso: number;\n  archivos: any;\n  count : number;\n  next : number;\n  previous : number;\n  pageIndex : number;\n  nombre : string;\n  displayedColumns: string[] = ['archivo', 'descripcion', 'acciones'];\n  constructor(private route: ActivatedRoute, private procesoService: ProcesoService, public dialog: MatDialog, private _snackBar: MatSnackBar,private location: Location) { }\n\n  ngOnInit(): void {\n    this.listadoInicial()\n  }\n\n  ngAfterViewInit() {\n    this.paginator.page.subscribe(\n       (event) => this.listarArchivos(event)\n    );\n  }\n\n  listadoInicial(){\n    this.proceso = +this.route.snapshot.paramMap.get('proceso')\n    this.procesoService.iniciarListadoArchivos(this.proceso).subscribe(data => {\n      this.archivos = data['results'];\n      this.count = data['count'];\n      this.next = data['next'];\n      this.previous = data['previous'];\n      this.pageIndex = 0;\n      console.log(data)\n    })\n  }\n  volver(): void{\n    this.location.back()\n  }\n\n  listarArchivos(event:any):void {\n    if (event.pageIndex === this.pageIndex+1) {\n      this.procesoService.obtenerArchivos(this.next).subscribe(data =>{\n        this.archivos = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(this.archivos)\n      })\n      this.pageIndex++\n    } else {\n      this.procesoService.obtenerNotificaciones(this.previous).subscribe(data =>{\n        this.archivos = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n    })\n    this.pageIndex--\n   }\n  }\n  \n  private openSnackBar(mensaje, accion):void {\n    this._snackBar.open(mensaje, accion, {\n      duration: 5000,\n    });\n  }\n\n  confirmDialog(registro:any): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data:{titulo:'alerta', mensaje:`estas seguro de querer eliminar el registro de ${registro.id}`}\n    })\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if(dialogResult){\n        this.procesoService.eliminarArchivo(registro.id).subscribe(result => {\n          this.listadoInicial()\n          this.openSnackBar(\"registro eliminado\", \"☠️\")\n        })\n      }\n    });\n  }\n  \n  obtenerNombre(): void{\n    let palabras = this.archivos.archivo\n    let indice = palabras.length()\n    this.nombre = palabras[indice-1]\n  }\n}\n","<mat-card>   \r\n    <mat-card-title >\r\n      <mat-toolbar>\r\n        <span class=\"titulo\">Archivos</span>\r\n      </mat-toolbar>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n        <table mat-table [dataSource]=\"archivos\" class=\"mat-elevation-z8\">\r\n            \r\n            <ng-container matColumnDef=\"archivo\">\r\n                <th mat-header-cell *matHeaderCellDef>Archivo</th>\r\n                <td mat-cell *matCellDef=\"let element\"> <a href=\"{{element.archivo}}\">{{element.archivo | archivoNombre}}</a> </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"descripcion\">\r\n                <th mat-header-cell *matHeaderCellDef>Descripcion</th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"acciones\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                  <button mat-icon-button color=\"accent\" (click)=\"volver()\" >\r\n                    <mat-icon>reply</mat-icon>\r\n                  </button>\r\n                  <a routerLink=\"/dashboard/proceso/agregar-archivo/crear/{{proceso}}\"  mat-icon-button color=\"primary\" download=\"archivo\">\r\n                    <mat-icon hr>person_add</mat-icon>\r\n                  </a>\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let element\">  \r\n                  <button  mat-icon-button color=\"warn\" (click)=\"confirmDialog(element)\">\r\n                    <mat-icon>delete_forever</mat-icon>\r\n                  </button>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <mat-paginator  [length]=\"count\" [pageSize]=\"5\"></mat-paginator>\r\n    </mat-card-content>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ProcesoService } from \"../../servicios/proceso.service\";\nimport { Location } from '@angular/common';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-agregar-cautelar',\n  templateUrl: './agregar-cautelar.component.html',\n  styleUrls: ['./agregar-cautelar.component.css']\n})\nexport class AgregarCautelarComponent implements OnInit {\n  private accion: string;\n  cautelar : any;\n  id : number;\n  private proceso : number;\n  form = new FormGroup({\n    proceso : new FormControl(),\n    clase : new FormControl('', [\n      Validators.required\n    ]),\n    estado : new FormControl('',[\n      Validators.required\n    ]),\n    secuestro_info : new FormControl('',[\n      Validators.required\n    ])\n\n  })\n  constructor(private route: ActivatedRoute, private procesoService : ProcesoService,private location: Location) { }\n\n  ngOnInit(): void {\n    this.accion = this.route.snapshot.paramMap.get('accion')\n    this.form.controls['proceso'].setValue(this.proceso)\n    if(this.accion === 'actualizar'){\n      this.inicializar()\n      console.log('actualizando')\n    }else{\n      this.proceso =+ this.route.snapshot.paramMap.get('proceso')\n      this.form.controls['proceso'].setValue(this.proceso)\n    }\n  }\n  private inicializar(){\n    this.id =+  this.route.snapshot.paramMap.get('id')\n    this.procesoService.mostrarCautelar(this.id).subscribe(data => {\n      this.form.controls['proceso'].setValue(data['proceso'])\n      this.form.controls['clase'].setValue(data['clase'])\n      this.form.controls['estado'].setValue(data['estado'])\n      this.form.controls['secuestro_info'].setValue(data['secuestro_info'])\n    })\n  }\n  volver(): void{\n    this.location.back()\n  }\n\n  registrar():void{\n    if (this.accion === 'actualizar') {\n      this.procesoService.actualizarCautelar(this.form.value, this.id).subscribe(data => this.volver())\n    } else {\n      this.procesoService.agregarCautelar(this.form.value).subscribe(data => this.volver())\n    }\n  }\n\n}\n","<mat-card>\n  <form [formGroup]=\"form\" (ngSubmit)=\"registrar()\" novalidate>\n    <div>\n      <span class=\"titulo\">Agregar Cautelar</span>\n    </div>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Clase</mat-label>\n      <select matNativeControl formControlName=\"clase\" required>\n        <option value=\"REALES\">Reales</option>\n        <option value=\"BANCARIAS\">Bancarias</option>\n        <option value=\"DINEARIAS\">Dinearias</option>\n        <option value=\"DOCUMENTALES\">Documentales</option>\n      </select>\n      <mat-error *ngIf=\"form.get('clase').hasError('required')\">\n        <strong>Este campo es obligatorio</strong>\n      </mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>estado</mat-label>\n        <select matNativeControl formControlName=\"estado\" required>\n            <option value=\"ORDENACION\">Ordenacion</option>\n            <option value=\"CONSTITUCION\">Constitucion</option>\n            <option value=\"CLASIFICACION\">Clacificacion</option>\n            <option value=\"CANCELACION\">Cancelacion</option>\n            <option value=\"ACEPTADO\">Aceptado</option>\n          </select>\n        <mat-error *ngIf=\"form.get('estado').hasError('required')\">\n          <strong>Este campo es obligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    <br>\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>secuestro_info</mat-label>\n        <input formControlName='secuestro_info' matInput>\n        <mat-error *ngIf=\"form.get('secuestro_info').hasError('required')\">\n          <strong>Este campo es obligatorio</strong>\n        </mat-error>\n      </mat-form-field>\n    <br>\n    <button type=\"submit\" color=\"primary\" [disabled]=\"form.invalid\"  mat-raised-button>\n        <mat-icon>send</mat-icon>enviar\n    </button>\n    <a color=\"warn\" (click)=\"volver()\" mat-raised-button>\n        <mat-icon>cancelar</mat-icon>cancelar\n    </a>\n  </form>\n</mat-card>\n  \n<!--http://localhost:4200/dashboard/proceso/actualizar-cautelar/agregar/7-->","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProcesoService } from '../../servicios/proceso.service';\nimport { ConfirmDialogComponent } from \"../../../compartidos/confirm-dialog/confirm-dialog.component\";\nimport { ActivatedRoute } from '@angular/router';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { MatDialog} from '@angular/material/dialog';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-listar-cautelar',\n  templateUrl: './listar-cautelar.component.html',\n  styleUrls: ['./listar-cautelar.component.css']\n})\nexport class ListarCautelarComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  cautelares : any;\n  proceso: number;\n  count : number;\n  next : number;\n  previous : number;\n  pageIndex : number;\n  nombre : string;\n  displayedColumns: string[] = ['clase', 'acciones'];\n  constructor(private route: ActivatedRoute, private procesoService: ProcesoService, public dialog: MatDialog, private _snackBar: MatSnackBar, private location: Location) { }\n\n  ngOnInit(): void {\n    this.listadoInicial()\n  }\n  ngAfterViewInit() {\n    this.paginator.page.subscribe(\n       (event) => this.listarCautelares(event)\n    );\n  }\n  listadoInicial(){\n    this.proceso = +this.route.snapshot.paramMap.get('proceso')\n    this.procesoService.iniciarListadoCautelares(this.proceso).subscribe(data => {\n      this.cautelares = data['results'];\n      this.count = data['count'];\n      this.next = data['next'];\n      this.previous = data['previous'];\n      this.pageIndex = 0;\n      console.log(data)\n    })\n  }\n\n  listarCautelares(event:any):void {\n    if (event.pageIndex === this.pageIndex+1) {\n      this.procesoService.obtenerArchivos(this.next).subscribe(data =>{\n        this.cautelares = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(this.cautelares)\n      })\n      this.pageIndex++\n    } else {\n      this.procesoService.obtenerNotificaciones(this.previous).subscribe(data =>{\n        this.cautelares = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n    })\n    this.pageIndex--\n   }\n  }\n  \n  volver(): void{\n    this.location.back()\n  }\n\n  private openSnackBar(mensaje, accion):void {\n    this._snackBar.open(mensaje, accion, {\n      duration: 5000,\n    });\n  }\n\n  confirmDialog(registro:any): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data:{titulo:'alerta', mensaje:`estas seguro de querer eliminar el registro de ${registro.id}`}\n    })\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if(dialogResult){\n        this.procesoService.eliminarCautelar(registro.id).subscribe(result => {\n          this.listadoInicial()\n          this.openSnackBar(\"registro eliminado\", \"☠️\")\n        })\n      }\n    });\n  }\n\n}\n","<mat-card color=\"primary\">   \n    <mat-card-title >\n      <mat-toolbar>\n        <span class=\"titulo\">Medidas cautelares</span>\n      </mat-toolbar>\n    </mat-card-title>\n    <mat-card-content>\n        <table mat-table [dataSource]=\"cautelares\" class=\"mat-elevation-z8\">\n            \n            <ng-container matColumnDef=\"clase\">\n                <th mat-header-cell *matHeaderCellDef>Clase</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.clase}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"acciones\">\n                <th mat-header-cell *matHeaderCellDef>\n                  <a mat-icon-button color=\"accent\" (click)=\"volver()\" >\n                    <mat-icon>reply</mat-icon>\n                  </a>\n                  <a routerLink=\"/dashboard/proceso/agregar-cautelar/crear/{{proceso}}\"  mat-icon-button color=\"primary\">\n                    <mat-icon hr>person_add</mat-icon>\n                  </a>\n                </th>\n                <td mat-cell *matCellDef=\"let element\">  \n                    <a routerLink=\"/dashboard/proceso/mostrar-cautelar/{{element.id}}\" mat-icon-button color=\"accent\">\n                        <mat-icon>face</mat-icon>\n                    </a>\n                    <button  mat-icon-button color=\"warn\" (click)=\"confirmDialog(element)\">\n                        <mat-icon>delete_forever</mat-icon>\n                    </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <mat-paginator  [length]=\"count\" [pageSize]=\"5\"></mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { ProcesoService } from '../../servicios/proceso.service';\nimport { ConfirmDialogComponent } from \"../../../compartidos/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog} from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-mostrar-cautelar',\n  templateUrl: './mostrar-cautelar.component.html',\n  styleUrls: ['./mostrar-cautelar.component.css']\n})\nexport class MostrarCautelarComponent implements OnInit {\n  id: number;\n  cautelar: any;\n  constructor(private location: Location, private route: ActivatedRoute, private procesoService: ProcesoService,public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.mostrarCautelar()\n  }\n\n  mostrarCautelar(): void {\n    this.id=+ this.route.snapshot.paramMap.get('id')\n    this.procesoService.mostrarCautelar(this.id).subscribe(data => {\n      this.cautelar = data\n      console.log(data)\n    })\n  }\n\n  volver(): void{\n    this.location.back()\n  }\n\n\n  confirmDialog(): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data:{titulo:'alerta', mensaje:`estas seguro de querer eliminar este registro`}\n    })\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if(dialogResult){\n        this.procesoService.eliminarCautelar(this.cautelar.id).subscribe(result => {\n          this.volver() \n        })\n      }\n    });\n  }\n\n\n}\n","<mat-card>\n    <mat-card-title>\n        <mat-toolbar>\n            <span class=\"titulo\">Cautelar</span>\n        </mat-toolbar>\n    </mat-card-title> \n    <mat-card-content>\n       <table>\n           <tbody>\n                <tr>\n                    <td><strong>Clase  </strong> </td>\n                    <td>{{cautelar.clase}}</td>\n                </tr>\n                <tr>\n                    <td><strong>Estado  </strong> </td>\n                    <td>{{cautelar.estado}}</td>\n                </tr>\n                <tr>\n                    <td><strong>Información  </strong> </td>\n                    <td>{{cautelar.secuestro_info}}</td>\n                </tr>\n                <tr>\n                    <td style=\"text-align:center\" colspan=\"2\">\n                        <button mat-icon-button color=\"accent\" (click)=\"volver()\" >\n                            <mat-icon>reply</mat-icon>\n                        </button>\n                        <button mat-icon-button color=\"primary\" routerLink=\"/dashboard/proceso/actualizar-cautelar/actualizar/{{cautelar.id}}\">\n                            <mat-icon>create</mat-icon>\n                        </button>\n                        <button mat-icon-button color=\"warn\"  (click)=\"confirmDialog()\">\n                            <mat-icon>delete_forever</mat-icon>\n                        </button>\n                    </td>\n                </tr>\n           </tbody>\n           \n       </table>   \n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { ProcesoService } from \"../../servicios/proceso.service\";\n\n\n@Component({\n  selector: 'app-despacho',\n  templateUrl: './despacho.component.html',\n  styleUrls: ['./despacho.component.css']\n})\nexport class DespachoComponent implements OnInit {\n  @Input() id: any;\n  public despacho: any;\n\n  constructor(private procesoService : ProcesoService) { }\n\n  ngOnInit(): void {\n    this.mostrarDespacho(this.id)\n  }\n  private mostrarDespacho(id:number){\n    this.procesoService.obtenerDespacho(id).subscribe(data => {this.despacho =data})\n  }\n\n}\n","<mat-card>\n        <table style=\"margin: 0 auto;\">\n            <caption>Despacho</caption>\n            <tbody>\n                <tr>\n                    <td >Departamento:</td>\n                    <td class=\"rigth\">{{despacho.departamento}}</td>\n                </tr>\n                <mat-divider></mat-divider>\n                <tr>\n                    <td >Ciudad:</td>\n                    <td class=\"rigth\">{{despacho.ciudad}}</td>\n                </tr>\n                <mat-divider></mat-divider>\n                <tr>\n                    <td >Corporación:</td>\n                    <td class=\"rigth\">{{despacho.corporacion}}</td>\n                </tr>\n                <mat-divider></mat-divider>\n                <tr>\n                    <td>Especialidad:</td>\n                    <td>{{despacho.especialidad}}</td>\n                </tr>\n                <mat-divider></mat-divider>\n                <tr>\n                    <td>Despacho:</td>\n                    <td >{{despacho.despacho}}</td>\n                </tr>\n                <mat-divider></mat-divider>\n                <tr>\n                    <td>Direccción:</td>\n                    <td>{{despacho.direccion}}</td>\n                </tr>\n                <mat-divider></mat-divider>\n                <tr>\n                    <td >Telefono:</td>\n                    <td>{{despacho.telefono}}</td>\n                </tr>\n                <mat-divider></mat-divider>\n                <tr>\n                    <td >Juez:</td>\n                    <td>{{despacho.juez.nombre}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </mat-card>","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { ActivatedRoute } from '@angular/router';\nimport { ProcesoService } from \"../../servicios/proceso.service\";\nimport { Location } from '@angular/common';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-agregar-ejecutivo',\n  templateUrl: './agregar-ejecutivo.component.html',\n  styleUrls: ['./agregar-ejecutivo.component.css']\n})\nexport class AgregarEjecutivoComponent implements OnInit {\n  private accion: string;\n  private proceso: number;\n  private id: number;\n  form = new FormGroup({\n    proceso : new FormControl(),\n    titulo : new FormControl('', [\n      Validators.required\n    ]),\n    obligacion : new FormControl('', [\n      Validators.required\n    ]),\n    clase : new FormControl('', [\n      Validators.required\n    ]),\n    pretension : new FormControl('', [\n      Validators.pattern('^[0-9]*$'),\n      Validators.required\n    ]),\n    cuantia : new FormControl('', [\n      Validators.required\n    ])\n  })\n  constructor(private route: ActivatedRoute, private procesoService : ProcesoService,private location: Location) { }\n\n  ngOnInit(): void {\n    this.proceso = +this.route.snapshot.paramMap.get('proceso')\n    this.accion = this.route.snapshot.paramMap.get('accion')\n    this.form.controls['proceso'].setValue(this.proceso)\n    if(this.accion === 'actualizar'){\n      this.inicializar()\n      console.log('actualizando')\n    }\n    console.log(this.form.value)\n  }\n  volver(): void{\n    this.location.back()\n  }\n\n  public registrar():void {\n    if (this.accion === 'actualizar') {\n      this.procesoService.actualizarEjecutivo(this.id, this.form.value).subscribe(data => console.log(data))\n      console.log(this.form.value)\n      console.log(this.id)\n    }else{\n      this.procesoService.agregarEjecutivo(this.form.value).subscribe(data => console.log(data))\n    }\n    this.location.back()\n  }\n  private inicializar():void{\n    \n    this.procesoService.obtenerEjecutivo(this.proceso).subscribe(data => {\n      this.form.controls['proceso'].setValue(data['proceso'])\n      this.form.controls['titulo'].setValue(data['titulo'])\n      this.form.controls['obligacion'].setValue(data['obligacion'])\n      this.form.controls['clase'].setValue(data['clase'])\n      this.form.controls['pretension'].setValue(data['pretension'])\n      this.form.controls['cuantia'].setValue(data['cuantia'])\n      this.id = data['id']\n    })\n  }\n}\n","<mat-card>\n  <form [formGroup]=\"form\" (ngSubmit)=\"registrar()\" novalidate>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Titulo</mat-label>\n        <select matNativeControl formControlName=\"titulo\" required>\n          <option value=\"VALOR\">Valor</option>\n          <option value=\"EJECUTIVO\">Ejecutivo</option>\n        </select>\n        <mat-error *ngIf=\"form.get('titulo').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Obligacion</mat-label>\n        <select matNativeControl formControlName=\"obligacion\" required>\n          <option value=\"DAR\">Dar</option>\n          <option value=\"HACER\">Hacer</option>\n          <option value=\"NO_HACER\">No hacer</option>\n        </select>\n        <mat-error *ngIf=\"form.get('obligacion').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Clase</mat-label>\n        <select matNativeControl formControlName=\"clase\" required>\n          <option value=\"SINGULAR\">Singular</option>\n          <option value=\"HIPOTECARIO\">Hipotecario</option>\n          <option value=\"MIXTO\">Mixto</option>\n        </select>\n        <mat-error *ngIf=\"form.get('clase').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Pretension</mat-label>\n        <input formControlName='pretension' matInput>\n        <mat-error *ngIf=\"form.get('pretension').hasError('pattern')\">\n          <strong>Solo numeros</strong>\n        </mat-error>\n        <mat-error *ngIf=\"form.get('pretension').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Cunatia</mat-label>\n        <select matNativeControl formControlName=\"cuantia\" required>\n          <option value=\"minima\">minima</option>\n          <option value=\"menor\">menor</option>\n          <option value=\"mayor\">mayor</option>\n        </select>\n        <mat-error *ngIf=\"form.get('cuantia').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n      </mat-form-field>\n      <br>\n      <button type=\"submit\" color=\"primary\" [disabled]=\"form.invalid\"  mat-raised-button>\n        <mat-icon>send</mat-icon>enviar\n      </button>\n      <a color=\"warn\" (click)=\"volver()\"  mat-raised-button>\n        <mat-icon>cancelar</mat-icon>cancelar\n      </a>\n</form>\n\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ProcesoService } from \"../../servicios/proceso.service\";\nimport { Location } from '@angular/common';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-agregar-notificacion',\n  templateUrl: './agregar-notificacion.component.html',\n  styleUrls: ['./agregar-notificacion.component.css']\n})\nexport class AgregarNotificacionComponent implements OnInit {\n  private accion: string;\n  notificacion : any;\n  id : number;\n  private proceso : number;\n  form = new FormGroup({\n    proceso: new FormControl(),\n    tipo: new FormControl('', [\n      Validators.required,\n    ]),\n    mensaje: new FormControl('', [\n      Validators.required,\n    ]),\n    expedicion: new FormControl('', [\n      Validators.required,\n    ]),\n    limite: new FormControl('', [\n      Validators.required,\n    ])    \n  })\n  constructor(private route: ActivatedRoute, private procesoService : ProcesoService,private location: Location) { }\n\n  ngOnInit(): void {\n    this.accion = this.route.snapshot.paramMap.get('accion')\n    this.form.controls['proceso'].setValue(this.proceso)\n    if(this.accion === 'actualizar'){\n      this.inicializar()\n      console.log('actualizando')\n    }else{\n      this.proceso =+ this.route.snapshot.paramMap.get('proceso')\n      this.form.controls['proceso'].setValue(this.proceso)\n    }\n  }\n\n  private formatDate(date):any {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n  private inicializar(){\n    this.id =+  this.route.snapshot.paramMap.get('id')\n    this.procesoService.mostrarNotificacion(this.id).subscribe(data => {\n      this.form.controls['proceso'].setValue(data['proceso'])\n      this.form.controls['tipo'].setValue(data['tipo'])\n      this.form.controls['mensaje'].setValue(data['mensaje'])\n      this.form.controls['expedicion'].setValue(data['expedicion'])\n      this.form.controls['limite'].setValue(data['limite'])\n    })\n  }\n  volver(): void{\n    this.location.back()\n  }\n  registrar():void{\n    let dataParse = this.formatDate(this.form.value.limite)\n    this.form.value.limite = dataParse\n    if (this.accion === 'actualizar') {\n      this.procesoService.actualizarNotificacion(this.form.value, this.id).subscribe(data => this.volver())\n    } else {\n      this.procesoService.agregarNotificacion(this.form.value).subscribe(data => this.volver())\n    }\n  }\n}\n","<mat-card>\n  <form [formGroup]=\"form\" (ngSubmit)=\"registrar()\" novalidate>\n    <div>\n      <span class=\"titulo\">Datos generales</span>\n    </div>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>tipo</mat-label>\n        <input formControlName='tipo' matInput>\n        <mat-error *ngIf=\"form.get('tipo').hasError('required')\">\n          <strong>Este campo es obligatorio</strong>\n        </mat-error>\n        <mat-error *ngIf=\"form.get('tipo').hasError('pattern')\">\n          <strong>los caracteres especiales no estan permitidos</strong>\n        </mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>mensaje</mat-label>\n      <textarea formControlName='mensaje' matInput></textarea>\n      <mat-error *ngIf=\"form.get('mensaje').hasError('required')\">\n        <strong>Este campo es obligatorio</strong>\n      </mat-error>\n      <mat-error *ngIf=\"form.get('mensaje').hasError('pattern')\">\n        <strong>los caracteres especiales no estan permitidos</strong>\n      </mat-error>\n    </mat-form-field>\n    <br>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>expedición</mat-label>\n        <input  matInput type=\"datetime-local\"  formControlName='expedicion'>\n    </mat-form-field>\n    <br>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Limite</mat-label>\n        <input matInput  formControlName='limite' [matDatepicker]=\"myDatepicker\">\n        <mat-datepicker-toggle matSuffix [for]=\"myDatepicker\"></mat-datepicker-toggle>\n        <mat-datepicker #myDatepicker></mat-datepicker>\n        <mat-error *ngIf=\"form.get('limite').hasError('required')\">\n          <strong>Este campo es obligatorio</strong>\n        </mat-error>\n    </mat-form-field>\n    <br>\n    <button type=\"submit\" color=\"primary\" [disabled]=\"form.invalid\"  mat-raised-button>\n        <mat-icon>send</mat-icon>enviar\n    </button>\n    <a color=\"warn\" (click)=\"volver()\"  mat-raised-button>\n        <mat-icon>cancelar</mat-icon>cancelar\n    </a>\n  </form>\n\n</mat-card>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { ProcesoService } from \"../../servicios/proceso.service\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-empresas-notificadas',\n  templateUrl: './empresas-notificadas.component.html',\n  styleUrls: ['./empresas-notificadas.component.css']\n})\nexport class EmpresasNotificadasComponent implements OnInit {\n  @Input() notificados:any;\n  @Input() notificacion:number;\n  @Output() recargar = new EventEmitter<void>();\n  empresas: any;\n  form = new FormGroup({\n    empresa: new FormControl('', [\n      Validators.required,\n      Validators.pattern('^[0-9]+$')\n    ]),\n    notificacion: new FormControl('', [\n      Validators.required,\n      Validators.pattern('^[0-9]+$')\n    ]),\n    notificado: new FormControl(false, [\n      Validators.required\n    ]),\n    medio: new FormControl('', [\n      Validators.required\n    ])\n  })\n  constructor(private procesoService : ProcesoService) { }\n\n  ngOnInit(): void {\n    this.onChanges()\n    this.form.controls['notificacion'].setValue(this.notificacion)\n  }\n  onChanges(): void {\n    this.inicializar()\n  }\n\n  private inicializar(){\n    this.form.get('empresa').valueChanges.subscribe(valor => {\n      this.listarEmpresas(valor)\n    })\n  }\n  private listarEmpresas(empresa: string) {\n    this.procesoService.listarPartesJuridicas(empresa).subscribe(data =>{\n      this.empresas = data\n      console.log(data)\n    })\n  }\n  public registrar():void{\n    this.procesoService.agregarEmpresaNotificada(this.form.value).subscribe(data =>{\n      console.log(data)\n    })\n    this.form.reset()\n    this.form.controls['notificacion'].setValue(this.notificacion)\n    this.recargar.emit()\n    this.inicializar()\n  }\n\n  eliminar(id:number):void{\n    this.procesoService.eliminarEmpresaNotificada(id).subscribe(data =>{\n      console.log(data)\n      this.recargar.emit()\n      this.inicializar() \n    })\n    \n  }\n\n}\n","<mat-card id=\"card\" >\n\t<mat-card-title style=\"text-align: center;\">\n\t\t<mat-toolbar>\n      <span class=\"titulo\">Empresas notificadas</span>\n    </mat-toolbar>\n\t</mat-card-title>\n\n\t<mat-card-content>\n\t\t<mat-accordion class=\"example-headers-align\" multi>\n\t\t<mat-expansion-panel>\n\t\t\t<mat-expansion-panel-header>\n\t\t\t\t<mat-panel-title>\n\t\t\t\t  agregar empresa\n\t\t\t\t</mat-panel-title>\n\t\t\t\t<mat-panel-description>\n\t\t\t\t</mat-panel-description>\n\t\t\t</mat-expansion-panel-header>\n\t\t\t<form [formGroup]=\"form\" (ngSubmit)=\"registrar()\" novalidate>\n                <mat-form-field >\n                    <input type=\"text\"\n                           placeholder=\"Empresa\"\n                           aria-label=\"Number\"\n                           matInput\n                           formControlName='empresa'\n                           [matAutocomplete]=\"auto\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                      <mat-option *ngFor=\"let empresa of empresas\" [value]=\"empresa.id\">\n                        {{empresa.nombre}}\n                      </mat-option>\n                    </mat-autocomplete>\n                    <mat-error *ngIf=\"form.get('empresa').hasError('required')\">\n                        <strong>Este campo es obligatorio</strong>\n                    </mat-error>\n                </mat-form-field><br>\n                <mat-slide-toggle  formControlName=\"notificado\">¿Fue notificado?</mat-slide-toggle><br>\n                <mat-form-field>\n                    <mat-label>Rol</mat-label>\n                    <select matNativeControl formControlName='medio' required>\n                      <option value=\"PERSONAL\">Personal</option>\n                      <option value=\"EMAIL\">Email</option>\n                      <option value=\"TELEFONO\">Telefono</option>\n                    </select>\n                </mat-form-field>\n                <br>\n                <button type=\"submit\" color=\"primary\" [disabled]=\"form.invalid\"  mat-raised-button>\n                    enviar<mat-icon>send</mat-icon>\n                </button>\n            </form>\n\t\t</mat-expansion-panel>\n\t</mat-accordion>\n\t\t<div  *ngFor=\"let notificado of notificados\" class=\"container-row\" style=\"text-align: center;\"> \n\t\t\t\t<div>{{ notificado.empresa.nombre }}</div>\n\t\t\t\t<div>{{notificado.notificado}}</div>\n\t\t\t\t<div><button  mat-icon-button color=\"warn\" (click)=\"eliminar(notificado.id)\">\n\t\t\t\t\t<mat-icon>delete_forever</mat-icon>\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t</div>\n\t</mat-card-content>\n</mat-card>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfirmDialogComponent } from \"../../../compartidos/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog} from '@angular/material/dialog';\nimport { ProcesoService } from \"../../servicios/proceso.service\";\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-listar-notificaciones',\n  templateUrl: './listar-notificaciones.component.html',\n  styleUrls: ['./listar-notificaciones.component.css']\n})\nexport class ListarNotificacionesComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  notificaciones: any;\n  proceso: number;\n  count : number;\n  next : number;\n  previous : number;\n  pageIndex : number;\n  displayedColumns: string[] = ['tipo', 'expedicion', 'limite', 'acciones'];\n  constructor(private route: ActivatedRoute, private procesoService: ProcesoService, public dialog: MatDialog, private _snackBar: MatSnackBar, private location: Location) { }\n\n  ngOnInit(): void {\n    this.listadoInicial()\n  }\n  ngAfterViewInit() {\n    this.paginator.page.subscribe(\n       (event) => this.obtenerListadoNotificaciones(event)\n    );\n  }\n\n  listadoInicial(){\n    this.proceso = +this.route.snapshot.paramMap.get('proceso')\n    this.procesoService.iniciarlistadoNotificaciones(this.proceso).subscribe(data => {\n      this.notificaciones = data['results'];\n      this.count = data['count'];\n      this.next = data['next'];\n      this.previous = data['previous'];\n      this.pageIndex = 0;\n      console.log(data)\n    })\n  }\n\n  public obtenerListadoNotificaciones(event:any):void {\n    if (event.pageIndex === this.pageIndex+1) {\n      this.procesoService.obtenerNotificaciones(this.next).subscribe(data =>{\n        this.notificaciones = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n      })\n      this.pageIndex++\n    } else {\n      this.procesoService.obtenerNotificaciones(this.previous).subscribe(data =>{\n        this.notificaciones = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n    })\n    this.pageIndex--\n   }\n  }\n\n  private openSnackBar(mensaje, accion):void {\n    this._snackBar.open(mensaje, accion, {\n      duration: 5000,\n    });\n  }\n\n  confirmDialog(registro:any): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data:{titulo:'alerta', mensaje:`estas seguro de querer eliminar el registro del proceso ${registro.id} `}\n    })\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if(dialogResult){\n        this.procesoService.eliminarNotificacion(registro.id).subscribe(result => {\n          this.listadoInicial()\n          this.openSnackBar(\"registro eliminado\", \"☠️\")\n        })\n      }\n    });\n  }\n\n  volver(): void{\n    this.location.back()\n  }\n}\n","\n  <mat-card>\n   \n        <mat-card-title >\n          <mat-toolbar>\n            <span class=\"titulo\">Notificaciones</span>\n          </mat-toolbar>\n        </mat-card-title>\n\n    <mat-card-content>\n        <table mat-table [dataSource]=\"notificaciones\" class=\"mat-elevation-z8\">\n            <ng-container matColumnDef=\"tipo\">\n                <th mat-header-cell *matHeaderCellDef> Tipo </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.tipo}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"expedicion\">\n                <th mat-header-cell *matHeaderCellDef> Expedicion </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.expedicion}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"limite\">\n                <th mat-header-cell *matHeaderCellDef> Limite </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.limite}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"acciones\">\n                <th mat-header-cell *matHeaderCellDef>\n                  <button mat-icon-button color=\"accent\" (click)=\"volver()\" >\n                    <mat-icon>reply</mat-icon>\n                  </button>\n                  <a routerLink=\"/dashboard/proceso/agregar-notificacion/crear/{{proceso}}\"  mat-icon-button color=\"primary\">\n                    <mat-icon hr>person_add</mat-icon>\n                  </a>\n                </th>\n                <td mat-cell *matCellDef=\"let element\">  \n                  <button  mat-icon-button color=\"warn\" (click)=\"confirmDialog(element)\">\n                    <mat-icon>delete_forever</mat-icon>\n                  </button>\n                  <a routerLink=\"/dashboard/proceso/mostrar-notificacion/{{element.id}}\" mat-icon-button color=\"primary\">\n                    <mat-icon>face</mat-icon>\n                  </a>\n                  <a routerLink=\"/dashboard/proceso/actualizar-notificacion/actualizar/{{element.id}}\" mat-icon-button color=\"accent\">\n                    <mat-icon>create</mat-icon>\n                  </a>\n                </td>\n              </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <mat-paginator  [length]=\"count\" [pageSize]=\"5\"></mat-paginator>\n\n    </mat-card-content>\n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ProcesoService } from '../../servicios/proceso.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-mostrar-notificacion',\n  templateUrl: './mostrar-notificacion.component.html',\n  styleUrls: ['./mostrar-notificacion.component.css']\n})\nexport class MostrarNotificacionComponent implements OnInit {\n  id: number;\n  notificacion: any;\n  constructor(private procesoService : ProcesoService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.obtenerActuacion()\n  }\n\n\n  obtenerActuacion(): void {\n    this.id=+ this.route.snapshot.paramMap.get('id')\n    this.procesoService.mostrarNotificacion(this.id).subscribe(data => {\n      this.notificacion = data\n      console.log(data)\n    })\n  }\n\n}\n","\n<mat-card>\n        <mat-card-title>\n            <mat-toolbar>\n                <span class=\"titulo\">Notificación</span>\n            </mat-toolbar>\n        </mat-card-title> \n    <mat-card-content>\n        <table>\n            <thead>\n                <th>tipo</th>\n                <th>mensaje</th>\n                <th>expedicion</th>\n                <th>limite</th>\n            </thead>\n            <tbody>\n                <tr>\n                    <td data-label=\"tipo\">{{notificacion.tipo}}</td>\n                    <td data-label=\"mensaje\">{{notificacion.mensaje}}</td>\n                    <td class=\"break\" lang=\"es\" data-label=\"expedicion\">{{notificacion.expedicion}}</td>\n                    <td data-label=\"notificacion\">{{notificacion.limite}}</td>\n                </tr>\n            </tbody>\n\n        </table>\n                \n    </mat-card-content>\n</mat-card>\n<div class=\"cards\">  \n    <app-personas-notificadas [notificados]=\"notificacion.personasNotificadas\" [notificacion]=\"notificacion.id\" (recargar)=\"obtenerActuacion()\"></app-personas-notificadas>\n    <app-empresas-notificadas [notificados]=\"notificacion.empresasNotificadas\" [notificacion]=\"notificacion.id\" (recargar)=\"obtenerActuacion()\"></app-empresas-notificadas>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { ProcesoService } from \"../../servicios/proceso.service\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-personas-notificadas',\n  templateUrl: './personas-notificadas.component.html',\n  styleUrls: ['./personas-notificadas.component.css']\n})\nexport class PersonasNotificadasComponent implements OnInit {\n  @Input() notificados:any;\n  @Input() notificacion:number;\n  @Output() recargar = new EventEmitter<void>();\n  personas: any;\n  form = new FormGroup({\n    persona: new FormControl('', [\n      Validators.required,\n      Validators.pattern('^[0-9]+$')\n    ]),\n    notificacion: new FormControl('', [\n      Validators.required,\n      Validators.pattern('^[0-9]+$')\n    ]),\n    notificado: new FormControl(false, [\n      Validators.required\n    ]),\n    medio: new FormControl('', [\n      Validators.required\n    ])\n  })\n  constructor(private procesoService : ProcesoService) { }\n\n  ngOnInit(): void {\n    this.onChanges()\n    this.form.controls['notificacion'].setValue(this.notificacion)\n  }\n\n  onChanges(): void {\n    this.inicializar()\n  }\n  private inicializar(){\n    this.form.get('persona').valueChanges.subscribe(valor => {\n      this.listarPersonas(valor)\n    })\n  }\n\n  private listarPersonas(persona: string) {\n    this.procesoService.listarPartesNaturales(persona).subscribe(data =>{\n      this.personas = data\n      console.log(data)\n    })\n  }\n  public registrar():void{\n    this.procesoService.agregarPersonaNotificada(this.form.value).subscribe(data =>{\n      console.log(data)\n    })\n    this.form.reset()\n    this.form.controls['notificacion'].setValue(this.notificacion)\n    this.recargar.emit()\n    this.inicializar()\n  }\n\n  eliminar(id:number):void{\n    this.procesoService.eliminarPersonaNotificada(id).subscribe(data =>{\n      console.log(data)\n      this.recargar.emit()\n      this.inicializar()\n    })\n    \n  }\n}\n","<mat-card id=\"card\" >\n\t<mat-card-title style=\"text-align: center;\">\n\t\t<mat-toolbar>\n      <span class=\"titulo\">Personas notificadas</span>\n    </mat-toolbar>\n\t</mat-card-title>\n\n\t<mat-card-content>\n\t\t<mat-accordion class=\"example-headers-align\" multi>\n\t\t<mat-expansion-panel>\n\t\t\t<mat-expansion-panel-header>\n\t\t\t\t<mat-panel-title>\n\t\t\t\t  agregar persona\n\t\t\t\t</mat-panel-title>\n\t\t\t\t<mat-panel-description>\n\t\t\t\t</mat-panel-description>\n\t\t\t</mat-expansion-panel-header>\n\t\t\t<form [formGroup]=\"form\" (ngSubmit)=\"registrar()\" novalidate>\n                <mat-form-field >\n                    <input type=\"text\"\n                           placeholder=\"Persona\"\n                           aria-label=\"Number\"\n                           matInput\n                           formControlName='persona'\n                           [matAutocomplete]=\"auto\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                      <mat-option *ngFor=\"let persona of personas\" [value]=\"persona.id\">\n                        {{persona.nombre}} {{persona.apellido}}\n                      </mat-option>\n                    </mat-autocomplete>\n                    <mat-error *ngIf=\"form.get('persona').hasError('required')\">\n                        <strong>Este campo es obligatorio</strong>\n                    </mat-error>\n                </mat-form-field><br>\n                <mat-slide-toggle  formControlName=\"notificado\">¿Fue notificado?</mat-slide-toggle><br>\n                <mat-form-field>\n                    <mat-label>Rol</mat-label>\n                    <select matNativeControl formControlName='medio' required>\n                      <option value=\"PERSONAL\">Personal</option>\n                      <option value=\"EMAIL\">Email</option>\n                      <option value=\"TELEFONO\">Telefono</option>\n                    </select>\n                </mat-form-field>\n                <br>\n                <button type=\"submit\" color=\"primary\" [disabled]=\"form.invalid\"  mat-raised-button>\n                    enviar<mat-icon>send</mat-icon>\n                </button>\n            </form>\n\t\t</mat-expansion-panel>\n\t</mat-accordion>\n\t\t<div  *ngFor=\"let notificado of notificados\" class=\"container-row\" style=\"text-align: center;\"> \n\t\t\t\t<div>{{ notificado.persona.nombre }} {{ notificado.persona.apellido }} </div>\n\t\t\t\t<div>{{notificado.notificado}}</div>\n\t\t\t\t<div><button  mat-icon-button color=\"warn\" (click)=\"eliminar(notificado.id)\">\n\t\t\t\t\t<mat-icon>delete_forever</mat-icon>\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t</div>\n\t</mat-card-content>\n</mat-card>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ProcesoService } from \"../../servicios/proceso.service\";\nimport { Location } from '@angular/common';\n\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-partes-juridicas',\n  templateUrl: './partes-juridicas.component.html',\n  styleUrls: ['./partes-juridicas.component.css']\n})\nexport class PartesJuridicasComponent implements OnInit {\n  @Input() partes:any;\n  @Input() proceso:number;\n  @Output() recargar = new EventEmitter<void>();\n  form = new FormGroup({\n    empresa: new FormControl('', [\n      Validators.required,\n      Validators.pattern('^[0-9]+$')\n    ]),\n    rol: new FormControl('', [\n      Validators.required,\n    ]),\n    proceso: new FormControl()\n  })\n  empresas: any;\n  constructor(private route: ActivatedRoute, private procesoService : ProcesoService,private location: Location) { }\n\n  ngOnInit(): void {\n    this.onChanges()\n    this.form.controls['proceso'].setValue(this.proceso)\n  }\n\n  onChanges(): void {\n    this.inicializar()\n  }\n  private inicializar(){\n    this.form.get('empresa').valueChanges.subscribe(valor => {\n      this.listarEmpresas(valor)\n    })\n  }\n  private listarEmpresas(empresa: string) {\n    this.procesoService.listarPartesJuridicas(empresa).subscribe(data =>{\n      this.empresas = data\n      console.log(data)\n    })\n  }\n\n  public registrar():void{\n    this.procesoService.agregarParteJuridica(this.form.value).subscribe(data =>{\n      console.log(data)\n      this.recargar.emit()\n    })\n    this.form.reset()\n    this.form.controls['proceso'].setValue(this.proceso)\n    this.inicializar()\n  }\n\n  eliminar(id:number):void{\n    this.procesoService.eliminarParteJuridica(id).subscribe(data =>{\n      console.log(data)\n      this.recargar.emit()\n    })\n    this.inicializar()\n  }\n\n}\n","<mat-card id=\"card\" >\n\t<mat-card-title style=\"text-align: center;\">\n\t\tPartes Juridicas\n\t</mat-card-title>\n\n\t<mat-card-content>\n\t\t<mat-accordion class=\"example-headers-align\" multi>\n\t\t<mat-expansion-panel>\n\t\t\t<mat-expansion-panel-header>\n\t\t\t\t<mat-panel-title>\n\t\t\t\t  agregar empresa\n\t\t\t\t</mat-panel-title>\n\t\t\t\t<mat-panel-description>\n\t\t\t\t</mat-panel-description>\n\t\t\t</mat-expansion-panel-header>\n\t\t\t\t<form [formGroup]=\"form\" (ngSubmit)=\"registrar()\" novalidate>\n\t\t\t\t\t<mat-form-field >\n\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\t   placeholder=\"Empresa\"\n\t\t\t\t\t\t\t   aria-label=\"Number\"\n\t\t\t\t\t\t\t   matInput\n\t\t\t\t\t\t\t   formControlName='empresa'\n\t\t\t\t\t\t\t   [matAutocomplete]=\"auto\">\n\t\t\t\t\t\t<mat-autocomplete #auto=\"matAutocomplete\">\n\t\t\t\t\t\t  <mat-option *ngFor=\"let empresa of empresas\" [value]=\"empresa.id\">\n\t\t\t\t\t\t\t{{empresa.nombre}} {{empresa.apellido}}\n\t\t\t\t\t\t  </mat-option>\n\t\t\t\t\t\t</mat-autocomplete>\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('empresa').hasError('required')\">\n\t\t\t\t\t\t\t<strong>Este campo es obligatorio</strong>\n\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t</mat-form-field>\n\t\t\t\t\t<mat-form-field>\n\t\t\t\t\t\t<mat-label>Rol</mat-label>\n\t\t\t\t\t\t<select matNativeControl formControlName='rol' required>\n\t\t\t\t\t\t  <option value=\"DEMANDADO\">Demandado</option>\n\t\t\t\t\t\t  <option value=\"DEMANDANTE\">Demandante</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('rol').hasError('required')\">\n\t\t\t\t\t\t\t<strong>Este campo es obligatorio</strong>\n\t\t\t\t\t\t  </mat-error>\n\t\t\t\t\t</mat-form-field>\n\t\t\t\t\t<br>\n\t\t\t\t\t<button type=\"submit\" color=\"primary\" [disabled]=\"form.invalid\"  mat-raised-button>\n\t\t\t\t\t\tenviar<mat-icon>send</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t<br>\n\t\t\t\n\t\t</mat-expansion-panel>\n\t</mat-accordion>\n\t\t<div  *ngFor=\"let parte of partes\" class=\"container-row\" style=\"text-align: center;\"> \n\t\t\t\t<div>{{ parte.empresa.nombre }}</div>\n\t\t\t\t<div>{{parte.rol}}</div>\n\t\t\t\t<div><button  mat-icon-button color=\"warn\" (click)=\"eliminar(parte.id)\">\n\t\t\t\t\t<mat-icon>delete_forever</mat-icon>\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t</div>\n\t</mat-card-content>\n</mat-card>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { ErrorStateMatcher } from \"@angular/material/core\";\n\n\nimport { ProcesoService } from \"../../servicios/proceso.service\";\n\n\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-partes',\n  templateUrl: './partes.component.html',\n  styleUrls: ['./partes.component.css']\n})\nexport class PartesComponent implements OnInit {\n  @Input() partes:any;\n  @Input() proceso:number;\n  @Output() recargar = new EventEmitter<void>();\n  form = new FormGroup({\n    persona: new FormControl('', [\n      Validators.required,\n      Validators.pattern('^[0-9]+$')\n    ]),\n    rol: new FormControl('', [\n      Validators.required,\n    ]),\n    proceso: new FormControl()\n  })\n  personas: any;\n  constructor(private procesoService : ProcesoService) { }\n\n  ngOnInit(): void {\n    this.onChanges()\n    this.form.controls['proceso'].setValue(this.proceso)\n  }\n\n  onChanges(): void {\n    this.inicializar()\n  }\n  private inicializar(){\n    this.form.get('persona').valueChanges.subscribe(valor => {\n      this.listarPersonas(valor)\n    })\n  }\n  private listarPersonas(persona: string) {\n    this.procesoService.listarPartesNaturales(persona).subscribe(data =>{\n      this.personas = data\n      console.log(data)\n    })\n  }\n\n  public registrar():void{\n    this.procesoService.agregarParteNatural(this.form.value).subscribe(data =>{\n      console.log(data)\n      this.inicializar()\n    })\n    this.form.reset()\n    this.recargar.emit()\n    this.form.controls['proceso'].setValue(this.proceso)\n\n  }\n\n  eliminar(id:number):void{\n    this.procesoService.eliminarParteNatural(id).subscribe(data =>{\n      console.log(data)\n      this.recargar.emit()\n      this.inicializar()\n    })\n    \n  }\n\n}\n","<mat-card id=\"card\" >\n\t<mat-card-title style=\"text-align: center;\">\n\t\tPartes Naturales\n\t</mat-card-title>\n\n\t<mat-card-content>\n\t\t<mat-accordion class=\"example-headers-align\" multi>\n\t\t<mat-expansion-panel>\n\t\t\t<mat-expansion-panel-header>\n\t\t\t\t<mat-panel-title>\n\t\t\t\t  agregar persona\n\t\t\t\t</mat-panel-title>\n\t\t\t\t<mat-panel-description>\n\t\t\t\t</mat-panel-description>\n\t\t\t</mat-expansion-panel-header>\n\t\t\t\t<form [formGroup]=\"form\" (ngSubmit)=\"registrar()\" novalidate>\n\t\t\t\t\t<mat-form-field >\n\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\t   placeholder=\"Persona\"\n\t\t\t\t\t\t\t   aria-label=\"Number\"\n\t\t\t\t\t\t\t   matInput\n\t\t\t\t\t\t\t   formControlName='persona'\n\t\t\t\t\t\t\t   [matAutocomplete]=\"auto\">\n\t\t\t\t\t\t<mat-autocomplete #auto=\"matAutocomplete\">\n\t\t\t\t\t\t  <mat-option *ngFor=\"let persona of personas\" [value]=\"persona.id\">\n\t\t\t\t\t\t\t{{persona.nombre}} {{persona.apellido}}\n\t\t\t\t\t\t  </mat-option>\n\t\t\t\t\t\t</mat-autocomplete>\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('persona').hasError('required')\">\n\t\t\t\t\t\t\t<strong>Este campo es obligatorio</strong>\n\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t</mat-form-field>\n\t\t\t\t\t<mat-form-field>\n\t\t\t\t\t\t<mat-label>Rol</mat-label>\n\t\t\t\t\t\t<select matNativeControl formControlName='rol' required>\n\t\t\t\t\t\t  <option value=\"DEMANDADO\">Demandado</option>\n\t\t\t\t\t\t  <option value=\"DEMANDANTE\">Demandante</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<mat-error *ngIf=\"form.get('rol').hasError('required')\">\n\t\t\t\t\t\t\t<strong>Este campo es obligatorio</strong>\n\t\t\t\t\t\t  </mat-error>\n\t\t\t\t\t</mat-form-field>\n\t\t\t\t\t<br>\n\t\t\t\t\t<button type=\"submit\" color=\"primary\" [disabled]=\"form.invalid\"  mat-raised-button>\n\t\t\t\t\t\tenviar<mat-icon>send</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t<br>\n\t\t\t\n\t\t</mat-expansion-panel>\n\t</mat-accordion>\n\t\t<div  *ngFor=\"let parte of partes\" class=\"container-row\" style=\"text-align: center;\"> \n\t\t\t\t<div>{{ parte.persona.nombre }} {{ parte.persona.apellido }} </div>\n\t\t\t\t<div>{{parte.rol}}</div>\n\t\t\t\t<div><button  mat-icon-button color=\"warn\" (click)=\"eliminar(parte.id)\">\n\t\t\t\t\t<mat-icon>delete_forever</mat-icon>\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t</div>\n\t</mat-card-content>\n</mat-card>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'archivoNombre'\n})\nexport class ArchivoNombrePipe implements PipeTransform {\n\n  transform(value: string, ...args: unknown[]): any {\n    let partes = value.split(\"/\")\n    let indice = partes.length\n    let resultado = partes[indice-1]\n    return resultado\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { ErrorStateMatcher } from \"@angular/material/core\";\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ProcesoService } from \"../../servicios/proceso.service\";\nimport { Location } from '@angular/common';\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-agregar-proceso',\n  templateUrl: './agregar-proceso.component.html',\n  styleUrls: ['./agregar-proceso.component.scss']\n})\nexport class AgregarProcesoComponent implements OnInit {\n  private accion: string;\n  despachos: any;\n  id:number;\n  form = new FormGroup({\n    numero_proceso : new FormControl('', [\n      Validators.required,\n      Validators.pattern('^[0-9]+$')\n    ]),\n    despacho : new FormControl('', [\n      Validators.required\n    ]),\n    tipo : new FormControl('EJECUTIVO', [\n\n    ]),\n    estado : new FormControl('', [\n      Validators.required\n    ]),\n    litisconsorcio : new FormControl('', [\n      Validators.required\n    ]),\n    descripcion : new FormControl('', [\n      Validators.required\n    ]),\n    fecha_providencia : new FormControl('', [\n      Validators.required\n    ]),\n    fecha_publicacion : new FormControl('', [\n      Validators.required\n    ]),\n    fecha_finalizacion : new FormControl('',[\n      Validators.required\n    ]),\n    \n  })\n\n  constructor(private route: ActivatedRoute, private procesoService : ProcesoService,private location: Location) { }\n\n  ngOnInit(): void {\n    this.accion = this.route.snapshot.paramMap.get('accion')\n    if(this.accion === 'actualizar'){\n      this.inicializar()\n      console.log('actualizando')\n    }\n    this.onChanges();\n  }\n\n  onChanges(): void {\n    this.form.get('despacho').valueChanges.subscribe(valor => {\n      this.listarDespachos(valor)\n    })\n  }\n\n  private listarDespachos(despacho: string) {\n    this.procesoService.listarDespachos(despacho).subscribe(data =>{\n      this.despachos = data\n      console.log(data)\n    })\n  }\n\n\n  private formatDate(date):any {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\n  /**\n   * registrar\n   */\n  public registrar():void {\n    /*let dataParse = this.formatDate(this.form.value.fecha_providencia)\n    this.form.value.fecha_providencia = dataParse\n    dataParse = this.formatDate(this.form.value.fecha_publicacion)\n    this.form.value.fecha_publicacion = dataParse\n    dataParse = this.formatDate(this.form.value.fecha_finalizacion)\n    this.form.value.fecha_finalizacion = dataParse*/\n    if (this.accion === 'actualizar') {\n      this.procesoService.actualizarProceso(this.id, this.form.value).subscribe(proceso => this.location.back())\n    }else{\n      this.procesoService.agregarProcesos(this.form.value).subscribe(proceso => this.location.back())\n    }\n    \n  }\n\n  private inicializar():void{\n    this.id = +this.route.snapshot.paramMap.get('id')\n    this.procesoService.mostrarProceso(this.id).subscribe(data => {\n      this.form.controls['numero_proceso'].setValue(data['numero_proceso'])\n      this.form.controls['despacho'].setValue(data['despacho'])\n      this.form.controls['tipo'].setValue(data['tipo'])\n      this.form.controls['estado'].setValue(data['estado'])\n      this.form.controls['litisconsorcio'].setValue(data['litisconsorcio'])\n      this.form.controls['descripcion'].setValue(data['descripcion'])\n      this.form.controls['fecha_providencia'].setValue(data['fecha_providencia'])\n      this.form.controls['fecha_publicacion'].setValue(data['fecha_publicacion'])\n      this.form.controls['fecha_finalizacion'].setValue(data['fecha_finalizacion'])\n    })\n  }\n}\n","<mat-card>\n\n    \n\n    <form [formGroup]=\"form\" (ngSubmit)=\"registrar()\" novalidate>\n      <mat-form-field appearance=\"outline\">\n          <mat-label>Numero de proceso</mat-label>\n          <input formControlName='numero_proceso' matInput>\n          <mat-error *ngIf=\"form.get('numero_proceso').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n          <mat-error *ngIf=\"form.get('numero_proceso').hasError('pattern')\">\n            <strong>Solo numeros</strong>\n          </mat-error>\n        </mat-form-field>\n  \n        <mat-form-field appearance=\"outline\">\n          <mat-label>tipo</mat-label>\n          <input formControlName='tipo' matInput>\n          <mat-error *ngIf=\"form.get('tipo').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field id=\"despacho\" appearance=\"outline\">\n          <input type=\"text\"\n                placeholder=\"Despachos\"\n                aria-label=\"Number\"\n                matInput\n                formControlName = \"despacho\"\n                [matAutocomplete]=\"auto\">\n          <mat-autocomplete #auto=\"matAutocomplete\" >\n            <mat-option *ngFor=\"let option of despachos\"  [value]=\"option.id\" >\n              {{option.despacho}}\n            </mat-option>\n          </mat-autocomplete>\n        </mat-form-field><br>\n  \n        \n        <mat-form-field appearance=\"outline\">\n          <mat-label>estado</mat-label>\n          <input formControlName='estado' matInput>\n          <mat-error *ngIf=\"form.get('estado').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n          <mat-error *ngIf=\"form.get('estado').hasError('required')\">\n            <strong>Solo numeros</strong>\n          </mat-error>\n        </mat-form-field>\n        \n        <mat-form-field appearance=\"outline\">\n          <mat-label>Litisconsorcio</mat-label>\n          <select matNativeControl formControlName=\"litisconsorcio\" required>\n            <option value=\"NECESARIO\">Necesario</option>\n            <option value=\"FACULTATIVO\">Facultativo</option>\n            <option value=\"CUASI-NECESARIO\">Cuasi necesario</option>\n            <option value=\"NO-APLICA\">NO aplica</option>\n          </select>\n          <mat-error *ngIf=\"form.get('descripcion').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Descripcion</mat-label>\n            <input formControlName='descripcion' matInput>\n          <mat-error *ngIf=\"form.get('descripcion').hasError('required')\">\n            <strong>Este campo es obligatorio</strong>\n          </mat-error>\n        </mat-form-field>\n        \n        <mat-form-field appearance=\"outline\">\n          <mat-label>Providencia</mat-label>\n          <input matInput type=\"datetime-local\" name='fecha_providencia' formControlName='fecha_providencia'>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Publicación</mat-label>\n          <input matInput type=\"datetime-local\"  formControlName='fecha_publicacion'>\n        </mat-form-field>\n        \n        <mat-form-field appearance=\"outline\">\n          <mat-label>Finalización</mat-label>\n          <input matInput type=\"datetime-local\"  formControlName='fecha_finalizacion'>\n        </mat-form-field>\n        <br>\n        <button type=\"submit\" color=\"primary\" [disabled]=\"form.invalid\"  mat-raised-button>\n          <mat-icon>send</mat-icon>enviar\n        </button>\n        <a color=\"warn\" routerLink=\"/dashboard/proceso/listar-procesos\"  mat-raised-button>\n          <mat-icon>cancelar</mat-icon>cancelar\n        </a>\n  </form>\n\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ConfirmDialogComponent } from \"../../../compartidos/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog} from '@angular/material/dialog';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport { ProcesoService } from '../../servicios/proceso.service';\nimport {MatPaginator} from '@angular/material/paginator';\n\nexport interface Proceso{\n  id : number;\n  numero_proceso : string;\n  despacho : string;\n  user : number;\n  tipo : string;\n  estado : string;\n  listisconsorcio : string;\n  descripcion : string;\n  fecha_providencia : any;\n  fecha_publicacion : any;\n  fecha_finalizacion : any; \n}\n\n@Component({\n  selector: 'app-listar-procesos',\n  templateUrl: './listar-procesos.component.html',\n  styleUrls: ['./listar-procesos.component.scss']\n})\nexport class ListarProcesosComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns: string[] = ['proceso', 'estado', 'acciones'];\n  dataSource : any;\n  proceso : Proceso;\n  count : number;\n  next : number;\n  previous : number;\n  pageIndex : number;\n  numero_proceso = new FormGroup({\n    numero_proceso : new FormControl('', [\n      Validators.pattern('^[0-9]+$')\n    ]),\n  })\n  constructor(private procesoService : ProcesoService, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.listadoInicial()\n  }\n\n  ngAfterViewInit() {\n    this.paginator.page.subscribe(\n       (event) => this.obtenerListadoProcesos(event)\n    );\n  }\n\n  listadoInicial(): void {\n    this.procesoService.iniciarListadoProcesos().subscribe(data =>{\n      this.proceso = data['results'];\n      this.count = data['count'];\n      this.next = data['next'];\n      this.previous = data['previous'];\n      this.pageIndex = 0;\n      console.log(data)\n    })\n  }\n\n  public obtenerListadoProcesos(event:any):void {\n    if (event.pageIndex === this.pageIndex+1) {\n      this.procesoService.obtenerProcesos(this.next).subscribe(data =>{\n        this.proceso = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n      })\n      this.pageIndex++\n    } else {\n      this.procesoService.obtenerProcesos(this.previous).subscribe(data =>{\n        this.proceso = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n    })\n    this.pageIndex--\n   }\n  }\n\n  confirmDialog(registro:any): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data:{titulo:'alerta', mensaje:`estas seguro de querer eliminar el registro del proceso ${registro.numero_proceso} `}\n    })\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if(dialogResult){\n        this.procesoService.eliminarProceso(registro.id).subscribe(result => {\n          this.listadoInicial()\n        })\n      }\n    });\n  }\n\n  buscarNumero(){\n    this.paginator.pageIndex=0\n    if (this.numero_proceso.get('numero_proceso').value != \"\") {\n      this.procesoService.listarProcesosId(this.numero_proceso.get('numero_proceso').value).subscribe(data =>{\n        this.proceso = data['results'];\n        this.count = data['count'];\n        this.next = data['next'];\n        this.previous = data['previous'];\n        this.pageIndex = 0;\n        console.log(data)\n      })\n    } else {\n      this.listadoInicial()\n    }\n  }\n\n}\n","<mat-card>\n  <mat-card-title >\n    <mat-toolbar>\n      <span class=\"titulo\">Procesos</span>\n    </mat-toolbar>\n  </mat-card-title>\n  <mat-card-content>\n    <mat-toolbar>\n      <form [formGroup]=\"numero_proceso\" (ngSubmit)=\"buscarNumero()\" class=\"titulo\" novalidate>\n        <mat-form-field>\n        <mat-label>ID</mat-label>\n          <input formControlName='numero_proceso'   matInput>\n        </mat-form-field>\n      </form>\n    </mat-toolbar>\n    <table mat-table [dataSource]=\"proceso\" class=\"mat-elevation-z8\">\n\n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n    \n      <!-- id Column -->\n      <ng-container matColumnDef=\"proceso\">\n        <th mat-header-cell *matHeaderCellDef>ID</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.numero_proceso}} </td>\n      </ng-container>\n    \n      <!-- estado Column -->\n      <ng-container matColumnDef=\"estado\">\n        <th mat-header-cell *matHeaderCellDef> estado </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.estado}} </td>\n      </ng-container>\n    \n      <ng-container matColumnDef=\"acciones\">\n        <th mat-header-cell *matHeaderCellDef>\n          <a routerLink=\"/dashboard/proceso/agregar-proceso/crear\"  mat-icon-button color=\"accent\">\n            <mat-icon hr>person_add</mat-icon>\n          </a>\n        </th>\n        <td mat-cell *matCellDef=\"let element\">  \n          <button  mat-icon-button color=\"warn\" (click)=\"confirmDialog(element)\">\n            <mat-icon>delete_forever</mat-icon>\n          </button>\n          <a routerLink=\"/dashboard/proceso/mostrar-proceso/{{element.id}}\" mat-icon-button color=\"accent\">\n            <mat-icon>gavel</mat-icon>\n          </a>\n        </td>\n      </ng-container>\n    \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    \n      <mat-paginator  [length]=\"count\"\n                      [pageSize]=\"5\"\n      >\n      </mat-paginator>\n  </mat-card-content>\n  \n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProcesoService } from \"../../servicios/proceso.service\";\n\nexport interface Proceso{\n  id : number;\n  numero_proceso : string;\n  despacho : string;\n  user : number;\n  tipo : string;\n  estado : string;\n  listisconsorcio : string;\n  descripcion : string;\n  fecha_providencia : any;\n  fecha_publicacion : any;\n  fecha_finalizacion : any; \n}\n\n@Component({\n  selector: 'app-mostrar-proceso',\n  templateUrl: './mostrar-proceso.component.html',\n  styleUrls: ['./mostrar-proceso.component.scss']\n})\nexport class MostrarProcesoComponent implements OnInit {\n  displayedColumns: string[] = ['campo', 'valor'];\n  id: number;\n  alerta: any;\n  proceso: any;\n  archivos: any;\n  ejecutivo: any;\n  cautelares: any;\n  actuaciones: any;\n  tablaProceso: any;\n  notificaciones: any;\n  tablaEjecutivo: any;\n  constructor(private route: ActivatedRoute, private procesoService: ProcesoService) { }\n\n  ngOnInit(): void {\n    this.id = +this.route.snapshot.paramMap.get('id')\n    this.contarAlertas()\n    this.obtenerProceso()\n    this.contarArchivos()\n    this.contarCautelares()\n    this.obtenerEjecutivo()\n    this.contarActuaciones()\n    this.contarNotificaciones()\n  }\n\n  obtenerProceso(): void {\n    //const id = +this.route.snapshot.paramMap.get('id')\n    this.procesoService.mostrarProceso(this.id).subscribe(data => {\n      this.proceso = data;\n      this.tablaProceso = this.crearFilasTabla(data)\n      console.log(data)\n    })\n  }\n\n  obtenerEjecutivo(): void {  \n    this.procesoService.obtenerEjecutivo(this.id).subscribe(data => {\n      this.ejecutivo = data\n      this.tablaEjecutivo = this.crearFilasTablaJuridico(data)\n      console.log(this.ejecutivo)\n    })\n  }\n\n  contarActuaciones(): void {\n    this.procesoService.contarActuaciones(this.id).subscribe(data => {\n      this.actuaciones = data\n    })\n  }\n\n  contarNotificaciones(): void {\n    this.procesoService.contarNotificaciones(this.id).subscribe(data => {\n      this.notificaciones = data\n    })\n  }\n  contarAlertas(): void {\n    this.procesoService.alertaNotificaciones(this.id).subscribe(data => {\n      this.alerta = data\n    })\n  }\n  contarArchivos(): void {\n    this.procesoService.contarArchivos(this.id).subscribe(data => {\n      this.archivos = data\n    })\n  }\n  contarCautelares(): void {\n    this.procesoService.contarCautelares(this.id).subscribe(data => {\n      this.cautelares = data\n    })\n  }\n  crearFilasTabla(proceso:object): Object[]{\n    let arrayValores = Object.entries(proceso)\n    let arraySalida= []\n    arraySalida = arrayValores.map( function(elemento) {\n\n        return {\"campo\" : elemento[0], \"valor\" : elemento[1]}\n\n    } )\n    arraySalida = arraySalida.filter(function(elemento){\n      return elemento['campo'] !='numero_proceso' && elemento['campo'] != 'id' && elemento['campo'] !='partesNaturales' && elemento['campo'] !='partesJuridicas' && elemento['campo'] != 'despacho'\n    })\n    return arraySalida;\n  }\n\n  crearFilasTablaJuridico(juridico:object): Object[]{\n    let arrayValores = Object.entries(juridico)\n    let arraySalida= []\n    arraySalida = arrayValores.map( function(elemento) {\n\n        return {\"campo\" : elemento[0], \"valor\" : elemento[1]}\n\n    } )\n    arraySalida = arraySalida.filter(function(elemento){\n      return elemento['campo'] !='proceso' && elemento['campo'] != 'id' \n    })\n    return arraySalida;\n  }\n\n  \n\n}\n","<div class=\"container-flex\">\n  <div class=\"horizontal-bloque\">\n    <!--cards notificaciones-->\n    <mat-card class=\"links\">\n      <mat-card-header>\n        <img mat-card-avatar [src]=\"'/static/assets/iconos/megafono.svg'\">\n        <mat-card-title>Notificaciones</mat-card-title>\n      </mat-card-header>  \n      <mat-card-actions class=\"botones\">\n        <a mat-mini-fab color=\"warn\" matBadge=\"{{alerta}}\" routerLink=\"/dashboard/proceso/listar-notificaciones/{{proceso.id}}\" matBadgeColor=\"warn\">📢❗</a>\n        <button mat-mini-fab matBadge=\"{{notificaciones}}\" routerLink=\"/dashboard/proceso/listar-notificaciones/{{proceso.id}}\">🔔</button>\n      </mat-card-actions>\n    </mat-card>\n    <!--cards notificaciones-->\n    <!--cards actuaciones-->\n    <mat-card class=\"links\">\n      <mat-card-header>\n        <img mat-card-avatar [src]=\"'/static/assets/iconos/discussion.svg'\">\n        <mat-card-title>Actuaciones</mat-card-title>\n      </mat-card-header>  \n      <mat-card-actions class=\"botones\">\n        <button mat-mini-fab matBadge=\"{{actuaciones}}\" routerLink=\"/dashboard/proceso/listar-actuaciones/{{proceso.id}}\">📂</button>\n      </mat-card-actions>\n    </mat-card>\n    <!--cards actuaciones-->\n    <!--archivos-->\n    <mat-card class=\"links\">\n      <mat-card-header>\n        <img mat-card-avatar [src]=\"'/static/assets/iconos/search.svg'\">\n        <mat-card-title>Archivos</mat-card-title>\n      </mat-card-header>  \n      <mat-card-actions class=\"botones\">\n        <button mat-mini-fab matBadge=\"{{archivos}}\"  routerLink=\"/dashboard/proceso/listar-archivos/{{proceso.id}}\">💾</button>\n      </mat-card-actions>\n    </mat-card>\n    <!--archivos-->\n    <!--cautelares-->\n    <mat-card class=\"links\">\n      <mat-card-header>\n        <img mat-card-avatar [src]=\"'/static/assets/iconos/ban.svg'\">\n        <mat-card-title>Cautelares</mat-card-title>\n      </mat-card-header>  \n      <mat-card-actions class=\"botones\">\n        <button mat-mini-fab color=\"warn\" matBadge=\"{{cautelares}}\"  matBadgeColor=\"warn\" routerLink=\"/dashboard/proceso/listar-cautelares/{{proceso.id}}\">🚧</button>\n      </mat-card-actions>\n    </mat-card>\n    <!--cautelares-->\n  </div>\n  \n  <!--cardsssssss-->\n  <div class=\"horizontal-bloque\">\n    <div class=\"cards\">\n      <mat-toolbar >\n        <span>{{ proceso.numero_proceso }}</span>\n        <span class=\"example-spacer\"></span>\n        <mat-card-subtitle><button color=\"primary\"  routerLink=\"/dashboard/proceso/actualizar-proceso/actualizar/{{proceso.id}}\" mat-button><mat-icon hr>create</mat-icon>Actualizar</button></mat-card-subtitle>\n      </mat-toolbar>\n      <table mat-table [dataSource]=\"tablaProceso\" >     \n      \n        <ng-container matColumnDef=\"campo\">\n          <th mat-header-cell *matHeaderCellDef>   </th>\n          <td mat-cell *matCellDef=\"let elemento\">{{elemento.campo}} : </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"valor\">\n          <th mat-header-cell *matHeaderCellDef> </th>\n          <td mat-cell *matCellDef=\"let elemento\">  {{elemento.valor}}</td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </div>\n     <!--cardsssssss-->\n     <div class=\"cards\">\n      <mat-toolbar >\n        <span>Juridico</span>\n        <span class=\"example-spacer\"></span>\n        <mat-card-subtitle><button *ngIf=\"ejecutivo.clase!=null\" color=\"primary\"  routerLink=\"/dashboard/proceso/actualizar-ejecutivo/actualizar/{{proceso.id}}\" mat-button><mat-icon hr>create</mat-icon>actualizar</button></mat-card-subtitle>\n        <mat-card-subtitle><button *ngIf=\"ejecutivo.clase==null\" color=\"primary\"  routerLink=\"/dashboard/proceso/agregar-ejecutivo/agregar/{{proceso.id}}\" mat-button><mat-icon hr>create</mat-icon>Agregar</button></mat-card-subtitle>\n      </mat-toolbar>\n      <table mat-table [dataSource]=\"tablaEjecutivo\" >     \n      \n        <ng-container matColumnDef=\"campo\">\n          <th mat-header-cell *matHeaderCellDef>   </th>\n          <td mat-cell *matCellDef=\"let elemento\">{{elemento.campo}} : </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"valor\">\n          <th mat-header-cell *matHeaderCellDef> </th>\n          <td mat-cell *matCellDef=\"let elemento\">  {{elemento.valor}}</td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </div>\n  </div>\n  <!--cardsssssss-->   \n  <div class=\"horizontal-bloque\">\n    <!--partes naturales-->\n    <div class=\"cards\">  \n      <app-partes  [partes]=\"proceso.partesNaturales\" [proceso]=\"proceso.id\" (recargar)=\"obtenerProceso()\"></app-partes>\n    </div>\n    <!--partes juridicas-->\n    <div class=\"cards\">  \n      <app-partes-juridicas  [partes]=\"proceso.partesJuridicas\" [proceso]=\"proceso.id\" (recargar)=\"obtenerProceso()\"></app-partes-juridicas>\n    </div>\n   <!--despacho-->\n  </div>\n  <div class=\"despacho-bloque\">\n    <div class=\"cards\">\n      <app-despacho [id]='proceso.despacho'></app-despacho>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListarProcesosComponent } from \"./proceso/listar-procesos/listar-procesos.component\";\nimport { AgregarProcesoComponent } from \"./proceso/agregar-proceso/agregar-proceso.component\";\nimport { MostrarProcesoComponent } from \"./proceso/mostrar-proceso/mostrar-proceso.component\";\nimport { AgregarEjecutivoComponent } from \"./ejecutivo/agregar-ejecutivo/agregar-ejecutivo.component\";\nimport { AgregarActuacionComponent } from \"./actuaciones/agregar-actuacion/agregar-actuacion.component\";\nimport { ListarActuacionesComponent } from \"./actuaciones/listar-actuaciones/listar-actuaciones.component\";\nimport { AgregarCautelarComponent } from \"./calutelares/agregar-cautelar/agregar-cautelar.component\";\nimport { AgregarNotificacionComponent } from \"./notificaciones/agregar-notificacion/agregar-notificacion.component\";\nimport { AgregarArchivoComponent } from \"./archivos/agregar-archivo/agregar-archivo.component\";\nimport { MostrarNotificacionComponent } from './notificaciones/mostrar-notificacion/mostrar-notificacion.component';\nimport { ListarNotificacionesComponent } from './notificaciones/listar-notificaciones/listar-notificaciones.component';\nimport { MostrarActuacionComponent } from \"./actuaciones/mostrar-actuacion/mostrar-actuacion.component\";\nimport { ListarArchivosComponent } from \"./archivos/listar-archivos/listar-archivos.component\";\nimport { ListarCautelarComponent } from './calutelares/listar-cautelar/listar-cautelar.component';\nimport { MostrarCautelarComponent } from './calutelares/mostrar-cautelar/mostrar-cautelar.component';\nimport { TodasMisNotificacionesComponent } from \"./todas-mis-notificaciones/todas-mis-notificaciones.component\";\n\nconst routes: Routes = [\n  {\n    path: 'listar-procesos',\n    component: ListarProcesosComponent,\n  },\n  {\n    path: 'agregar-proceso/:accion',\n    component: AgregarProcesoComponent,\n  },\n  {\n    path: 'mostrar-proceso/:id',\n    component: MostrarProcesoComponent,\n  },\n  {\n    path: 'actualizar-proceso/:accion/:id',\n    component: AgregarProcesoComponent,\n  },\n  /**\n   *  API ejecutivo\n   */\n  {\n    path: 'agregar-ejecutivo/:accion/:proceso',\n    component: AgregarEjecutivoComponent,\n  },\n  {\n    path: 'actualizar-ejecutivo/:accion/:proceso',\n    component: AgregarEjecutivoComponent,\n  },\n  /**\n   * API actuaciones\n   */\n  {\n    path: 'agregar-actuacion/:accion/:proceso',\n    component: AgregarActuacionComponent,\n  },\n  {\n    path: 'listar-actuaciones/:proceso',\n    component: ListarActuacionesComponent,\n  },\n  {\n    path: 'actualizar-actuacion/:accion/:id',\n    component: AgregarActuacionComponent,\n  },\n  {\n    path: 'mostrar-actuacion/:id',\n    component: MostrarActuacionComponent\n  },\n  /**\n   * API cautelar\n   */\n  {\n    path: 'agregar-cautelar/:accion/:proceso',\n    component: AgregarCautelarComponent,\n  },\n  {\n    path: 'listar-cautelares/:proceso',\n    component: ListarCautelarComponent,\n  },\n  {\n    path: 'mostrar-cautelar/:id',\n    component: MostrarCautelarComponent,\n  },\n  {\n    path: 'actualizar-cautelar/:accion/:id',\n    component: AgregarCautelarComponent,\n  },\n  /**\n   * API notificaciones\n   */\n  {\n    path: 'agregar-notificacion/:accion/:proceso',\n    component: AgregarNotificacionComponent,\n  },\n  {\n    path: 'actualizar-notificacion/:accion/:id',\n    component: AgregarNotificacionComponent,\n  },\n  {\n    path: 'listar-notificaciones/:proceso',\n    component: ListarNotificacionesComponent,\n  },\n  {\n    path: 'mostrar-notificacion/:id',\n    component: MostrarNotificacionComponent,\n  },\n  {\n    path: 'todas-notificaciones',\n    component: TodasMisNotificacionesComponent,\n  },\n  /**\n   * archivos\n   */\n  {\n    path: 'agregar-archivo/:accion/:proceso',\n    component: AgregarArchivoComponent,\n  },\n  {\n    path: 'listar-archivos/:proceso',\n    component: ListarArchivosComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProcesosRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatButtonModule} from '@angular/material/button';  \nimport {MatIconModule} from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field'; \nimport {MatInputModule} from '@angular/material/input'; \nimport {MatDatepickerModule} from '@angular/material/datepicker'; \nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatDialogModule} from '@angular/material/dialog'; \nimport {MatCardModule} from '@angular/material/card'; \nimport {MatListModule} from '@angular/material/list'; \nimport {MatGridListModule} from '@angular/material/grid-list'; \nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatToolbarModule} from '@angular/material/toolbar'; \nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\nimport { CompartidosModule } from \"../compartidos/compartidos.module\";\n\nimport { ProcesosRoutingModule } from './procesos-routing.module';\nimport { ListarProcesosComponent } from './proceso/listar-procesos/listar-procesos.component';\nimport { MostrarProcesoComponent } from './proceso/mostrar-proceso/mostrar-proceso.component';\nimport { AgregarProcesoComponent } from './proceso/agregar-proceso/agregar-proceso.component';\nimport { PartesComponent } from './partes_proceso/partes/partes.component';\nimport { AgregarEjecutivoComponent } from './ejecutivo/agregar-ejecutivo/agregar-ejecutivo.component';\nimport { PartesJuridicasComponent } from './partes_proceso/partes-juridicas/partes-juridicas.component';\nimport { AgregarActuacionComponent } from \"./actuaciones/agregar-actuacion/agregar-actuacion.component\";\nimport { ListarActuacionesComponent } from \"./actuaciones/listar-actuaciones/listar-actuaciones.component\";\nimport { AgregarCautelarComponent } from './calutelares/agregar-cautelar/agregar-cautelar.component';\nimport { ListarCautelarComponent } from './calutelares/listar-cautelar/listar-cautelar.component';\nimport { ListarNotificacionesComponent } from './notificaciones/listar-notificaciones/listar-notificaciones.component';\nimport { AgregarNotificacionComponent } from './notificaciones/agregar-notificacion/agregar-notificacion.component';\nimport { MostrarNotificacionComponent } from './notificaciones/mostrar-notificacion/mostrar-notificacion.component';\nimport { AgregarArchivoComponent } from './archivos/agregar-archivo/agregar-archivo.component';\nimport { DespachoComponent } from './despachos/despacho/despacho.component';\nimport { PersonasNotificadasComponent } from './notificaciones/personas-notificadas/personas-notificadas.component';\nimport { EmpresasNotificadasComponent } from './notificaciones/empresas-notificadas/empresas-notificadas.component';\nimport { MostrarActuacionComponent } from './actuaciones/mostrar-actuacion/mostrar-actuacion.component';\nimport { ListarArchivosComponent } from './archivos/listar-archivos/listar-archivos.component';\nimport { ArchivoNombrePipe } from './pipes/archivo-nombre.pipe';\nimport { MostrarCautelarComponent } from './calutelares/mostrar-cautelar/mostrar-cautelar.component';\nimport { TodasMisNotificacionesComponent } from './todas-mis-notificaciones/todas-mis-notificaciones.component';\n\n@NgModule({\n  declarations: [\n    ListarProcesosComponent, \n    MostrarProcesoComponent, \n    AgregarProcesoComponent, \n    PartesComponent, \n    AgregarEjecutivoComponent, \n    PartesJuridicasComponent,\n    AgregarActuacionComponent,\n    ListarActuacionesComponent,\n    AgregarCautelarComponent,\n    ListarCautelarComponent,\n    ListarNotificacionesComponent,\n    AgregarNotificacionComponent,\n    MostrarNotificacionComponent,\n    AgregarArchivoComponent,\n    DespachoComponent,\n    PersonasNotificadasComponent,\n    EmpresasNotificadasComponent,\n    MostrarActuacionComponent,\n    ListarArchivosComponent,\n    ArchivoNombrePipe,\n    MostrarCautelarComponent,\n    TodasMisNotificacionesComponent\n  ],\n  imports: [\n    CommonModule,\n    ProcesosRoutingModule,\n    CompartidosModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatCardModule,\n    MatListModule,\n    MatGridListModule,\n    MatAutocompleteModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatBadgeModule,\n    MatRadioModule,\n    MatSlideToggleModule,\n    MatSnackBarModule\n  ]\n})\nexport class ProcesosModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Proceso{\n  id : number;\n  numero_proceso : string;\n  despacho : number;\n  user : number;\n  tipo : string;\n  estado : string;\n  listisconsorcio : string;\n  descripcion : string;\n  fecha_providencia : any;\n  fecha_publicacion : any;\n  fecha_finalizacion : any; \n\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcesoService {\n  private url = \"http://127.0.0.1:8000/api/v1.0/procesos/procesos/\"\n  private urlEjecutivo = \"http://127.0.0.1:8000/api/v1.0/procesos/ejecutivos/\"\n  private urlActuaciones = \"http://127.0.0.1:8000/api/v1.0/procesos/actuaciones/\"\n  private urlCautelar = \"http://127.0.0.1:8000/api/v1.0/procesos/cautelares/\"\n  private urlNotificacion = \"http://127.0.0.1:8000/api/v1.0/procesos/notificaciones/\"\n  private urlArchivos = \"http://127.0.0.1:8000/api/v1.0/procesos/archivos/\"\n  constructor(private http: HttpClient) { }\n\n  /**\n   * agregarProcesos\n   */\n  public agregarProcesos(proceso: Proceso) {\n    return this.http.post(this.url, proceso)\n  }\n\n  /**\n   * eliminarProceso\n   */\n  public eliminarProceso(id: number) {\n    const ruta = `${this.url}${id}`\n    return this.http.delete(ruta)\n  }\n\n  /**\n   * mostrarProceso\n   */\n  public mostrarProceso(id: number) {\n    const ruta = `${this.url}${id}`\n    return this.http.get(ruta)\n  }\n\n  public obtenerProcesos(urlPaginacion:any) {\n    return this.http.get(urlPaginacion);\n  }\n  public iniciarListadoProcesos() {\n    return this.http.get(this.url);\n  }\n\n  /**\n   * listrarProcesoId\n   */\n  public listarProcesosId(numero_proceso:number) {\n    let urlProcesos = `${this.url}?numero_proceso=${numero_proceso}`\n    return this.http.get(urlProcesos);\n  }\n\n  public actualizarProceso(id:number, proceso:Proceso){\n    const ruta = `${this.url}${id}/`\n    return this.http.put(ruta, proceso);\n  }\n\n  public listarDespachos(despacho:string){\n    const ruta = `http://127.0.0.1:8000/api/v1.0/procesos/despachos?despacho=${despacho}`\n    return this.http.get(ruta)\n  }\n  /**\n   * permite obtener la informacion de la parte ejecutiva del proceso\n   */\n  public obtenerEjecutivo(proceso: number) {\n    const ruta = `${this.urlEjecutivo}${proceso}`\n    return this.http.get(ruta)\n  }\n  /**\n   * agregar la informacion extra que define el proceso como ejecutivo\n   */\n  public agregarEjecutivo(ejecutivo:any) {\n    return this.http.post(this.urlEjecutivo, ejecutivo)\n  }\n\n  public actualizarEjecutivo(id:number, ejecutivo:any){\n    const ruta = `${this.urlEjecutivo}${id}/`\n    return this.http.put(ruta, ejecutivo);\n  }\n\n    /** \n    Estos metodos pertenecen a la API de partes naturales\n  */\n  /**\n   *  este metodo lista las personanas naturales vinculadas a un proceso para \n   * llenar un formulario de auto-completar\n   */\n  public listarPartesNaturales(nombre:string) {\n    const ruta = `http://127.0.0.1:8000/api/v1.0/abogado/personas/partesPersonas?nombre=${nombre}`\n    return this.http.get(ruta)\n  }\n\n  public agregarParteNatural(persona:any){\n    const ruta = `http://127.0.0.1:8000/api/v1.0/procesos/partes_naturales/` \n    return this.http.post(ruta, persona)\n  }\n\n  public eliminarParteNatural(id:number){\n    const ruta = `http://127.0.0.1:8000/api/v1.0/procesos/partes_naturales/${id}` \n    return this.http.delete(ruta)\n  }\n\n  /** \n    Estos metodos pertenecen a la API de partes juridicas\n  */\n  public listarPartesJuridicas(nombre:string) {\n    const ruta = `http://127.0.0.1:8000/api/v1.0/abogado/empresas/partesJuridicas?nombre=${nombre}`\n    return this.http.get(ruta)\n  }\n\n  public agregarParteJuridica(persona:any){\n    const ruta = `http://127.0.0.1:8000/api/v1.0/procesos/partes_juridico/` \n    return this.http.post(ruta, persona)\n  }\n\n  public eliminarParteJuridica(id:number){\n    const ruta = `http://127.0.0.1:8000/api/v1.0/procesos/partes_juridico/${id}` \n    return this.http.delete(ruta)\n  }\n\n  /** \n    Estos metodos pertenecen a la API de actuaciones\n  */\n  public mostrarActuacion(id:number){\n    const ruta = `${this.urlActuaciones}${id}/`\n    return this.http.get(ruta)\n  }\n  public contarActuaciones(proceso:number){\n    return this.http.get(`${this.urlActuaciones}${proceso}/contar_actuaciones`)\n  }\n  public agregarActuacion(actuacion:any){\n    return this.http.post(this.urlActuaciones, actuacion)\n  }\n  public actualizarActuacion(actuacion:any, id: number){\n    const ruta = `${this.urlActuaciones}${id}/`\n    return this.http.put(ruta, actuacion)\n  }\n  public iniciarListadoActuaciones(proceso:number){\n    return this.http.get(`${this.urlActuaciones}${proceso}/listar_actuaciones`)\n  }\n  public obtenerActuaciones(urlPaginacion:any) {\n    return this.http.get(urlPaginacion);\n  }\n  public obtenerActuacion(id:number){\n    return this.http.get(`${this.urlActuaciones}${id}`)\n  }\n  public eliminarActuacion(id:number){\n    return this.http.delete(`${this.urlActuaciones}${id}/`)\n  }\n\n  /**\n   * metodos para la API de medidas cautelares\n   */\n\n  public mostrarCautelar(id:number){\n    return this.http.get(`${this.urlCautelar}${id}/`)\n  }\n  public agregarCautelar(cautelar:any){\n    return this.http.post(this.urlCautelar, cautelar)\n  }\n  public actualizarCautelar(cautelar:any, id:number){\n    return this.http.put(`${this.urlCautelar}${id}/`, cautelar)\n  }\n  public iniciarListadoCautelares(proceso:number){\n    return this.http.get(`${this.urlCautelar}${proceso}/listar_cautelares`)\n  }\n  public obtenerCautelares(urlPaginacion:any) {\n    return this.http.get(urlPaginacion);\n  }\n  public eliminarCautelar(id:number){\n    return this.http.delete(`${this.urlCautelar}${id}`)\n  }\n  public contarCautelares(proceso:number){\n    return this.http.get(`${this.urlCautelar}${proceso}/contar_cautelares`)\n  }\n\n  /**\n   * metodos para la API de notificaciones\n   */\n  public todasNotificaciones(){\n    return this.http.get(`${this.urlNotificacion}todasNotificaciones/`)\n  }\n  public mostrarNotificacion(id:number){\n    return this.http.get(`${this.urlNotificacion}${id}/`)\n  }\n  public eliminarNotificacion(id:number){\n    return this.http.delete(`${this.urlNotificacion}${id}/`)\n  }\n  public agregarNotificacion(notificacion:any){\n    return this.http.post(this.urlNotificacion, notificacion)\n  }\n  public actualizarNotificacion(notificacion:any, id:number){\n    return this.http.put(`${this.urlNotificacion}${id}/`, notificacion)\n  }\n  public iniciarlistadoNotificaciones(proceso:number){\n    return this.http.get(`${this.urlNotificacion}${proceso}/listar_notificaciones`)\n  }\n  public obtenerNotificaciones(urlPaginacion:any) {\n    return this.http.get(urlPaginacion);\n  }\n  public contarNotificaciones(proceso:number){\n    return this.http.get(`${this.urlNotificacion}${proceso}/contar_notificaciones`)\n  }\n  public alertaNotificaciones(proceso:number){\n    return this.http.get(`${this.urlNotificacion}${proceso}/alerta`)\n  }\n  public agregarPersonaNotificada(notificado:any){\n    return this.http.post(`http://127.0.0.1:8000/api/v1.0/procesos/personas_notificadas/`, notificado)\n  }\n  public eliminarPersonaNotificada(id:number){\n    return this.http.delete(`http://127.0.0.1:8000/api/v1.0/procesos/personas_notificadas/${id}`)\n  }\n  public agregarEmpresaNotificada(notificado:any){\n    return this.http.post(`http://127.0.0.1:8000/api/v1.0/procesos/empresas_notificadas/`, notificado)\n  }\n  public eliminarEmpresaNotificada(id:number){\n    return this.http.delete(`http://127.0.0.1:8000/api/v1.0/procesos/empresas_notificadas/${id}`)\n  }\n  /**\n   * metodos para la API de archivos \n   */\n\n  public mostrarArchivo(id:number){\n    return this.http.get(`${this.urlArchivos}${id}/`)\n  }\n  public agregarArchivo(archivo:any){\n    return this.http.post(this.urlArchivos, archivo)\n  }\n  public actualizarArchivo(archivo:any, id:number){\n    return this.http.put(`${this.urlArchivos}${id}/`, archivo)\n  }\n  public iniciarListadoArchivos(proceso:number){\n    return this.http.get(`${this.urlArchivos}${proceso}/listar_archivos`)\n  }\n  public contarArchivos(proceso:number){\n    return this.http.get(`${this.urlArchivos}${proceso}/contar_archivos`)\n  }\n  public obtenerArchivos(urlPaginacion:any){\n    return this.http.get(urlPaginacion);\n  }\n  public eliminarArchivo(id:number){\n    return this.http.delete(`${this.urlArchivos}${id}`)\n  }\n\n  /**\n   * consulatar despacho\n   */\n  public obtenerDespacho(id:number){\n    return this.http.get(`http://127.0.0.1:8000/api/v1.0/despacho/${id}/`)\n  }\n}\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProcesoService } from \"../servicios/proceso.service\";\nimport {MatPaginator} from '@angular/material/paginator';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-todas-mis-notificaciones',\n  templateUrl: './todas-mis-notificaciones.component.html',\n  styleUrls: ['./todas-mis-notificaciones.component.css']\n})\nexport class TodasMisNotificacionesComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  notificaciones:any;\n  count : number;\n  next : number;\n  previous : number;\n  pageIndex : number;\n  displayedColumns: string[] = ['tipo', 'limite', 'acciones'];\n  constructor(private route: ActivatedRoute, private procesoService: ProcesoService) { }\n\n  ngOnInit(): void {\n    this.listadoInicial()\n  }\n\n  ngAfterViewInit() {\n    this.paginator.page.subscribe(\n       (event) => this.obtenerListadoNotificaciones(event)\n    );\n  }\n\n  listadoInicial(){\n    this.procesoService.todasNotificaciones().subscribe(data => {\n      this.notificaciones = data['results'];\n      this.count = data['count'];\n      this.next = data['next'];\n      this.previous = data['previous'];\n      this.pageIndex = 0;\n      console.log(data)\n    })\n  }\n\n  public obtenerListadoNotificaciones(event:any):void {\n\n  }\n\n}\n","<mat-card>\n  <table mat-table [dataSource]=\"notificaciones\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"tipo\">\n      <th mat-header-cell *matHeaderCellDef>Tipo</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.tipo}} </td>\n    </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"limite\">\n        <th mat-header-cell *matHeaderCellDef> Limite </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.limite}} </td>\n      </ng-container>\n  \n    <ng-container matColumnDef=\"acciones\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\">  \n        <a routerLink=\"/dashboard/proceso/mostrar-proceso/{{element.proceso}}\" mat-icon-button color=\"accent\">\n          <mat-icon>alarm</mat-icon>\n        </a>\n      </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  \n    <mat-paginator  [length]=\"count\"\n                    [pageSize]=\"5\"\n    >\n    </mat-paginator>\n  \n</mat-card>"]}